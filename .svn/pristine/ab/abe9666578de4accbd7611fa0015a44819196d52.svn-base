<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
/**
 * @brief Controller Class GUP dari belanja
 * 
 * Controller Class belanja dari belanja GUP yang merupakan bagian dari
 * Bisnis Belanja
 * 
 * @author Dwi Adi Jaya Antika
 * @author Putu Ari Arjana
 * @author I Wayan Sudharmika
 * @author I Wayan Shandyasa
 */
class Gup extends CI_Controller
{
    var $CI = NULL;
    public function __construct()
        {                                
            $this->CI =& get_instance(); 
            parent::__construct();
            $this->load->helper(array('form','url', 'text_helper','date'));       
            $this->load->database();
            $this->load->library(array('Pagination','image_lib'));
            $this->load->library(array('konversi','Formatting', 'constant'));
			$this->load->model(array('m_gup','m_logic', 'm_settings', 'm_spj', 'm_umum')); 
        }


/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN KOMPONEN
*/
   function select_output()
    {
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $data['output'] = $this->m_gup->getOutputList($jns_kwitansi);        
            $this->load->view('gup/get_mak/getoutput',$data);

	}

/**
*
FUNGSI INI DIGUNAKAN UNTUK MEMBUAT KWITANSI GU BARU
*/    
	function buat_kwitansi(){
		
		//jika belum login, otomatis di redirect
		$this->auth->restrict();
		
		$idu = $this->session->userdata('id_unit');
		$su  = $this->session->userdata('id_subunit');
		$ta  = $this->m_settings->get_tahun_anggaran();
				
		//syarat pengajuan GUP
		//1. Sudah mengajukan UP, dengan melihat sp2d_up atau nilai UP > 0
		$is_sp2d_up_avail = $this->m_logic->check_sp2d_up($ta, $su); 
		
		if(!$is_sp2d_up_avail) {
			$this->session->set_userdata('msg_typ','err');
			$this->session->set_userdata('msg', 'Maaf anda belum mengajukan UP
										 (SP2D UP), Kwitansi belum dapat dibuat');
			redirect('');  			   
		}            
					
		//2. hitung nilai limit yang masih bisa di spjkan untuk up 
		$limit_spjup = $this->m_logic->get_limit_spjup($ta,$su);
				  
		$data['nilai_up'] = $this->m_logic->get_nilai_up($ta, $su);
		$data['sisa_mp']=$this->m_logic->get_sisa_mp($ta, $su);
		$data['limit_spjup']=$limit_spjup;
		$data['nama_unit'] = $this->m_umum->get_nama_unit_by_id($idu);
		$data['nama_sunit'] = $this->m_umum->get_nama_sunit_by_id($su);
		$data['jns_pajak']  = $this->m_gup->get_jenis_pajak();
		
		//ini bisa didapat nantinya dari querystring
		//localhost/siaku/kwitansi/create/2
		//controller : kwitansi
		//method : create
		//param : 2 -> jenis belanja, masuk di jns_belanja
		//parameter ini nanti juga dipakai di kwitansi/jenis_kwitansi
		$data['jns_belanja']= Constant::JB_GUP;
		
		$this->template->load('template','gup/buat_kwitansi/buat_kwitansi',$data);
    }


/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN JENIS KWITANSI
*/	           
    function jenis_kwitansi()
    {
		
		//jika belum login, otomatis di redirect
		$this->auth->restrict();
		
		$idu = $this->session->userdata('id_unit');
		$su  = $this->session->userdata('id_subunit');
		$ta  = $this->m_settings->get_tahun_anggaran();
		
		$jns_kwitansi 		= $this->input->post('jns_kwitansi');
		
		//TODO: Sementara di PENDING filter untuk pengajuan ini, karena sudah
		//dilakukan di fungsi buat_kwitansi
		
		//syarat pengajuan GUP
		//1. Sudah mengajukan UP, dengan melihat sp2d_up atau nilai UP > 0
		//$is_sp2d_up_avail = $this->m_logic->check_sp2d_up($ta, $su); 
		
		//if(!$is_sp2d_up_avail) {
		//  $this->session->set_userdata('msg_typ','err');
		//  $this->session->set_userdata('msg', 'Maaf anda belum mengajukan UP (SP2D UP), Kwitansi belum dapat dibuat');
		//  redirect('');  			   
		//}            
					
		//2. hitung nilai limit yang masih bisa di spjkan untuk up 
		//$limit_spjup = $this->m_logic->get_limit_spjup($ta,$su);

		$data['jns_pajak'] 	= $this->m_gup->get_jenis_pajak();
	    $data['golongan'] 	= $this->m_gup->getGolongan();
		$data['nama_unit'] 	= $this->m_umum->get_nama_unit_by_id($idu);
		$data['nama_sunit'] = $this->m_umum->get_nama_sunit_by_id($su);		
		$data['jns_kwitansi'] 	= $jns_kwitansi;
		
		//ambil jenis belanja dari post parameter
		$data['jns_kwitansi'] 	= $this->input->post("jns_belanja");
		
		switch($jns_kwitansi){
			case "BARANG":
				$this->load->view('gup/buat_kwitansi/kwitansi_barang',$data);
				break;
			case "PERJADIN":
				$this->load->view('gup/buat_kwitansi/kwitansi_perjadin',$data);
				break;
			case "HONOR":
				$this->load->view('gup/buat_kwitansi/kwitansi_honor',$data);
				break;
		}
    }
/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN KOMPONEN
*/

   function simpan_kwitansi_baru()
    {
	//barang
	$jns_kwitansi = $this->input->post('jns_kwitansi');
    $id_subunit = $this->session->userdata('id_subunit');
    $kode_subunit = $this->session->userdata('kode_subunit');
    $unit_kerja = $this->session->userdata('id_unit');
    
    $tgl_kwitansi = $this->input->post('tgl_kwitansi');
    $tempat_kwitansi = $this->input->post('tempat_kwitansi');
    $kegiatan = $this->input->post('kd_giat');
    $kd_output= $this->input->post('kd_output');
    $kd_komponen= $this->input->post('kd_komponen');
    $kd_akun= $this->input->post('kd_akun');    
    $kd_hdr= $this->input->post('kd_hdr');    
    $kd_bas= $this->input->post('kd_bas');    
    $ket_kwitansi= $this->input->post('ket_kwitansi');    
    $nominal= $this->input->post('nominal');       
    $nilai_ppn= $this->input->post('nilai_ppn');      
    $nilai_pph= $this->input->post('nilai_pph');      
    $pelaksana= $this->input->post('pelaksana');      
    $nip_pelaksana= $this->input->post('nip_pelaksana');      
    $penerima= $this->input->post('penerima');      
	}

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN KOMPONEN
*/
   function select_output2()
    {
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $data['output'] = $this->m_gup->getOutputList($jns_kwitansi);        
            $this->load->view('gup/get_mak/getoutput2',$data);

	}

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN KOMPONEN
*/
   function select_output3()
    {
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $data['output'] = $this->m_gup->getOutputList($jns_kwitansi); 
            $this->load->view('gup/get_mak/getoutput3',$data);
	}
	
/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN KOMPONEN
*/
   function select_komponen()
    {
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $kdoutput = $this->input->post('kdoutput');
			//echo $jns_kwitansi, $kdoutput;
          	$data['option_komponen'] = $this->m_gup->getKomponenList($jns_kwitansi,$kdoutput);  
            $this->load->view('gup/get_mak/getkomponen_gu',$data);
	}
	 function select_countsubkomponen()
    {
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $kdoutput = $this->input->post('kdoutput');
			$kdkomponen = $this->input->post('kdkomponen');
			$xxx = $this->m_gup->getCountSubKomponen($jns_kwitansi,$kdoutput,$kdkomponen);  
			echo $xxx;
			//echo $this->db->last_query();
	}
	 function select_subkomponen()
    {
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $kdoutput = $this->input->post('kdoutput');
			$kdkomponen = $this->input->post('kdkomponen');
			$data['option_komponen'] = $this->m_gup->getSubKomponenList($jns_kwitansi,$kdoutput,$kdkomponen); 
			$this->load->view('gup/get_mak/getsubkomponen_gu',$data);
		
	}
	
/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN AKUN
*/            
    
    function select_akun(){
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $kdoutput = $this->input->post('kdoutput');
            $kdkomponen = $this->input->post('kdkomponen');
			$kdskomponen = $this->input->post('kdskomponen');
            $data['option_akun'] = $this->m_gup->getAkunList($jns_kwitansi,$kdoutput,$kdkomponen); 
			//echo $this->db->last_query();        
            $this->load->view('gup/get_mak/getakun_gu',$data);
    }
 	function select_akun_test(){
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $kdoutput = $this->input->post('kdoutput');
            $kdkomponen = $this->input->post('kdkomponen');
			$kdskomponen = $this->input->post('kdskomponen');
            $data['option_akun'] = $this->m_gup->getAkunList_test($jns_kwitansi,$kdoutput,$kdkomponen,$kdskomponen); 
			//echo $this->db->last_query();        
            $this->load->view('gup/get_mak/getakun_gu2',$data);
    }
/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN HEADER
*/	
    function select_header(){
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $kdoutput = $this->input->post('kdoutput');
            $kdkomponen = $this->input->post('kdkomponen');
            $kdakun = $this->input->post('kdakun');
            $data['option_header'] = $this->m_gup->getHeaderList($jns_kwitansi,$kdoutput,$kdkomponen,$kdakun);
            $this->load->view('gup/get_mak/getheader_gu',$data);
    }
 	function select_header_test(){
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $kdoutput = $this->input->post('kdoutput');
            $kdkomponen = $this->input->post('kdkomponen');
			$kdskomponen = $this->input->post('kdskomponen');
            $kdakun = $this->input->post('kdakun');
            $data['option_header'] = $this->m_gup->getHeaderList_test($jns_kwitansi,$kdoutput,$kdkomponen,$kdskomponen,$kdakun);
            $this->load->view('gup/get_mak/getheader_gu',$data);
    }
/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN PAJAK
*/    
  function select_pajak()
    {
            $jns_pajak = $this->input->post('jns_pajak');
			$data['nominal'] = $this->input->post('nominal');
            $data['hasil'] = $this->m_gup->get_nilai_pajak($jns_pajak);    
            $data['id'] = $jns_pajak;
            $this->load->view('gup/gu_select_ppn',$data);
    }    
    
/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN KOMPONEN KE-2
*/
   function select_komponen2()
    {
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $kdoutput = $this->input->post('kdoutput2');
			//echo $jns_kwitansi, $kdoutput;
          	$data['option_komponen2'] = $this->m_gup->getKomponenList($jns_kwitansi,$kdoutput);
			//echo $this->db->last_query();   
            $this->load->view('gup/get_mak/getkomponen_spd',$data);
    }
	function select_countsubkomponen2()
    {
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $kdoutput = $this->input->post('kdoutput2');
			$kdkomponen = $this->input->post('kdkomponen2');
			$xxx = $this->m_gup->getCountSubKomponen($jns_kwitansi,$kdoutput,$kdkomponen);  
			echo $xxx;
	}
	 function select_subkomponen2()
    {
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $kdoutput = $this->input->post('kdoutput2');
			$kdkomponen = $this->input->post('kdkomponen2');
			$data['option_komponen'] = $this->m_gup->getSubKomponenList($jns_kwitansi,$kdoutput,$kdkomponen); 
			$this->load->view('gup/get_mak/getsubkomponen_spd',$data);
		
	}

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN AKUN KE-2
*/
    function select_akun2(){
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $kdoutput = $this->input->post('kdoutput2');
            $kdkomponen = $this->input->post('kdkomponen2');
            $data['option_akun2'] = $this->m_gup->getAkunList($jns_kwitansi,$kdoutput,$kdkomponen);        
            $this->load->view('gup/get_mak/getakun_spd',$data);
    }
	function select_akun_test2(){
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $kdoutput = $this->input->post('kdoutput');
            $kdkomponen = $this->input->post('kdkomponen');
			$kdskomponen = $this->input->post('kdskomponen');
            $data['option_akun2'] = $this->m_gup->getAkunList_test2($jns_kwitansi,$kdoutput,$kdkomponen,$kdskomponen); 
            $this->load->view('gup/get_mak/getakun_spd2',$data);
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN HEADER KE-2
*/	
    function select_header2(){
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $kdoutput = $this->input->post('kdoutput2');
            $kdkomponen = $this->input->post('kdkomponen2');
            $kdakun = $this->input->post('kdakun2');
            $data['option_header2'] = $this->m_gup->getHeaderList($jns_kwitansi,$kdoutput,$kdkomponen,$kdakun);
            $this->load->view('gup/get_mak/getheader_spd',$data);
    }
	function select_header_test2(){
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $kdoutput = $this->input->post('kdoutput2');
            $kdkomponen = $this->input->post('kdkomponen2');
			$kdskomponen = $this->input->post('kdskomponen2');
            $kdakun = $this->input->post('kdakun2');
            $data['option_header2'] = $this->m_gup->getHeaderList_test2($jns_kwitansi,$kdoutput,$kdkomponen,$kdakun,$kdskomponen);
            $this->load->view('gup/get_mak/getheader_spd',$data);
    }
/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN KOMPONEN KE-3
*/
   function select_komponen3()
    {
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $kdoutput = $this->input->post('kdoutput3');
			//echo $jns_kwitansi, $kdoutput;
          	$data['option_komponen3'] = $this->m_gup->getKomponenList($jns_kwitansi,$kdoutput);   
            $this->load->view('gup/get_mak/getkomponen_honor',$data);
    }
	function select_countsubkomponen3()
    {
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $kdoutput = $this->input->post('kdoutput3');
			$kdkomponen = $this->input->post('kdkomponen3');
			$xxx = $this->m_gup->getCountSubKomponen($jns_kwitansi,$kdoutput,$kdkomponen);  
			echo $xxx;
	}
	 function select_subkomponen3()
    {
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $kdoutput = $this->input->post('kdoutput3');
			$kdkomponen = $this->input->post('kdkomponen3');
			$data['option_komponen'] = $this->m_gup->getSubKomponenList($jns_kwitansi,$kdoutput,$kdkomponen); 
			$this->load->view('gup/get_mak/getsubkomponen_honor',$data);
		
	}


/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN AKUN EK-3
*/
    function select_akun3(){
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $kdoutput = $this->input->post('kdoutput3');
            $kdkomponen = $this->input->post('kdkomponen3');
            $data['option_akun3'] = $this->m_gup->getAkunList($jns_kwitansi,$kdoutput,$kdkomponen);        
            $this->load->view('gup/get_mak/getakun_honor',$data);
    }
	function select_akun_test3(){
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $kdoutput = $this->input->post('kdoutput');
            $kdkomponen = $this->input->post('kdkomponen');
			$kdskomponen = $this->input->post('kdskomponen');
            $data['option_akun'] = $this->m_gup->getAkunList_test($jns_kwitansi,$kdoutput,$kdkomponen,$kdskomponen);        
            $this->load->view('gup/get_mak/getakun_honor2',$data);
    }
/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN HEADER KE-3
*/	
    function select_header3(){
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $kdoutput = $this->input->post('kdoutput3');
            $kdkomponen = $this->input->post('kdkomponen3');
            $kdakun = $this->input->post('kdakun3');
            $data['option_header2'] = $this->m_gup->getHeaderList($jns_kwitansi,$kdoutput,$kdkomponen,$kdakun);
            $this->load->view('gup/get_mak/getheader_honor',$data);
    }
	function select_header_test3(){
            $jns_kwitansi = $this->input->post('jns_kwitansi');
            $kdoutput = $this->input->post('kdoutput');
            $kdkomponen = $this->input->post('kdkomponen');
			$kdskomponen = $this->input->post('kdskomponen');
            $kdakun = $this->input->post('kdakun');
            $data['option_header2'] = $this->m_gup->getHeaderList_test2($jns_kwitansi,$kdoutput,$kdkomponen,$kdakun,$kdskomponen);
            $this->load->view('gup/get_mak/getheader_honor',$data);
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN JENIS HONOR
*/
    function jenis_honor()
    {
		$jns_honor = $this->input->post('jns_honor');
		
		if($jns_honor=='1')
		{ $this->load->view('gup/rincian_honor/honor_1'); }
		else
		if($jns_honor=='2')
		{ $this->load->view('gup/rincian_honor/honor_2'); }
		else
		if($jns_honor=='3')
		{ $this->load->view('gup/rincian_honor/honor_3'); }
		else
		if($jns_honor=='4')
		{ $this->load->view('gup/rincian_honor/honor_4'); }
		else
		if($jns_honor=='5')
		{ $this->load->view('gup/rincian_honor/honor_5'); }
		else
		if($jns_honor=='6')
		{ $this->load->view('gup/rincian_honor/honor_6'); }
		else
		if($jns_honor=='7')
		{ $this->load->view('gup/rincian_honor/honor_7'); }
		else
		if($jns_honor=='8')
		{ $this->load->view('gup/rincian_honor/honor_8'); }
    }


/**
*
FUNGSI INI DIGUNAKAN UNTUK MENYIMPAN KWITANSI BARU
*/
function simpan_kwitansi(){
        //nama tombol    
    //$jum_paguMP=$this->m_gup->jum_paguMP();
    //$jum_summKwitansi=$this->m_gup->jum_summKwitansi();
    
    $tmbl_simpan=$this->input->post('simpan');
    $jns_kwitansi = $this->input->post('jns_kwitansi');
    $subunit = $this->session->userdata('id_subunit');
    $kode_subunit = $this->session->userdata('kode_subunit');
    $unit_kerja = $this->session->userdata('id_unit');
    $tgl_kwitansi = $this->input->post('tgl_kwitansi');
    $tpt_kwitansi = $this->input->post('tempat_kwitansi');
    $kegiatan = $this->input->post('kegiatan');
    $ket_spd= $this->input->post('ket_spd');
    $ket_kwitansi = $this->input->post('ket_kwitansi');
    $nominal = $this->input->post('nominal_bb');
    $j_pajak = $this->input->post('jns_pajak');
    $ppn = $this->input->post('p_ppn');
    $pph = $this->input->post('p_pph');
    $pengambil = $this->input->post('pelaksana');
    $penerima = $this->input->post('penerima_bb');
    $kdoutput = $this->input->post('kdoutput');
    $komponen = $this->input->post('kdkomponen');
    $darne = $this->input->post('darne'); 
    $akun =  $this->input->post('kdakun');
    $header = $this->input->post('id_header');
    $nip_pengambil= $this->input->post('nip_pelaksana');
    
    if($darne == 0){
    	$nama = $this->m_gup->getnamaList($kode_subunit,$kdoutput,$komponen,$akun,$header);
    	foreach($nama->result_array() as $row){
    		$nmoutput = $row['nmoutput'];
    		$nmkomponen = $row['nmkomponen'];
    		$nmakun = $row['nmakun'];
    		$nmsubkomponen = $row['nmskomponen'];
    		$nmheader = $row['hdr'];
    	}
    	$subkomponen='';
    }else{
    	$subkomponen = $this->input->post('kdskomponen');
    	$nama = $this->m_gup->getnamaListSub($kode_subunit,$kdoutput,$komponen,$subkomponen,$akun,$header);
    	foreach($nama->result_array() as $row){
    		$nmoutput = $row['nmoutput'];
    		$nmkomponen = $row['nmkomponen'];
    		$nmakun = $row['nmakun'];
    		$nmsubkomponen = $row['nmskomponen'];
    		$nmheader = $row['hdr'];
    	}
    }
    
    // SPD
    $pp_spd = $this->input->post('pp_spd');
    $no_spd = $this->input->post('no_spd');
    $dari = $this->input->post('dari');
    $tujuan = $this->input->post('tujuan');
    $yg_bepergian = $this->input->post('yg_bepergian');
    $tempat = $this->input->post('tmpt');
    $nip = $this->input->post('nip');
    $maksud = $this->input->post('maksud');
    $tgl_b = $this->input->post('tgl_b');
    $tgl_k = $this->input->post('tgl_k');
    $ket_spd = $this->input->post('ket_spd');
    $kdoutput2 = $this->input->post('kdoutput2');
    $komponen2 = $this->input->post('kdkomponen2');
    $akun2 =  $this->input->post('kdakun2');
    $header2 = $this->input->post('id_header2');
    $golongan2=$this->input->post('golongan_spd');
    $subkomponen2 = $this->input->post('kdskomponen2');
    
    if($darne == 0){
    	$nama = $this->m_gup->getnamaList($kode_subunit,$kdoutput2,$komponen2,$akun2,$header2);
    	foreach($nama->result_array() as $row2){
    		$nmoutput2 = $row2['nmoutput'];
    		$nmkomponen2 = $row2['nmkomponen'];
    		$nmakun2 = $row2['nmakun'];
    		$nmsubkomponen2 = $row2['nmskomponen'];
    		$nmheader2 = $row2['hdr'];
    	}
    	$subkomponen2='';
    }else{
    	$subkomponen2 = $this->input->post('kdskomponen2');
    	$nama = $this->m_gup->getnamaListSub($kode_subunit,$kdoutput2,$komponen2,$subkomponen2,$akun2,$header2);
    	foreach($nama->result_array() as $row2){
    		$nmoutput2 = $row2['nmoutput'];
    		$nmkomponen2 = $row2['nmkomponen'];
    		$nmakun2 = $row2['nmakun'];
    		$nmsubkomponen2 = $row2['nmskomponen'];
    		$nmheader2 = $row2['hdr'];
    	}
    }
    // HONOR
    
    $tpt_kwitansi3= $this->input->post('tpt_kwitansi3');
    $kdoutput3= $this->input->post('kdoutput3');
    $kdkomponen3= $this->input->post('kdkomponen3');
    $kdakun3= $this->input->post('kdakun3');
    $id_header3= $this->input->post('id_header3');
    $ket_kwitansi3= $this->input->post('ket_kwitansi3');
    $ket_sptb3= $this->input->post('ket_sptb3');
    $pelaksana_honor= $this->input->post('pelaksana_honor');
    $nip_pelaksana_honor= $this->input->post('nip_pelaksana_honor');
    $penerima_honor= $this->input->post('penerima_honor');    
    $nip_penerima_honor= $this->input->post('nip_penerima_honor');    
    $no_sk= $this->input->post('no_sk');
    $kop_honor= $this->input->post('kop_honor');
    $tgl_sk= $this->input->post('tgl_sk');
    $jns_honor= $this->input->post('jns_honor');
    $subkomponen3 = $this->input->post('kdskomponen3');
    
            $namazz= $this->input->post('nama');
            $jabatan= $this->input->post('jabatan');
            $golongan= $this->input->post('golongan');
            $jml_org= $this->input->post('jml_org');
            $h_naskah= $this->input->post('h_naskah');
            $nama_mhs= $this->input->post('nama_mhs');
            $nim_mhs= $this->input->post('nim_mhs');
    		$kd_mk= $this->input->post('kd_mk');    
            $m_kul= $this->input->post('m_kul');    
            $kls= $this->input->post('kls');    
            $jml_hadir= $this->input->post('jml_hadir');    
            $jml_bln= $this->input->post('jml_bln');    
            $ptkp= $this->input->post('ptkp'); 
            $pkp= $this->input->post('pkp');    
            $jml_hari= $this->input->post('jml_hari');    
            $bruto= $this->input->post('bruto');
    
    if($darne == 0){
    	$nama = $this->m_gup->getnamaList($kode_subunit,$kdoutput3,$kdkomponen3,$kdakun3,$id_header3);
    	foreach($nama->result_array() as $row3){
    		$nmoutput3 = $row3['nmoutput'];
    		$nmkomponen3 = $row3['nmkomponen'];
    		$nmakun3 = $row3['nmakun'];
    		$nmsubkomponen3 = $row3['nmskomponen'];
    		$nmheader3 = $row3['hdr'];
    	}
    	$subkomponen3='';
    }else{
    	$subkomponen3 = $this->input->post('kdskomponen3');
    	$nama = $this->m_gup->getnamaListSub($kode_subunit,$kdoutput3,$kdkomponen3,$subkomponen3,$kdakun3,$id_header3);
    	foreach($nama->result_array() as $row3){
    		$nmoutput3 = $row3['nmoutput'];
    		$nmkomponen3 = $row3['nmkomponen'];
    		$nmakun3 = $row3['nmakun'];
    		$nmsubkomponen3 = $row3['nmskomponen'];
    		$nmheader3 = $row3['hdr'];
    	}
    }
    
    $kode_bas1 = $this->input->post('kode_bas1');
    $kode_bas2 = $this->input->post('kode_bas2');
    $kode_bas3 = $this->input->post('kode_bas3');
    
    $this->load->model('m_gup');
    
        if($tmbl_simpan=='Simpan')
        {
            if($jns_kwitansi=='BARANG')
            {			
    			$jns_kwitansi=1;
                $success=$this->m_gup->simpan_bb( 
                                                        $jns_kwitansi, 
                                                        $subunit, 
                                                        $unit_kerja, 
                                                        $tgl_kwitansi,  
                                                        $tpt_kwitansi, 
                                                        $kegiatan,  
                                                        $akun, 
                                                        $ket_kwitansi, 
                                                        $nominal, 
                                                        $j_pajak,
                                                        $ppn, 
                                                        $pph, 
                                                        $pengambil, 
                                                        $penerima,
                                                        $kdoutput,
                                                        $komponen,
                                                        $nip_pengambil,
                                                        $nmoutput,$nmkomponen,$nmakun,$header,$nmheader,$nmsubkomponen,$subkomponen,
    													$kode_bas1
                                                      );                                    
                                        
                
            }
            else if($jns_kwitansi=='PERJADIN')
            {
    			$jns_kwitansi=2;
                $perincian=$this->input->post('perincian');
                $jumlah=$this->input->post('jumlah');
                $pph=$this->input->post('pph');
                $success=$this->m_gup->simpan_spd( $subunit, 
                                                    $jns_kwitansi,  
                                                    $unit_kerja, 
                                                    $tgl_kwitansi, 
                                                    $pp_spd, 
                                                    $no_spd, 
                                                    $dari, 
                                                    $tujuan, 
                                                    $yg_bepergian, 
                                                    $nip, 
                                                    $maksud, 
                                                    $tgl_b, 
                                                    $tgl_k,
    												$tempat, 
                                                    $ket_spd, 
                                                    $kdoutput2,
                                                    $komponen2,
                                                    $akun2, 
                                                    $golongan2,
                                                    $perincian,
                                                    $jumlah,
                                                    $pph,$nmoutput2,$nmkomponen2,$nmakun2,$header2,$nmheader2,$nmsubkomponen2,$subkomponen2,
    												$kode_bas2
                                                    );    
                                    
                 
                    
            }else if($jns_kwitansi=='HONOR'){
                $jns_kwitansi=3;
                $success=$this->m_gup->simpan_honor_gup(
    												$subunit, 
    												$jns_kwitansi, 
    												$unit_kerja, 
    												$tgl_kwitansi, 
    												
    												$tpt_kwitansi3, 
    												$kdoutput3, 
    												$kdkomponen3, 
    												$kdakun3, 
    												$id_header3, 
    												$ket_kwitansi3, 
    												$ket_sptb3, 
    												$pelaksana_honor, 
    												$nip_pelaksana_honor, 
    												$penerima_honor, 
    												$no_sk,
    												$tgl_sk, 
    												$kop_honor, 
    												$jns_honor, 
    												$namazz, 
    												$jabatan, 
    												$golongan, 
    												$jml_org, 
    												$h_naskah, 
    												$nama_mhs, 
    												$nim_mhs, 
    												$kd_mk,     
    												$m_kul,     
    												$kls,     
    												$jml_hadir,     
    												$jml_bln,     
    												$ptkp, 
    												$pkp,     
    												$jml_hari,     
    												$bruto,
    												$nmoutput3,$nmkomponen3,$nmakun3,$id_header3,$nmheader3,$nmsubkomponen3,$subkomponen3,
    												$nip_penerima_honor, $kode_bas3
                                                );                                    
            }
        }
}

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN DAFTAR KWITANSI
*/
function daftar_kuitansi_gu(){   
        if($this->auth->is_logged_in() == true){ 
            
          $data['hasil']= $this->m_gup->data_kuitansi();
		  //echo $this->db->last_query();
          $data['jum_kwitansi']= $this->m_gup->jum_kwitansi();
          $this->template->load('template','gup/gu_daftar_kuitansi',$data);
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN DAFTAR KWITANSI
*/
function info_kwitansi(){   
        if($this->auth->is_logged_in() == true){ 
		
          $data['nama_subunit']= $this->m_gup->get_nm_subunit();
          $data['hasil']= $this->m_gup->semua_data_kuitansi();
          $data['jum_kwitansi']= $this->m_gup->info_jum_kwitansi();
          $this->template->load('template','gup/info_daftar_kwitansi',$data);
        }
    }


/**
*
FUNGSI INI DIGUNAKAN UNTUK MENMPILKAN FORM TAMBAH HONOR
*/
function tambah_honor()
       {   
        if($this->auth->is_logged_in() == true)
        { 
          $this->load->view('gup/get_honor');
        }
    }


/**
*
FUNGSI INI DIGUNAKAN UNTUK MENYIMPAN DAFTAR HONOR
*/
function simpan_honor()
       {   
        if($this->auth->is_logged_in() == true)
        { 
          $id=$this->input->post('id');
          $nama=$this->input->post('nama');
          $golongan=$this->input->post('golongan');
          $jabatan=$this->input->post('jabatan');
          $bruto=$this->input->post('bruto');
          $golongan2=substr($golongan,-4);
          $pph=strstr($golongan,'--',true);
          
          $success=$this->m_gup->simpan_honor( 
                                                    $id, 
                                                    $nama,
                                                    $golongan2, 
                                                    $jabatan, 
                                                    $bruto, 
                                                    $pph
                                                    );                                    
                                
                 if($success) 
                { 
                     $id=$this->input->post('id');
                       $data['tampil'] = $this->m_gup->tampil_honor($id);
                       $data['cek'] = $this->m_gup->cek_honor($id); 
                       $this->load->view('gup/get_honor',$data);
                }
         
        }
    }
	
/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN PREVIEW KWITANSI
*/	
    function preview_kwitansi()
    {
         $th = $this->uri->segment(3); 
         $id = $this->uri->segment(4); 
         $data['hasil'] = $this->m_gup->getKuitansi($id,$th); 
         $data['data'] = $this->m_gup->getNamattd();
         $data['get_nama_unit'] = $this->m_gup->get_nama_unit();
         $this->template->load('template','gup/preview_kwitansi_subunit',$data);
        
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN PREVIEW KWITANSI VERIFIKASI
*/	
    function preview_kwitansi_veri()
    {
        $th = $this->uri->segment(3); 
         $id = $this->uri->segment(4); 
         $id_subunit = $this->uri->segment(5); 
         $data['hasil'] = $this->m_gup->getKuitansi_veri($id,$th);
         $data['data'] = $this->m_gup->getNamattd();
         $data['get_nama_unit'] = $this->m_gup->get_nama_unit();
         //echo $this->db->last_query();
         $data['pajak'] = $this->m_gup->get_jenis_pajak_veri($id);
         $data['id_subunit'] = $id_subunit;
         $this->template->load('template','gup/ver_gu/unit/preview_kwitansi_unit',$data);
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILLKAN PREVIEW SPTB
*/	
    function preview_sptb()
    {
         $this->template->load('template','gup/preview_sptb');
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENGIRIM KWITANSI
*/	
    function kirim_kwitansi(){   
        if($this->auth->is_logged_in() == true){        
          $id_subunit = $this->session->userdata('id_subunit');
          $th = date('y');
          $bl = date('m');
          $success = $this->m_gup->cek_ada_kwitansi($id_subunit,$th,$bl);
          if($success){
              $daftar_up = $this->m_gup->daftar_gu_subunit($id_subunit,$th,$bl);
              foreach($daftar_up->result_array() as $row){
                  $id_kwitansi = $row['id_kwitansi'];
                  $this->m_gup->ubah_status_gu_ajukan($id_subunit,$id_kwitansi,$th);
              }
                
              $this->m_gup->masuk_waktu_pengajuan($id_kwitansi,$th); 
              //$this->munit->masuk_rekap($id_subunit,$daftar_up); 
              ?>    
                <script type="text/javascript" language="javascript">
                alert("Kwitansi berhasil dikirim");
				window.location.href='daftar_kuitansi_gu';
                </script> 
              <?php        
              $this->template->load('template','unit/index.php');
          }else{
              ?>    
              <script type="text/javascript" language="javascript">
              alert("Pengiriman Gagal... Tidak Ada Data yang dikirim!!");
			  window.location.href='daftar_kuitansi_gu';
              </script> 
              <?php        
              $this->template->load('template','unit/index.php');
          }
        }
    }
    
/**
*
FUNGSI INI DIGUNAKAN UNTUK VERIFIKASI KWITANSI
*/
    function ver_kwitansi(){
         if($this->auth->is_logged_in() == true){ 
          $id_unit = $this->session->userdata('id_unit');  
          $data['daftar_unit'] = $this->m_gup->getUnitList($id_unit);
         // echo $this->db->last_query();
          $jumlah_gu=array();
           foreach ($data['daftar_unit'] as $tgu){
             $jumlah_gu[]= $this->m_gup->banyak_kwitansi($tgu['id_subunit']);  
           }
           $data['jumgu']= $jumlah_gu;  
          
          $this->template->load('template','gup/verifikasi_gu',$data);  
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN DATA KWITANSI YANG DIVERIFIKASI
*/
 function view_ver_kwitansi(){
    if($this->auth->is_logged_in() == true)
        {   
            $id_subunit = $this->uri->segment(3);  
            $data['hasil']= $this->m_gup->data_kuitansi3($id_subunit);
            //echo $this->db->last_query();
            $data['id_subunit']= $id_subunit;
            $data['nama_subunit']= $this->m_gup->nama_subunit($id_subunit);
            $this->template->load('template','gup/gu_daftar_kuitansi_veri',$data);
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN PREVIEW KWITANSI
*/
 function preview_kwitansi2()
    {
         $id = $this->uri->segment(3); 
         $data['hasil'] = $this->m_gup->getKuitansi2($id);
         $data['data'] = $this->m_gup->getNamattd2();
         //echo $this->db->last_query();
         $data['pajak'] = $this->m_gup->get_jenis_pajak2($id);
         $this->template->load('template','gup/preview_kwitansi2',$data);
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENYIMPAN VERIFIKASI
*/    
function simpan_verifikasi()
    {
        /*
        statusnya :
        0 = kosong masih blom d verifikasi
        1 = sudah di verifikasi tapi blom lengkap, kembali ke sub  unit
        2 = perbaikan hasil verifikasi
        3 = sudah tuntas
        */
		$id_subunit = $this->input->post('id_subunit');
        $id = $this->input->post('id_kwitansi');
        $th= $this->input->post('th_kwitansi');
        $status = $this->input->post('status');
        $comment = $this->input->post('comment');
		$object->id_status_kwitansi = $status;
            if (isset($_POST['kwitansi']))
            {$object->st_kwitansi ='1';}
            else
            {$object->st_kwitansi ='0';};
            
            if (isset($_POST['ssp'])){$object->st_ssp ='1';}
            else
            {$object->st_ssp ='0';};
            if (isset($_POST['b_trans'])){$object->st_bukti ='1';}
            else
            {$object->st_bukti ='0';};
            $succes = $this->m_gup->ver_subunit($object,$id,$th);
            //$success = $this->m_gup->simpan_histori_komen($comment,$id);
            $get_id = $this->m_gup->ambil_level_tertinggi($id,$th);
                            foreach($get_id->result_array() as $row){
                            $level = $row['level'];  
                            }
                            $level_terkini =  $level+1;
            $success = $this->m_gup->masuk_waktu_revisi_kwitansi($comment,$id,$th,$level_terkini);
                redirect('gup/view_ver_kwitansi/'.$id_subunit);
       
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN HISTORY VERIFIKASI
*/
 function verifikasi_history()
     {       
        $id = $this->uri->segment(4); 
        $th = $this->uri->segment(3); 
        $data['hasil'] = $this->m_gup->get_history($id, $th);
        $this->load->view('gup/ver_history',$data);   
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN DAFTAR HONOR
*/
 function view_honor()
     {       
        $id = $this->uri->segment(3); 
        $th = $this->uri->segment(4); 
        $get_jenis = $this->m_gup->ambil_jenis_honor($id,$th);
		foreach ($get_jenis->result_array() as $row){
			$jenis = $row['jns_honor'];
		}
		//echo $this->db->last_query();
        $data['hasil'] = $this->m_gup->view_honor($id);
		//echo $this->db->last_query();
        $data['get_nama_subunit'] = $this->m_gup->get_nama_subunit($id);
        $data['get_nama_unit'] = $this->m_gup->get_nama_unit();
		
		if($jenis=='1')
		{
        $this->load->view('gup/rincian_honor/rincian_honor_1',$data);   
			}
		else
		if($jenis=='2')
		{
        $this->load->view('gup/rincian_honor/rincian_honor_2',$data);   
			}
		else
		if($jenis=='3')
		{
        $this->load->view('gup/rincian_honor/rincian_honor_3',$data);   
			}
		else
		if($jenis=='4')
		{
        $this->load->view('gup/rincian_honor/rincian_honor_4',$data);   
			}
		else
		if($jenis=='5')
		{
        $this->load->view('gup/rincian_honor/rincian_honor_5',$data);   
			}
		else
		if($jenis=='6')
		{
        $this->load->view('gup/rincian_honor/rincian_honor_6',$data);   
			}
		else
		if($jenis=='7')
		{
        $this->load->view('gup/rincian_honor/rincian_honor_7',$data);   
			}
		else
		if($jenis=='8')
		{
        $this->load->view('gup/rincian_honor/rincian_honor_8',$data);   
			}
    }


/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN REVISI VERIFKASI KWITANSI
*/
 function rev_ver_kwitansi(){
    if($this->auth->is_logged_in() == true)
        {   
            $data['hasil']= $this->m_gup->data_rev_kuitansi();
            $this->template->load('template','gup/rev_ver_kwitansi',$data);
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK UPDATE DATA REVISI KWITANSI
*/
function update_revisi()
    {
         $th = $this->uri->segment(3); 
         $id = $this->uri->segment(4); 
         $data['hasil'] = $this->m_gup->getKuitansi_veri($id,$th);
                  //echo $this->db->last_query();
         $data['jns_pajak'] = $this->m_gup->edit_jenis_pajak();

         $this->template->load('template','gup/edit_kwitansi',$data);
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENGEDIT KWITANSI
*/    
function edit_kwitansi()
    {
        $id_kwitansi = $this->input->post('id_kwitansi');
        $th_kwitansi = $this->input->post('th_kwitansi');
		$id_status_kwi = $this->input->post('id_status_kwitansi');
        $object->tgl_kwitansi = $this->input->post('tgl_kwitansi');
        $object->nominal = $this->input->post('nominal');
        $object->ket_kwitansi = $this->input->post('ket_kwitansi');
        $object->tpt_kwitansi = $this->input->post('tempat_kwitansi');
        $object->penerima = $this->input->post('penerima');
        $object->pengambil = $this->input->post('pengambil');
        $object->id_pajak = $this->input->post('jns_pajak');
		
		if($id_status_kwi==2)
		{  $id_status_kwitansi=3;  }
		else
		if($id_status_kwi==18)
		{  $id_status_kwitansi=19;  }
		else
		if($id_status_kwi==20)
		{  $id_status_kwitansi=21;  }
        $object->id_status_kwitansi = $id_status_kwitansi;
        
        $id_pajak=$this->input->post('jns_pajak');
        $nominal=$this->input->post('nominal');
        $pph=$this->m_gup->get_pph($id_pajak);
        $ppn=$this->m_gup->get_ppn($id_pajak);
        
        $object->pph=$nominal*$pph/100;
        $object->ppn=$nominal*$ppn/100;
        
        $success = $this->m_gup->edit_kwitansi($object,$id_kwitansi);
        $get_id = $this->m_gup->ambil_level_tertinggi($id_kwitansi,$th_kwitansi);
                            foreach($get_id->result_array() as $row){
                            $level = $row['level'];  
                            }
                            $level_terkini =  $level+1;
        $success = $this->m_gup->masuk_kirim_hasil_revisi($id_kwitansi,$th_kwitansi,$level_terkini);
        
               redirect('gup/rev_ver_kwitansi');
                
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN DAFTAR KWITANSI SIAP CETAK
*/
function daftar_siap_cetak(){   
        if($this->auth->is_logged_in() == true){         	
		  $data['hasil']= $this->m_gup->data_kuitansi_cetak();
		  //echo $this->db->last_query();
          $this->template->load('template','gup/daftar_kwitansi/daftar_kuitansi_siap_cetak',$data);
		  
		}
    }
	
/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN PREVIEW KWITANSI CETAK
*/
function preview_kwitansi_cetak()
    {
		 $id_unit = $this->session->userdata('id_unit');         
		 $th = $this->uri->segment(3); 
         $id = $this->uri->segment(4); 
		 $jumUnduh=$this->m_gup->jumUnduh($th,$id);
         $data['hasil'] = $this->m_gup->getKuitansi($id,$th); 
         $data['data'] = $this->m_gup->getNamattd($id_unit);
         $data['get_nama_unit'] = $this->m_gup->get_nama_unit();
         $data['jumUnduh'] = $jumUnduh;
         $this->template->load('template','gup/daftar_kwitansi/preview_kwitansi_cetak',$data);
    }

    
/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN PREVIEW KWITANSI SPD
*/
 function spd()
     {       
        if($this->auth->is_logged_in() == true)
        {   
        $id = $this->uri->segment(3); 
         $data['hasil'] = $this->m_gup->getKuitansi($id);
         $data['data'] = $this->m_gup->getNamattd();
         $data['pajak'] = $this->m_gup->get_jenis_pajak($id);
         $this->template->load('template','gup/preview_kwitansi_spd',$data);
        }
    }
    
/**
*
FUNGSI INI DIGUNAKAN UNTUK MEMBUAT SPTB
*/
    function buat_sptb_gu()
      {   
        if($this->auth->is_logged_in() == true)
        {
         //$data['output'] = $this->m_gup->getOutputList();
         $id_unit = $this->session->userdata('kode_unit');
         $tahun = date('Y');
         $th = date('y');
         $bulan = date('m');
         $data['sptb'] = $this->m_gup->output_list($id_unit,$tahun);
         //echo $this->db->last_query();
         $jumlah_gu=array();
           foreach ($data['sptb'] as $tgu){
             $jumlah_gu[]= $this->m_gup->banyak_kwitansi_sptb($tgu['kdoutput'],$tgu['kdakun'],$th,$bulan);
               
           }
           $data['jumgu']= $jumlah_gu;
		   //print_r ($jumlah_gu);
		   //echo $this->db->last_query();
         $this->template->load('template','gup/buat_sptb_gu',$data);
        }
    }
      
/**
*
FUNGSI INI DIGUNAKAN UNTUK UPDATE STATUS KWITANSI
*/
function update_status()
      {   
        if($this->auth->is_logged_in() == true)
        { 
        $id_kwitansi='1';
         $this->m_gup->update_status_gu($id_kwitansi);
        }
    }    

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN DAFTAR SPTB
*/
    function view_buat_sptb_gu()
      {   
        if($this->auth->is_logged_in() == true)
        { 
         $kdoutput = $this->uri->segment(3);
         $id_akun = $this->uri->segment(4);
         $bulan = date('m');
         $data['hasil']= $this->m_gup->data_kuitansi_sptb($kdoutput,$id_akun,$bulan);
        //echo $this->db->last_query();
         $this->template->load('template','gup/view_sptb_gu',$data);
        }
    }    

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENYIMPAN SPTB
*/    
function simpan_sptb()
      {    
        if($this->auth->is_logged_in() == true)
        { 
         $this->m_gup->simpan_sptb();
         redirect('gup/daftar_sptb_gu'); 
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN DAFTAR SPTB
*/    
function daftar_sptb_gu()
      {   
        if($this->auth->is_logged_in() == true)
        {
         $id_unit = $this->session->userdata('id_unit');
         $th = date('y');
         $bulan = date('m');
         $data['nama_unit']= $this->m_gup->nama_unit($id_unit);
         $data['hasil']= $this->m_gup->data_sptb($th,$bulan,$id_unit);
         //echo $this->db->last_query();         
         $this->template->load('template','gup/daftar_sptb_gu',$data);
        }
    }
 
/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN PREVIEW SPTB
*/        
function preview_sptb_gu()
    {
         $th = $this->uri->segment(3);
         $id = $this->uri->segment(4);
         $id_unit = $this->session->userdata('id_unit');
         $unit=$this->m_gup->nama_unit_sptb($id_unit);
         $data['nama_unit']=$unit->nama_unit;
         $data['pd2']=$this->m_gup->ambil_nama_nip('m_pd2','id_pd2',$unit->id_pd2);
         $data['bpp']=$this->m_gup->ambil_nama_nip('m_bpp','id_bpp',$unit->id_bpp);
         $data['data'] = $this->m_gup->getNamattd();
         $data['nama_unit_singkat']= $this->m_gup->nama_unit($id_unit); 
         $data['hasil'] = $this->m_gup->get_sptb_kwitansi($id,$th);
		 //echo $this->db->last_query();
         $data['detail']= $this->m_gup->get_sptb_kwitansi_detail($id,$th);
         //echo $this->db->last_query();
         //$data['get_namakdakun'] = $this->m_gup_>get_namakdakun($kode_unit);
         $this->template->load('template','gup/preview_sptb',$data);
        // echo $this->db->last_query();
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK PRINT SPTB
*/	
    function print_sptb($download_pdf = true){
        if($this->auth->is_logged_in () == true){
             //$id_subunit = $this->session->userdata('id_subunit');
             $th = date('y');
             $th=$this->uri->segment(3);
             $id=$this->uri->segment(4);
             $ret = '';
             $ID = $id;
             $tgl_skrg = date("Y-m-d"); 
             $jam_skrg = date("H:i");
             $pdf_filename='sptb_gu-'.$id.'_'.$tgl_skrg.'_'.$jam_skrg.'.pdf';
             $link_download = ($download_pdf==TRUE)?'': anchor(base_url().'gup/print_sptb/true/','Download Pdf');
            
             $data['link'] = $link_download ;
             $id_unit = $this->session->userdata('id_unit');
             $unit=$this->m_gup->nama_unit_sptb($id_unit);
             $data['nama_unit']=$unit->nama_unit;
             $data['pd2']=$this->m_gup->ambil_nama_nip('m_pd2','id_pd2',$unit->id_pd2);
             $data['bpp']=$this->m_gup->ambil_nama_nip('m_bpp','id_bpp',$unit->id_bpp);
         $data['data'] = $this->m_gup->getNamattd();
             $data['nama_unit_singkat']= $this->m_gup->nama_unit($id_unit); 
             $data['hasil'] = $this->m_gup->get_sptb_kwitansi($id,$th);
             $data['detail']= $this->m_gup->get_sptb_kwitansi_detail($id,$th);
            $user_info = $this->load->view('gup/print_sptb_gu', $data,  true);
            
             if($download_pdf==true)
                 generate_pdf_A4($user_info,$pdf_filename);  
             else
                echo $output;
             }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENYIMPAN SPP
*/	
    function simpan_spp(){
       if($this->auth->is_logged_in() == true){
          $id_unit = $this->session->userdata('id_unit');
          $kode_unit = $this->session->userdata('id_unit');
          $th = $this->uri->segment(3);
          $id = $this->uri->segment(4);
          $sptb = $this->m_gup->cek_sptb($id,$id_unit,$th);
          //echo $this->db->last_query(); 
          $success = $this->m_gup->sptb_diajukan($id,$id_unit,$th);
         //echo $this->db->last_query();
           if($success){
              $this->session->set_userdata('msg_typ','err');
              $this->session->set_userdata('msg', 'SPTB ini udah dibuatkan SPP, List SPP dapat dilihat 
			  		<a href=list_spp_gu>
					disini</a>');
              redirect('gup/daftar_sptb_gu');  			   
          }else{
              
              $this->m_gup->simpan_spp($id_unit,$sptb,$id,$kode_unit);
              $this->session->set_userdata('msg_typ','ok');
              $this->session->set_userdata('msg', 'SPP berhasil disimpan, List SPP dapat dilihat 
			  		<a href=list_spp_gu>
					disini</a>');
              redirect('gup/daftar_sptb_gu');  			   
          }
       }
   } 

/**                                                                         
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN LIST SPP
*/   
   function list_spp_gu(){   
        if($this->auth->is_logged_in() == true){ 
          $id_unit = $this->session->userdata('id_unit');  
          $daftar_spp = $this->m_gup->spp_gu($id_unit);
          $data['daftar_spp'] = $this->m_gup->spp_gu($id_unit);
          
          //echo $this->db->last_query();        
          $this->template->load('template','gup/list_spp_gu',$data);
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN PREVIEW SPP
*/	
   function preview_spp(){         
            $id_unit = $this->session->userdata('id_unit');
            $kode_unit = $this->session->userdata('kode_unit');
            $th_spp = $this->uri->segment(3);
            $id_spp = $this->uri->segment(4);
            $tgl_skrg = date("Y-m-d");
            $jam_skrg = date("H:i:s");
            $data['tgl'] = $tgl_skrg;
            $data['jam'] = $jam_skrg;                              
            $detail_spp = $this->m_gup->detail_spp($id_unit,$id_spp,$th_spp);        
            $data['detail_spp'] = $this->m_gup->detail_spp($id_unit,$id_spp,$th_spp);
            $ta = $this->m_settings->get_tahun_anggaran();
            
            
            //tabel bawah
            $data['tabel_spp']= $this->m_spj->get_spp_table($ta, $id_unit, Constant::JB_GUP, $id_spp);
            $data['setting'] =  $this->m_gup->select_setting();
            
            $data['pagu_rkakl_unit']=$this->m_gup->pagu_rkakl_unit($id_unit,$ta);
            
            
            $data['spp_terbayar_lalu_unit']=$this->m_gup->spp_terbayar_lalu_unit($id_spp,$id_unit,$ta);
            
            
            $data['spp_ini_unit']=$this->m_gup->spp_ini_unit($id_spp,$id_unit,$ta);     
            
           
            $this->template->load('template','gup/preview_spp2',$data);  
        }

/**
*
FUNGSI INI DIGUNAKAN UNTUK PRINT SPP
*/        
        function print_spp($download_pdf = ''){
        if($this->auth->is_logged_in () == true){
             $id_unit = $this->session->userdata('id_unit');
             $th_spp = $this->uri->segment(3);
             $id_spp = $this->uri->segment(4);
             $tgl_skrg = date("Y-m-d");
             $jam_skrg = date("H:i:s");
             $data['tgl'] = $tgl_skrg;
             $data['jam'] = $jam_skrg;
             $ret = ''; 
             $pdf_filename='SPP_GU_'.$id_unit.'_'.$tgl_skrg.'_'.$jam_skrg.'.pdf';
             $link_download = ($download_pdf==TRUE)?'': anchor(base_url().'unit/print_spp/true/','Download Pdf');
             
            $detail_spp = $this->m_gup->detail_spp($id_unit,$id_spp,$th_spp);        
            $data['detail_spp'] = $this->m_gup->detail_spp($id_unit,$id_spp,$th_spp);
            $ta = $this->m_settings->get_tahun_anggaran();
            
            
            //tabel bawah
            $data['tabel_spp']= $this->m_spj->get_spp_table($ta, $id_unit, Constant::JB_GUP, $id_spp);
            $data['setting'] =  $this->m_gup->select_setting();
            
            $data['pagu_rkakl_unit']=$this->m_gup->pagu_rkakl_unit($id_unit,$ta);
            
            
            $data['spp_terbayar_lalu_unit']=$this->m_gup->spp_terbayar_lalu_unit($id_spp,$id_unit,$ta);
            
            
            $data['spp_ini_unit']=$this->m_gup->spp_ini_unit($id_spp,$id_unit,$ta);  
             
             $data['link'] = $link_download ;     
             $output = $this->load->view('gup/print_spp', $data,  true);     
             //print_r($output);
             if($download_pdf==true)
                 generate_pdf_portrait($output,$pdf_filename);  
             else
                echo $output;
             } 
    } 
	
/**
*
FUNGSI INI DIGUNAKAN UNTUK PENGOTORISASIAN SPP YANG DIAJUKAN
*/	
    function otorisasi_spp_up(){   
        if($this->auth->is_logged_in() == true){         
          $th = $this->uri->segment(3);
          $id = $this->uri->segment(4);
          $this->m_gup->otorisasi_spp_up($id,$th);
          $trans = $this->m_gup->selek_kwitansi($id,$th);
            foreach($trans->result_array() as $row){
                $id_sptb = $row['id_sptb'];
                $id_kwitansi = $row['id_kwitansi'];
                $this->m_gup->otorisasi_sptb_ppk($id_sptb,$th);
                $this->m_gup->otorisasi_kwitansi_ppk($id_kwitansi,$th);
                    $get_id = $this->m_gup->ambil_level_tertinggi($id_kwitansi,$th);
                            foreach($get_id->result_array() as $row){
                            $level = $row['level'];  
                            }
                            $level_terkini =  $level+1;           
                            $this->m_gup->masuk_waktu_otorisasi_ppk($id_kwitansi,$level_terkini,$th);
            }       
          echo "<meta http-equiv='refresh' content='0; url=".site_url()."gup/list_spp_gu'>";
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN LIST SPP
*/	
    function list_spp_gu_keu(){   
        if($this->auth->is_logged_in() == true){ 
          $id_unit = $this->session->userdata('id_unit'); 
          $data['daftar_spp'] = $this->m_gup->spp_up_keu($id_unit); 
          $this->template->load('template','gup/list_spp_gu_keu',$data);
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN ISIAN SPM
*/	
    function pengisian_spm(){
          if($this->auth->is_logged_in() == true){      
          $id_unit = $this->session->userdata('id_unit');
          $th_spp = $this->uri->segment(3);
          $id_spp = $this->uri->segment(4);
          $data['carabayar'] = $this->m_gup->get_carabayar();     
          $data['tahun'] = date('Y');    
          
          $data['spp']=$this->m_gup->spp($id_unit,$id_spp,$th_spp);
          //echo $this->db->last_query();
          $data['setting']=$this->m_gup->select_setting(); 
          $spp=$this->m_gup->spp($id_unit,$id_spp,$th_spp);
          foreach($spp->result_array() as $tot_spp)
                 {  
                    $jumlah = $tot_spp ['jumlah'];
                 }  
          $data['terbilang'] = $this->konversi->terbilang ($jumlah) ; 
            //print_r($data['option_komponen']);        
          $this->template->load('template','gup/pengisian_spm',$data);
          }   
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENYIMPAN SPM
*/	
    function simpan_spm(){
       if($this->auth->is_logged_in() == true){
          $id_unit = $this->session->userdata('id_unit'); 
          $id_spp = $this->input->post('id_spp'); 
          $th_spp = $this->input->post('th_spp'); 
          
          $success = $this->m_gup->cek_spp_spm($id_spp,$th_spp);
          //echo $this->db->last_query();
          if($success){
              $this->session->set_userdata('msg_typ','err');
              $this->session->set_userdata('msg', 'SPP ini sudah di spm-kan');
              redirect('gup/list_spp_gu_keu');  
          }else{
                $kwitansi = $this->m_gup->selek_kwitansi($id_spp,$th_spp);    
                $this->m_gup->simpan_spm($id_spp,$kwitansi,$id_unit,$th_spp);
                $cek = "SPM berhasil disimpan, Untuk melihat Daftar SPM yang sudah dibuat, 
                <a href='list_spm_gu'>Klik Disini</a>
                 " ;
                $this->session->set_userdata('msg_typ','ok');
                $this->session->set_userdata('msg', $cek);
                redirect('gup/list_spp_gu_keu');
          }  
       }
   }
  
/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN LIST SPM
*/   
   function list_spm_gu(){   
        if($this->auth->is_logged_in() == true){ 
          $id_unit = $this->session->userdata('id_unit'); 
          $data['daftar_spm'] = $this->m_gup->spm_gu($id_unit);
          $total_pagu = $this->m_gup->spm_gu_jum($id_unit);
		  $tot_jumlah=0;
          foreach($total_pagu->result_array() as $jmlh)
                 {  
                    $tot_jumlah = $jmlh ['sum(nominal)'];
                 }
				 //echo $tot_jumlah;
                 $data['jumlah']=$tot_jumlah;   
				 //echo $this->db->last_query();
          $this->template->load('template','gup/list_spm_up',$data);
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN PREVIEW SPM
*/	
    function preview_spm(){
            $id_unit = $this->session->userdata('id_unit');
            $th_spm = $this->uri->segment(3);
            $id_spm = $this->uri->segment(4);
            $tgl_skrg = date("Y-m-d");
            $jam_skrg = date("H:i:s");
            $data['tgl'] = $tgl_skrg;
            $data['jam'] = $jam_skrg; 
            $data['tahun_anggaran']  = $this->m_settings->get_tahun_anggaran();           
            $data['carabayar'] = $this->m_gup->get_carabayar();     
            $data['detail_spm'] = $this->m_gup->detail_spm($id_unit,$id_spm,$th_spm);  
            //echo $this->db->last_query();  
            $this->template->load('template','gup/preview_spm',$data);    
        }

/**
*
FUNGSI INI DIGUNAKAN UNTUK PRINT SPM
*/		
    function print_spm($download_pdf = ''){
        if($this->auth->is_logged_in () == true){
             $id_unit = $this->session->userdata('id_unit');      
             $id_spm = $this->uri->segment(3);   
             $data['tgl'] = date('Y-m-d');
             $ret = ''; 
			 $tgl_skrg = date("Y-m-d"); 
             $jam_skrg = date("H:i");
             $pdf_filename='SPM_GUP/'.$id_unit.'_'.$tgl_skrg.'_'.$jam_skrg.'.pdf';
             $link_download = ($download_pdf==TRUE)?'': anchor(base_url().'unit/print_spp/true/','Download Pdf');
            
            $this->load->model('m_gup');
            $this->m_gup->update_print_spm($id_spm,$th_spm);  
            $id_spm = $this->uri->segment(4);
            $tgl_skrg = date("Y-m-d");
            $jam_skrg = date("H:i:s");
            $data['tgl'] = $tgl_skrg;
            $data['jam'] = $jam_skrg;
            $data['tahun_anggaran']  = $this->m_settings->get_tahun_anggaran();            
            $data['carabayar'] = $this->m_gup->get_carabayar();     
            $data['detail_spm'] = $this->m_gup->detail_spm($id_unit,$id_spm,$th_spm);       
             
             $data['link'] = $link_download ;     
             $output = $this->load->view('gup/print_spm', $data,  true);     
            
             if($download_pdf==true)
                 generate_pdf_portrait($output,$pdf_filename);  
             else
                echo $output;
             }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK UPDATE SPM
*/	
    function update_spm(){   
        if($this->auth->is_logged_in() == true){ 
          $id_unit = $this->session->userdata('id_unit'); 
          $id_spm = $this->input->post('id_spm'); 
          $th_spm = $this->input->post('th_spm'); 
          $this->m_gup->update_spm($id_unit,$id_spm,$th_spm);
          //echo $this->db->last_query();        
          echo "<meta http-equiv='refresh' content='0; url=".site_url()."/gup/preview_spm/$th_spm/$id_spm'>";
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK PEGOTORISASIAN SPM
*/	
    function otorisasi_spm_up(){   
        if($this->auth->is_logged_in() == true){          
          $th = $this->uri->segment(3);
          $id = $this->uri->segment(4);
          
          $recek_kel = $this->m_gup->recheck_kelengkapan($id,$th);  
          if($recek_kel>0){
                 $this->session->set_userdata('msg_typ','err');
                 $this->session->set_userdata('msg', 'Anda Belum Mengunduh SPM');
                 redirect('gup/list_spm_gu'); 
              
          }else{  
          $this->m_gup->otorisasi_spm_up($id,$th);
          //echo $this->db->last_query();        
          $trans = $this->m_gup->selek_kwitansi_spm($id,$th);
            foreach($trans->result_array() as $row){
                $id_kwitansi = $row['id_kwitansi'];
                $id_sptb = $row['id_sptb'];
                $id_spp = $row['id_spp'];
                $this->m_gup->otorisasi_kwitansi_up2($id_kwitansi,$th);
                $this->m_gup->otorisasi_sptb_up2($id_sptb,$th);
                $this->m_gup->otorisasi_spp_up2($id_spp,$th);
                $get_id = $this->m_gup->ambil_level_tertinggi($id_kwitansi,$th);
                            foreach($get_id->result_array() as $row){
                            $level = $row['level'];  
                            }
                            $level_terkini =  $level+1;           
                            $this->m_gup->masuk_waktu_otorisasi_dekan($id_kwitansi,$level_terkini,$th);
                
            }
          //echo $this->db->last_query();        
           echo "<meta http-equiv='refresh' content='0; url=".site_url()."gup/list_spm_gu'>"; 
        }}
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK PRINT MP
*/	
    function print_mp($download_pdf = ''){
        if($this->auth->is_logged_in () == true){
             $id_unit = $this->session->userdata('id_unit');
             $id_spp = $this->uri->segment(3);
             $tgl = date("Y-m-d");
			 $jam_skrg = date("H:i");
             $ret = ''; 
             $pdf_filename='MP_'.$id_unit.'_'.$tgl.'_'.$jam_skrg.'.pdf';
             $link_download = ($download_pdf==TRUE)?'': anchor(base_url().'unit/print_mp/true/','Download Pdf');
            
             
             $id_spp = $this->uri->segment(3); 
            
             $data['fakultas'] = $this->m_gup->getDetailUnit($id_unit); 
             $data['detail_mp'] = $this->m_gup->getMpUnit($id_spp); 
               
             $data['link'] = $link_download ;  
             $output = $this->load->view('gup/print_mp', $data,  true);    
             if($download_pdf==true)
                 generate_pdf_A4($output,$pdf_filename);  
             else
                echo $output;
             }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN LIST SPM
*/	
    function list_spm_gu_pen(){   
        if($this->auth->is_logged_in() == true){  
        $th= date('y');       
          $data['daftar_spm'] = $this->m_gup->spm_up_pen($th);
          $detail_spm = $this->m_gup->spm_up_pen($th);
                    foreach($detail_spm->result_array() as $row)
                    {                  
                    $nomor=$row['no_spm']; 
                    $tahun=$row['th_spm']; 
                    $kode_digit=$row['kode_digit']; 
                    $singkat=$row['singkat']; 
                    $jumlah=$row['jumlah']; 
                    }
                  $data['th'] = '20'.$tahun;
                  $data['singkat'] = $singkat;
                  $data['kode_digit'] = $kode_digit;
                  $data['nomor'] = sprintf("%04d", $nomor); 
            $data['terbilang'] = $this->konversi->terbilang ($jumlah) ;
        //echo $this->db->last_query();     
          $this->template->load('template','gup/list_spm_gu_pen',$data);
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK VERIFIKASI
*/	
    function veri(){
            if($this->auth->is_logged_in() == true){ 
            $th = $this->uri->segment(3);
            $id = $this->uri->segment(4);
            $success = $this->m_gup->cek_ada_veri($id,$th);
            if($success){
                $this->session->set_userdata('msg_typ','err');
                $this->session->set_userdata('msg', 'Maaf SPM ini sudah dicek sebelumnya');
                redirect('gup/data_terceklist/'.$th."/".$id);        
            }else {
                //$data['berita'] = $this->mveri->get_pengumuman();
                $data['umum'] = $this->m_gup->getSyaratUmum_up();
                $data['khusus'] = $this->m_gup->getKhususList();
                $data['daftar_spm'] = $this->m_gup->spm_up_pen4($id,$th);
                //echo $this->db->last_query();
                $detail_spm = $this->m_gup->spm_up_pen4($id,$th);
                foreach($detail_spm->result_array() as $row)
                    {                  
                    $nomor=$row['no_spm']; 
                    $tahun=$row['th_spm']; 
                    $kode_digit=$row['kode_digit']; 
                    $singkat=$row['singkat']; 
                    //$jumlah=$row['jumlah']; 
                    }
                  $data['th'] = '20'.$tahun;
                  $data['singkat'] = $singkat;
                  $data['kode_digit'] = $kode_digit;
                  $data['nomor'] = sprintf("%04d", $nomor); 
                    //echo $this->db->last_query(); 
                $this->template->load('template','gup/cek_kelengkapan', $data);
            }
            }
        }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN PILIHAN URAIAN
*/		
        function select_uraian(){
          if($this->auth->is_logged_in() == true){ 
            $data['khusus'] = $this->m_gup->select_khusus();
            //echo $this->db->last_query();        
            $this->load->view('gup/get_khusus',$data);
          }   
        }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENYIMPAN VERIFIKASI
*/		
        function simpan_veri(){
          if($this->auth->is_logged_in() == true){ 
             $id = $this->input->post('id_spm');
             $th = $this->input->post('th_spm');
                  
             $this->m_gup->update_penyerah($id,$th);      
                    //$this->mveri->insert_ceklist();
                    $this->m_gup->insert_detail($id,$th);
                    if(isset($_POST['tes'] )){
                                
                            $this->m_gup->update_detail($id,$th);
                            echo "<meta http-equiv='refresh' content='0; url=".site_url()."gup/list_spm_gu_pen'>"; 
                    }else{
                    echo "<meta http-equiv='refresh' content='0; url=".site_url()."gup/list_spm_gu_pen'>"; 
          }   
          } }
          function data_terceklist(){
            if($this->auth->is_logged_in() == true){       
            $tgl_skrg = date("Y-m-d");
            $jam_skrg = date("H:i:s");
            $data['tgl'] = $tgl_skrg;
            $data['jam'] = $jam_skrg;
            $th = $this->uri->segment(3); 
            $id = $this->uri->segment(4); 
            $data['detail_daftar']=$this->m_gup->detail_daftar($id,$th);
            //echo $this->db->last_query(); 
            $detail_spm = $this->m_gup->detail_daftar($id,$th);
                foreach($detail_spm->result_array() as $row)
                    {                  
                    $nomor=$row['no_spm']; 
                    $tahun=$row['th_spm']; 
                    $kode_digit=$row['kode_digit']; 
                    $singkat=$row['singkat']; 
                    //$jumlah=$row['jumlah']; 
                    }
                  $data['th'] = '20'.$tahun;
                  $data['singkat'] = $singkat;
                  $data['kode_digit'] = $kode_digit;
                  $data['nomor'] = sprintf("%04d", $nomor); 
            $data['cek_umum']=$this->m_gup->ceklist_umum($id,$th);
            $data['cek_khusus']=$this->m_gup->ceklist_khusus($id,$th);  
            $data['setting']=$this->m_gup->select_setting();   
            $this->template->load('template','gup/data_terceklist',$data);  
        }}

/**
*
FUNGSI INI DIGUNAKAN UNTUK UPDATE CHECKLIST KELENGKAPAN
*/		
        function update_ceklist(){  
            $id = $this->input->post('id_spm'); 
            $th = $this->input->post('th_spm'); 
            //$this->mveri->edit_detail1($id); 
            $tes = $this->input->post('tes');
            if(isset($tes)){
                $this->m_gup->update_kelengkapan($id,$th,$tes);
                echo "<meta http-equiv='refresh' content='0; url=".site_url()."gup/list_spm_gu_pen'>"; 
            }else{
                echo "<meta http-equiv='refresh' content='0; url=".site_url()."gup/list_spm_gu_pen'>";
            }   
             
        }
        function print_bukti_penerimaan($download_pdf = ''){
        if($this->auth->is_logged_in () == true){
             $kode_unit = $this->session->userdata('kode_unit'); 
             $th = $this->uri->segment(3); 
             $id = $this->uri->segment(4); 
             $nomor = $this->uri->segment(5); 
             $data['tgl'] = date('Y-m-d');
             $ret = ''; 
			 $tgl_skrg = date("Y-m-d"); 
             $jam_skrg = date("H:i");
             $pdf_filename='BUKTI_PENERIMAAN_GUP_'.$nomor.'_'.$tgl_skrg.'_'.$jam_skrg.'.pdf';
             $link_download = ($download_pdf==TRUE)?'': anchor(base_url().'unit/print_spp/true/','Download Pdf');
            
             $tgl_skrg = date("Y-m-d");
             $jam_skrg = date("H:i:s");
             $data['tgl'] = $tgl_skrg;
             $data['jam'] = $jam_skrg;
             $data['detail_daftar']=$this->m_gup->detail_daftar($id,$th); 
             $detail_spm = $this->m_gup->detail_daftar($id,$th);
                foreach($detail_spm->result_array() as $row)
                    {                  
                    $nomor=$row['no_spm']; 
                    $tahun=$row['th_spm']; 
                    $kode_digit=$row['kode_digit']; 
                    $singkat=$row['singkat']; 
                    //$jumlah=$row['jumlah']; 
                    }
                  $data['th'] = '20'.$tahun;
                  $data['singkat'] = $singkat;
                  $data['kode_digit'] = $kode_digit;
                  $data['nomor'] = sprintf("%04d", $nomor); 
             $data['cek_umum']=$this->m_gup->ceklist_umum($id,$th);
            $data['cek_khusus']=$this->m_gup->ceklist_khusus($id,$th);  
            $data['setting']=$this->m_gup->select_setting();        
             
             $data['link'] = $link_download ;     
             $output = $this->load->view('gup/bukti_penerimaan', $data,  true);     
            
             if($download_pdf==true)
                 generate_pdf_A4($output,$pdf_filename);  
             else
                echo $output;
             }
    } 

/**
*
FUNGSI INI DIGUNAKAN UNTUK PENYETUJUAN SPM
*/	
    function setuju_spm_pen(){
            if($this->auth->is_logged_in() == true){ 
            $th_spm = $this->uri->segment(3);
            $id_spm = $this->uri->segment(4);
            $sudah = $this->m_gup->cek_ada_veri($id_spm,$th_spm);
            if($sudah){  
                    $success = $this->m_gup->ada_flag_cek($id_spm,$th_spm);
                    //echo $this->db->last_query();       
                    if($success){
                            $this->session->set_userdata('msg_typ','err');
                            $this->session->set_userdata('msg', 'Masih ada Kelengkapan yang belum terpenuhi');
                            redirect('gup/list_spm_gu_pen');   
                    }else{
                            $this->m_gup->setuju_bak($id_spm,$th_spm);
                            $trans = $this->m_gup->selek_spp_trans($th_spm,$id_spm);
                            foreach($trans->result_array() as $row){
                                    $id_kwitansi = $row['id_kwitansi'];
                                    $id_sptb = $row['id_sptb'];
                                    $id_spp = $row['id_spp'];
                                    $this->m_gup->trans_stat_veri_blu($id_kwitansi,$th_spm);
                                    $this->m_gup->spp_stat_veri_blu($id_spp,$th_spm);
                                    $this->m_gup->sptb_stat_veri_blu($id_sptb,$th_spm);
                                    
                                    $get_id = $this->m_gup->ambil_level_tertinggi($id_kwitansi,$th_spm);
                                    foreach($get_id->result_array() as $row){
                                    $level = $row['level'];  
                                    }
                                    $level_terkini =  $level+1;           
                                    $this->m_gup->masuk_waktu_dicek_petugas_penerima($id_kwitansi,$level_terkini,$th_spm);
                            }
                            echo "<meta http-equiv='refresh' content='0; url=".site_url()."gup/list_spm_gu_pen'>";  
                    }
            }else{
                  $this->session->set_userdata('msg_typ','err');
                  $this->session->set_userdata('msg', 'SPM ini belum dicek kelengkapan-nya.. mohon dicek terlebih dahulu!!!');
                  redirect('surat_setor/detail/'.$th_spm."/".$id_spm); 
            }
         }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN LIST SPM
*/        
    function list_spm_gu_veri(){   
        if($this->auth->is_logged_in() == true){
        $th= date('y');       
          $data['daftar_spm'] = $this->m_gup->spm_up_veri($th);
          $detail_spm = $this->m_gup->spm_up_veri($th);
                    foreach($detail_spm->result_array() as $row)
                    {                  
                    $nomor=$row['no_spm']; 
                    $tahun=$row['th_spm']; 
                    $kode_digit=$row['kode_digit']; 
                    $singkat=$row['singkat']; 
                    $jumlah=$row['jumlah']; 
                    }
                  $data['th'] = '20'.$tahun;
                  $data['singkat'] = $singkat;
                  $data['kode_digit'] = $kode_digit;
                  $data['nomor'] = sprintf("%04d", $nomor); 
            $data['terbilang'] = $this->konversi->terbilang ($jumlah) ;     
          $this->template->load('template','gup/list_spm_up_veri',$data);
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN DETAIL SPM
*/	
    function detail_spm(){
            if($this->auth->is_logged_in() == true){ 
            $th_spm = $this->uri->segment(3);  
            $id_spm = $this->uri->segment(4);  
                  
            $data['detail_spm'] = $this->m_gup->detail_spm2($id_spm,$th_spm);
            //echo $this->db->last_query();
            $this->template->load('template','gup/detail_spm',$data);  
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK PENYETUJUAN VERIFIKASI SPM
*/	
    function setuju_spm_veri(){
            if($this->auth->is_logged_in() == true){ 
            $th_spm = $this->uri->segment(3);
            $id_spm = $this->uri->segment(4);
            $this->m_gup->setuju_veri($id_spm,$th_spm);
            $trans = $this->m_gup->selek_spp_trans($th_spm,$id_spm);
            foreach($trans->result_array() as $row){
                    $id_kwitansi = $row['id_kwitansi'];
                    $id_sptb = $row['id_sptb'];
                    $id_spp = $row['id_spp'];
                    $this->m_gup->trans_stat_subag_dm($id_kwitansi,$th_spm);
                    $this->m_gup->sptb_stat_subag_dm($id_sptb,$th_spm);
                    $this->m_gup->spp_stat_subag_dm($id_spp,$th_spm);
                    
                    
                    $get_id = $this->m_gup->ambil_level_tertinggi($id_kwitansi,$th_spm);
                    foreach($get_id->result_array() as $row){
                    $level = $row['level'];  
                    }
                    $level_terkini =  $level+1;           
                    $this->m_gup->masuk_waktu_otorisasi_verifikator_pusat($id_kwitansi,$level_terkini,$th_spm);
            }
            //echo $this->db->last_query();
            echo "<meta http-equiv='refresh' content='0; url=".site_url()."gup/list_spm_gu_veri'>";  
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK AUTO COMPLETE
*/	
    function list_spm_up_dm(){   
        if($this->auth->is_logged_in() == true){
        $th= date('y');       
          $data['daftar_spm'] = $this->m_gup->spm_up_dm($th); 
          //echo $this->db->last_query();
          $detail_spm = $this->m_gup->spm_up_dm($th);
                    foreach($detail_spm->result_array() as $row)
                    {                  
                    $nomor=$row['no_spm']; 
                    $tahun=$row['th_spm']; 
                    $kode_digit=$row['kode_digit']; 
                    $singkat=$row['singkat']; 
                    $jumlah=$row['jumlah']; 
                    }
                  $data['th'] = '20'.$tahun;
                  $data['singkat'] = $singkat;
                  $data['kode_digit'] = $kode_digit;
                  $data['nomor'] = sprintf("%04d", $nomor); 
            $data['terbilang'] = $this->konversi->terbilang ($jumlah) ;       
          $this->template->load('template','gup/list_spm_gu_dm',$data);
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK PENYETUJUAN SPM
*/	
    function setuju_spm_dm(){
            if($this->auth->is_logged_in() == true){ 
             $th_spm = $this->uri->segment(3);     
             $id_spm = $this->uri->segment(4);     
            $this->m_gup->setuju_dm($id_spm,$th_spm);
            $trans = $this->m_gup->selek_spp_trans($th_spm,$id_spm);
            foreach($trans->result_array() as $row){
                    $id_kwitansi = $row['id_kwitansi'];
                    $id_sptb = $row['id_sptb'];
                    $id_spp = $row['id_spp'];
                    $this->m_gup->trans_stat_kabag_keu($id_kwitansi,$th_spm);
                    $this->m_gup->sptb_stat_kabag_keu($id_sptb,$th_spm);
                    $this->m_gup->spp_stat_kabag_keu($id_spp,$th_spm);
                    
                    $get_id = $this->m_gup->ambil_level_tertinggi($id_kwitansi,$th_spm);
                    foreach($get_id->result_array() as $row){
                    $level = $row['level'];  
                    }
                    $level_terkini =  $level+1;           
                    $this->m_gup->masuk_waktu_otorisasi_subag_dm($id_kwitansi,$level_terkini,$th_spm);
            }
            //echo $this->db->last_query();
            echo "<meta http-equiv='refresh' content='0; url=".site_url()."gup/list_spm_up_dm'>";  
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN LIST SPM DI KABAG
*/	
    function list_spm_up_kabag(){   
        if($this->auth->is_logged_in() == true){ 
        $th= date('y');      
          $data['daftar_spm'] = $this->m_gup->spm_up_kabag($th);
          $detail_spm = $this->m_gup->spm_up_kabag($th);
                    foreach($detail_spm->result_array() as $row)
                    {                  
                    $nomor=$row['no_spm']; 
                    $tahun=$row['th_spm']; 
                    $kode_digit=$row['kode_digit']; 
                    $singkat=$row['singkat']; 
                    $jumlah=$row['jumlah']; 
                    }
                  $data['th'] = '20'.$tahun;
                  $data['singkat'] = $singkat;
                  $data['kode_digit'] = $kode_digit;
                  $data['nomor'] = sprintf("%04d", $nomor); 
            $data['terbilang'] = $this->konversi->terbilang ($jumlah) ;       
          $this->template->load('template','gup/list_spm_gu_kabag',$data);
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK PENYUTUJUAN SPM PADA KABAG
*/	
    function setuju_spm_kabag(){
            if($this->auth->is_logged_in() == true){ 
            $th_spm = $this->uri->segment(3);    
            $id_spm = $this->uri->segment(4);    
            $this->m_gup->setuju_kabag($id_spm,$th_spm);
            $trans = $this->m_gup->selek_spp_trans($th_spm,$id_spm);
            foreach($trans->result_array() as $row){
                    $id_kwitansi = $row['id_kwitansi'];
                    $id_sptb = $row['id_sptb'];
                    $id_spp = $row['id_spp'];
                    $this->m_gup->trans_stat_ppsp2d($id_kwitansi,$th_spm);
                    $this->m_gup->sptb_stat_ppsp2d($id_sptb,$th_spm);
                    $this->m_gup->spp_stat_ppsp2d($id_spp,$th_spm);
                    
                    $get_id = $this->m_gup->ambil_level_tertinggi($id_kwitansi,$th_spm);
                    foreach($get_id->result_array() as $row){
                    $level = $row['level'];  
                    }
                    $level_terkini =  $level+1;           
                    $this->m_gup->masuk_waktu_otorisasi_kabag_keu($id_kwitansi,$level_terkini,$th_spm);
            }
            //echo $this->db->last_query();
            echo "<meta http-equiv='refresh' content='0; url=".site_url()."gup/list_spm_up_kabag'>";  
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN LIST SPM YANG AKAN DIJADIKAN SP2D
*/	
    function list_spm_up_sp2d(){   
        if($this->auth->is_logged_in() == true){
        $th= date('y');      
          $data['daftar_spm'] = $this->m_gup->spm_up_sp2d($th); 
          $detail_spm = $this->m_gup->spm_up_sp2d($th);
                    foreach($detail_spm->result_array() as $row)
                    {                  
                    $nomor=$row['no_spm']; 
                    $tahun=$row['th_spm']; 
                    $kode_digit=$row['kode_digit']; 
                    $singkat=$row['singkat']; 
                    $jumlah=$row['jumlah']; 
                    }
                  $data['th'] = '20'.$tahun;
                  $data['singkat'] = $singkat;
                  $data['kode_digit'] = $kode_digit;
                  $data['nomor'] = sprintf("%04d", $nomor); 
            $data['terbilang'] = $this->konversi->terbilang ($jumlah) ;      
          $this->template->load('template','gup/list_spm_gu_sp2d',$data);
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MEMBUAT SP2D
*/	
    function buat_sp2d(){
            if($this->auth->is_logged_in() == true){
            $th_spm = $this->uri->segment(3); 
            $id_spm = $this->uri->segment(4); 
            $success = $this->m_gup->cek_adasp2d($th_spm,$id_spm);
            if($success){
                $this->session->set_userdata('msg_typ','err');
                $this->session->set_userdata('msg', 'Maaf SPM ini sudah dibuatkan SP2D');
                redirect('gup/list_spm_up_sp2d');
            }else{                   
                
                $trans = $this->m_gup->selek_spp_trans($th_spm,$id_spm);
                $this->m_gup->buat_sp2d($id_spm,$trans,$th_spm);
                $this->m_gup->setuju_sp2d($id_spm,$th_spm);
                
                $this->session->set_userdata('msg_typ','ok');
                $this->session->set_userdata('msg', 'SP2D Berhasil Dibuat');
                redirect('gup/list_spm_up_sp2d'); 
           }
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN PREVIEW SP2D
*/
    function preview_sp2d(){
            if($this->auth->is_logged_in() == true){
            $th_spm = $this->uri->segment(3); 
            $id_spm = $this->uri->segment(4); 
            $success = $this->m_gup->cek_adasp2d($th_spm,$id_spm);
            //echo $this->db->last_query();
            if($success){
                $data['tahun'] = date('Y');
                $detail_spm = $this->m_gup->detail_sp2d($id_spm);
                $data['setting'] = $this->m_gup->select_setting();
                $data['detail_spm'] = $this->m_gup->detail_sp2d($id_spm);
                foreach($detail_spm->result_array() as $row)
                    {                  
                    $nomor=$row['no_spm']; 
                    $tahun=$row['th_spm']; 
                    $kode_digit=$row['kode_digit']; 
                    $singkat=$row['singkat']; 
                    $jumlah=$row['jumlah']; 
                    }
                  $data['th'] = '20'.$tahun;
                  $data['singkat'] = $singkat;
                  $data['kode_digit'] = $kode_digit;
                  $data['nomor'] = sprintf("%04d", $nomor);
                $this->template->load('template','gup/preview_sp2d',$data);
            }else{
                $this->session->set_userdata('msg_typ','err');
                $this->session->set_userdata('msg', 'Maaf SPM ini belum dibuatkan SP2D..');
                redirect('gup/list_spm_up_sp2d');
           }
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK PRINT SP2D
*/	
    function print_sp2d($download_pdf = ''){
        if($this->auth->is_logged_in () == true){   
             $th_spm = $this->uri->segment(3); 
             $id_spm = $this->uri->segment(4);   
             $data['tahun'] = date('Y');
                $detail_spm = $this->m_gup->detail_sp2d($id_spm);
                $data['setting'] = $this->m_gup->select_setting();
                $data['detail_spm'] = $this->m_gup->detail_sp2d($id_spm);
                foreach($detail_spm->result_array() as $row)
                    {                  
                    $nomor=$row['no_spm']; 
                    $tahun=$row['th_spm']; 
                    $kode_digit=$row['kode_digit']; 
                    $singkat=$row['singkat']; 
                    $jumlah=$row['jumlah']; 
                    $id_sp2d=$row['id_sp2d']; 
                    }
                  $data['th'] = '20'.$tahun;
                  $data['singkat'] = $singkat;
                  $data['kode_digit'] = $kode_digit;
                  $data['nomor'] = sprintf("%04d", $nomor);   
                
             $ret = ''; 
			 $tgl_skrg = date("Y-m-d"); 
             $jam_skrg = date("H:i");
             $pdf_filename='SP2D_GUP/'.$id_sp2d.'_'.$tgl_skrg.'_'.$jam_skrg.'.pdf';
             $link_download = ($download_pdf==TRUE)?'': anchor(base_url().'gup/print_sp2d/true/','Download Pdf');
             
             $data['link'] = $link_download ;     
             $output = $this->load->view('gup/print_sp2d', $data,  true);     
            
             if($download_pdf==true)
                 generate_pdf_portrait($output,$pdf_filename);  
             else
                echo $output;
             }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK PENYETUJUAN SPM MENJADI SP2D
*/	
    function setuju_spm_sp2d(){
            if($this->auth->is_logged_in() == true){ 
            $th_spm = $this->uri->segment(3);
            $id_spm = $this->uri->segment(4);
            $this->m_gup->otorisasi_pr2($th_spm,$id_spm);
            $trans = $this->m_gup->selek_spp_trans($th_spm,$id_spm);
            foreach($trans->result_array() as $row){
                    $id_kwitansi = $row['id_kwitansi'];
                    $id_sptb = $row['id_sptb'];
                    $id_spp = $row['id_spp'];
                    $this->m_gup->trans_stat_pr2($id_kwitansi,$th_spm);
                    $this->m_gup->sptb_stat_pr2($id_sptb,$th_spm);
                    $this->m_gup->spp_stat_pr2($id_spp,$th_spm);
                    
                    $get_id = $this->m_gup->ambil_level_tertinggi($id_kwitansi,$th_spm);
                    foreach($get_id->result_array() as $row){
                    $level = $row['level'];  
                    }
                    $level_terkini =  $level+1;           
                    $this->m_gup->masuk_waktu_otorisasi_pr2($id_kwitansi,$level_terkini,$th_spm);
            }
            //echo $this->db->last_query();
            echo "<meta http-equiv='refresh' content='0; url=".site_url()."gup/list_spm_up_sp2d'>";  
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN LIST SP2D
*/	
    function list_sp2d_up(){   
        if($this->auth->is_logged_in() == true){
        $th = date('y');       
          $data['daftar_sp2d'] = $this->m_gup->list_sp2d($th);
          //echo $this->db->last_query();       
          $this->template->load('template','gup/list_sp2d_bp',$data);
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MEMBUAT BG
*/	
    function buat_bg(){   
        if($this->auth->is_logged_in() == true){
          $th_sp2d = $this->uri->segment(3);       
          $id_sp2d = $this->uri->segment(4);       
          $data['daftar_sp2d'] = $this->m_gup->list_sp2d2($id_sp2d,$th_sp2d);
          //echo $this->db->last_query();
          $data['nomor_bg'] = $this->m_gup->ambil_nomor_bg($th_sp2d);    
          $this->template->load('template','gup/pengisian_bg',$data);
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENYIMPAN BG
*/	
    function simpan_bg(){   
        if($this->auth->is_logged_in() == true){
          $id_sp2d = $this->input->post('id_sp2d');       
          $th_sp2d = $this->input->post('th_sp2d');       
          $id_spm = $this->input->post('id_spm');       
          $nomor_bg = $this->input->post('nomor_bg'); 
          $id_bg = $this->input->post('id_bg'); 
          
          $success = $this->m_gup->cek_adabg($nomor_bg);
          //echo $this->db->last_query();
          if($success){  
                //$this->m_gup->simpan_bg($id_sp2d,$nomor_bg);
              $this->m_gup->buat_bg_sp2d($id_sp2d,$id_bg,$th_sp2d);
              $this->m_gup->update_bg($id_bg,$th_sp2d);
              $this->m_gup->buat_bg($id_spm,$th_sp2d);
              $trans = $this->m_gup->selek_spp_trans($th_sp2d,$id_spm);
                foreach($trans->result_array() as $row){
                    $id_kwitansi = $row['id_kwitansi'];
                    $id_sptb = $row['id_sptb'];
                    $id_spp = $row['id_spp'];
                    $this->m_gup->trans_stat_telah_bg($id_kwitansi,$th_sp2d);
                    $this->m_gup->sptb_stat_telah_bg($id_sptb,$th_sp2d);
                    $this->m_gup->spp_stat_telah_bg($id_spp,$th_sp2d);
                    
                    $get_id = $this->m_gup->ambil_level_tertinggi($id_kwitansi,$th_sp2d);
                    foreach($get_id->result_array() as $row){
                    $level = $row['level'];  
                    }
                    $level_terkini =  $level+1;           
                    $this->m_gup->masuk_waktu_dibuatkan_bg($id_kwitansi,$level_terkini,$th_sp2d);
                } 
          }else{
                $this->session->set_userdata('msg_typ','err');
                $this->session->set_userdata('msg', 'Maaf Nomor BG ini sudah dipakai untuk membayar SP2D yang sebelumnya..');
                redirect('gup/buat_bg/'.$th_sp2d."/".$id_sp2d); 
          }     
          echo "<meta http-equiv='refresh' content='0; url=".site_url()."gup/list_sp2d_up'>"; 
          }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN PREVIEW BG
*/	
    function preview_bg(){   
        if($this->auth->is_logged_in() == true){
          $th_sp2d = $this->uri->segment(3);       
          $id_sp2d = $this->uri->segment(4);       
          $data['daftar_sp2d'] = $this->m_gup->list_sp2d3($id_sp2d,$th_sp2d);
          //echo $this->db->last_query();       
          $this->template->load('template','gup/preview_bg',$data);
        }
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK FUNGSI AUTO COMPLETE
*/
function lookup(){
		// process posted form data (the requested items like province)
        $keyword = $this->input->post('term');
        $data['response'] = 'false'; //Set default response
        $query = $this->m_gup->lookup($keyword); //Search DB
        if( ! empty($query) )
        {
            $data['response'] = 'true'; //Set response
            $data['message'] = array(); //Create array
            foreach( $query as $row )
            {
                $data['message'][] = array( 
                                        'id'=>$row->id_pegawai,
										'label'=>$row->nama_pegawai,
										'value'=>$row->golongan,
										'desc'=>$row->jabatan,
                                        ''
                                     );  //Add a row to array
            }
        }
        if('IS_AJAX')
        {
            echo json_encode($data); //echo json string if ajax request
        }
        else
        {
             $this->template->load('template','gup/gu_buat_kuitansi',$data);
        }
	}
	
/**
*
FUNGSI INI DIGUNAKAN UNTUK PRINT KWITANSI
*/
function print_kwitansi($download_pdf = true){
        if($this->auth->is_logged_in () == true){
            $th = date('y');
             $th=$this->uri->segment(3);
             $id=$this->uri->segment(4);
             $ret = '';
             $ID = $id;
			 
             $tgl_skrg = date("Y-m-d"); 
             $jam_skrg = date("H:i");
             $pdf_filename='KWITANSI_GU_-'.$id.'_'.$tgl_skrg.'_'.$jam_skrg.'.pdf';

             $link_download = ($download_pdf==TRUE)?'': anchor(base_url().'gup/print_kwitansi/true/','Download Pdf');
             $data['link'] = $link_download ;
		 	$id_unit = $this->session->userdata('id_unit');         
         	$data['hasil'] = $this->m_gup->getKuitansi($id,$th); 
         	$data['data'] = $this->m_gup->getNamattd($id_unit);
         	$data['get_nama_unit'] = $this->m_gup->get_nama_unit();
            $user_info = $this->load->view('gup/daftar_kwitansi/kwitansi_cetak',$data,true);
            
            
            
             if($download_pdf==true)
                 generate_pdf_A4($user_info,$pdf_filename);  
             else
                echo $output;
             }
         //$this->m_ls->ubah_status_kwi_cetak($id_unit,$id,$th);
		$this->m_gup->upJumUnduh($id,$th); 
		redirect('ls/daftar_kuitansi_gu');

    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MENGIRIM KWITANSI YANG TELAH DICETAK
*/	
function kirim_kwitansi_cetak(){   
        if($this->auth->is_logged_in() == true){         	
		$th = $this->uri->segment(3); 
        $id = $this->uri->segment(4); 
		$jumUnduh=$this->m_gup->jumUnduh($th,$id);
		if($jumUnduh==0)
		{
			  $this->session->set_userdata('msg_typ','err');
              $this->session->set_userdata('msg', 'Silahkan Unduh Sebelum mengirim Kwitansi');
			  redirect('gup/preview_kwitansi_cetak/'.$th.'/'.$id);
			}
		else
		{
				$this->m_gup->ubah_status_kwi_cetak($th,$id);
				$get_id = $this->m_gup->ambil_level_tertinggi($id,$th);
									foreach($get_id->result_array() as $row){
									$level = $row['level'];  
									}
									$level_terkini =  $level+1;
				$success = $this->m_gup->masuk_kirim_hasil_revisi($id,$th,$level_terkini);
			    $this->session->set_userdata('msg_typ','ok');
                $this->session->set_userdata('msg', 'Kwitansi berhasil dikirim ke verifikator unit');
				redirect('gup/daftar_siap_cetak');
			}
		}
    }


/**
*
FUNGSI INI DIGUNAKAN UNTUK EKSPORT DAFTAR HONOR KE EXCEL
*/
function eksport_excel(){
        $th=$this->uri->segment(3);
        $id=$this->uri->segment(4);
		$get_jenis = $this->m_gup->ambil_jenis_honor($id,$th);
		foreach ($get_jenis->result_array() as $row){
			$jenis = $row['jns_honor'];
		}
		if($jenis=='1')
		{ $this->print_excel_r1($id); }
		else  
		if($jenis=='2')
		{ $this->print_excel_r2($id); }  
		else  
		if($jenis=='3')
		{ $this->print_excel_r3($id); }  
		else  
		if($jenis=='4')
		{ $this->print_excel_r4($id); }  
		else  
		if($jenis=='5')
		{ $this->print_excel_r5($id); }  
		else  
		if($jenis=='6')
		{ $this->print_excel_r6($id); }  
		else  
		if($jenis=='7')
		{ $this->print_excel_r7($id); }  
		else  
		if($jenis=='8')
		{ $this->print_excel_r8($id); }  
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK MEMBUAT JURNAL
*/
function jurnal_buat($id){
		$jurnal_all = $this->m_gup->view_honor_print($id);
        //print_r($jurnal_all);
        $jurnal=array();
        foreach($jurnal_all as $rows) { 
            $jur['nama']=$rows->nama;
            $jur['jabatan']=$rows->jabatan;
            $jur['golongan']=$rows->golongan;
            $jur['bruto']=$rows->bruto;
            $jur['jum_bruto']=$rows->jum_bruto;
            $jur['jum_bln']=$rows->jum_bln;
            $jur['jum_org']=$rows->jum_org;
            $jur['jum_hadir']=$rows->jum_hadir;
            $jur['jum_hari']=$rows->jum_hari;
            $jur['kd_mk']=$rows->kd_mk;
            $jur['m_kul']=$rows->m_kul;
            $jur['nama_mhs']=$rows->nama_mhs;
            $jur['nim_mhs']=$rows->nim_mhs;
            $jur['honor_naskah']=$rows->honor_naskah;
			
            $jur['pph_honor']=$rows->pph_honor;
            $jur['nama_subunit']=$rows->nama_subunit;
            $jur['kop_honor']=$rows->kop_honor;
            $jur['no_sk_rektor']=$rows->no_sk_rektor;
            $jur['tgl_sk_rektor']=$rows->tgl_sk_rektor;
            $jur['tgl_kwitansi']=$rows->tgl_kwitansi;
            $jur['kdoutput']=$rows->kdoutput;
            $jur['kdkomponen']=$rows->kdkomponen;
            $jur['penerima']=$rows->penerima;
            $jur['nip_penerima']=$rows->nip_penerima;
            $jur['tahun']=$rows->tahun;
            $jurnal[]=$jur;
        }
        //print_r($jurnal);
        return $jurnal;
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK PRINT RINCIAN HONOR 1
*/
function print_excel_r1($id){
        //load our new PHPExcel library
    $this->load->library('excel');
    $this->excel->getDefaultStyle()->getFont()->setName('Arila')->setSize(10); //set default font
    //activate worksheet number 1
    $this->excel->setActiveSheetIndex(0);
    //name the worksheet
    $sheet=$this->excel->getActiveSheet();
    $sheet->setShowGridlines(false);
    $sheet->setTitle('Rician Honor');

	//============================
    $default_border = array(
        'style' => PHPExcel_Style_Border::BORDER_THIN,
        'color' => array('rgb'=>'000000')
    );
    $style_header = array(
        'borders' => array(
            'allborders' => $default_border
        ),
        'fill' => array(
            'type' => PHPExcel_Style_Fill::FILL_SOLID,
            'color' => array('rgb'=>'E1E0F7'),
        ),
        'font' => array(
            'bold' => true,
        ),
        'alignment' => array(
            'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
            'wrap'       => true
        )
    );
    $style_isi=array(
        'borders' => array(
            'allborders' => $default_border
        ),
        'alignment' => array(
             'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
        )
    );

	//============================
    $jurnal_arr =$this->jurnal_buat($id);
    foreach($jurnal_arr as $baris=>$jurnal)
	{
	$nama_sub=($jurnal['nama_subunit']);
	$kop_honor=($jurnal['kop_honor']);
	$no_sk_rektor=($jurnal['no_sk_rektor']);
	$tgl_sk_rektor=($jurnal['tgl_sk_rektor']);
	$tgl_kwitansi=($jurnal['tgl_kwitansi']);
	$kdoutput=($jurnal['kdoutput']);
	$kdkomponen=($jurnal['kdkomponen']);
	$tahun=($jurnal['tahun']);
	
	$penerima=($jurnal['penerima']);
	$nip_penerima=($jurnal['nip_penerima']);
	}
	//========================
    $sheet->setCellValue('A1', 'KEMENTRIAN PENDIDIKAN DAN KEBUDAYAAN');//set cell A1 content with some text
    $sheet->getStyle('A1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A1')->getFont()->setBold(true);//make the font become bold
    //$sheet->mergeCells('A1:H1');//merge cell A1 until D1
    //========================
    $sheet->setCellValue('A2', 'UNIVERSITAS UDAYANA');//set cell A1 content with some text
    $sheet->getStyle('A2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('A3', 'PROGRAM  '.$nama_sub);//set cell A1 content with some text
    $sheet->getStyle('A3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A3')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('G1', 'PROGRAM  '.$nama_sub);//set cell A1 content with some text
    $sheet->getStyle('G1')->getFont()->setSize(8);//change the font size
    $sheet->getStyle('G1')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('G1:G3');//merge cell A1 until D1
    $sheet->getStyle('G1')->getAlignment()->setWrapText(true);	
    //========================
    $sheet->getStyle('G1:G3')->applyFromArray( $style_isi );
    $sheet->getStyle('H1:H3')->applyFromArray( $style_isi );
    $sheet->getStyle('I1:I3')->applyFromArray( $style_isi );
	//====== KANAN ===========
    $sheet->setCellValue('H1', 'KAS BUKU');//set cell A1 content with some text
    $sheet->getStyle('H1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H1')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('H2', 'TANGGAL');//set cell A1 content with some text
    $sheet->getStyle('H2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('H3', 'KODE / MAK');//set cell A1 content with some text
    $sheet->getStyle('H3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H3')->getFont()->setBold(true);//make the font become bold
    //========================
	
    $sheet->setCellValue('I1', '');//set cell A1 content with some text
    $sheet->getStyle('I1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I1')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('I2', $tgl_kwitansi);//set cell A1 content with some text
    $sheet->getStyle('I2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('I3', '4078 . '.$kdoutput.' . '.$kdkomponen);//set cell A1 content with some text
    $sheet->getStyle('I3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I3')->getFont()->setBold(true);//make the font become bold
    //========================
	
	//=== KOP ===
    $sheet->setCellValue('A6', $kop_honor);//set cell A1 content with some text
    $sheet->getStyle('A6')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A6')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A6:I6');//merge cell A1 until D1
    $sheet->getStyle('A6')->getAlignment()->setWrapText(true);
    $sheet->getStyle('A6')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A7', 'Yang dibayar dari dana DIPA BLU Universitas Udayana Tahun Anggaran '.$tahun);//set cell A1 content with some text
    $sheet->getStyle('A7')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A7')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A7:I7');//merge cell A1 until D1
    $sheet->getStyle('A7')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A8', 'Berdasarkan SK Rektor Nomor : '.$no_sk_rektor);//set cell A1 content with some text
    $sheet->getStyle('A8')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A8')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A8:I8');//merge cell A1 until D1
    $sheet->getStyle('A8')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A9', 'Tanggal  '.$tgl_sk_rektor);//set cell A1 content with some text
    $sheet->getStyle('A9')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A9')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A9:I9');//merge cell A1 until D1
    $sheet->getStyle('A9')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================

	//=== TABEL ===	
    $sheet->setCellValue('A11', 'No');
    $sheet->setCellValue('B11', 'Nama Dosen');
    $sheet->setCellValue('C11', 'Jabatan');
    $sheet->setCellValue('D11', 'GoL');
    $sheet->setCellValue('E11', 'Jumlah Bulan');
    $sheet->setCellValue('F11', 'Tarif / Bulan');
    $sheet->setCellValue('G11', 'Jumlah Honor Bruto');
    $sheet->setCellValue('H11', 'pph');
    $sheet->setCellValue('I11', 'Jumlah Honor Diterima');
    $sheet->setCellValue('J11', 'Tanda Tangan');
    
    
    $sheet->getStyle('A11:J11')->applyFromArray( $style_header );
    
    $sheet->getColumnDimension('A')->setWidth(5);
    $sheet->getColumnDimension('B')->setWidth(40);
    $sheet->getColumnDimension('C')->setWidth(18);
    $sheet->getColumnDimension('D')->setWidth(10);
    $sheet->getColumnDimension('E')->setWidth(10);
    $sheet->getColumnDimension('F')->setWidth(18);
    $sheet->getColumnDimension('G')->setWidth(20);
    $sheet->getColumnDimension('H')->setWidth(10);
    $sheet->getColumnDimension('I')->setWidth(20);
    $sheet->getColumnDimension('J')->setWidth(30);
    
    $no='1';
	$tot_brut=0;
	$tot_jum_brut=0;
	$tot_pph=0;
	$tot_jum_terima=0;
	$tot_jum_bln=0;
    foreach($jurnal_arr as $baris=>$jurnal){

        $sheet->setCellValueByColumnAndRow(0,$baris+12,$no++);
        $sheet->setCellValueByColumnAndRow(1,$baris+12,$jurnal['nama']);
        $sheet->setCellValueByColumnAndRow(2,$baris+12,$jurnal['jabatan']);
        $sheet->setCellValueByColumnAndRow(3,$baris+12,$jurnal['golongan']);
        $sheet->setCellValueByColumnAndRow(4,$baris+12,$jurnal['jum_bln']);
        $sheet->setCellValueByColumnAndRow(5,$baris+12,$jurnal['bruto']);
        $sheet->setCellValueByColumnAndRow(6,$baris+12,$jurnal['jum_bruto']);
        $sheet->setCellValueByColumnAndRow(7,$baris+12,$jurnal['pph_honor']);
        $sheet->setCellValueByColumnAndRow(8,$baris+12,($jurnal['jum_bruto'])-($jurnal['pph_honor']));
        $sheet->setCellValueByColumnAndRow(9,$baris+12,'-');
        $sheet->getStyle('A'.($baris+12).':J'.($baris+12))->applyFromArray( $style_isi );
		
		$tot_brut=$tot_brut+($jurnal['bruto']);
		$tot_jum_brut=$tot_jum_brut+($jurnal['jum_bruto']);
		$tot_pph=$tot_pph+($jurnal['pph_honor']);
		$tot_jum_terima=$tot_jum_terima+ ($jurnal['jum_bruto'])-($jurnal['pph_honor']);
		$tot_jum_bln=$tot_jum_bln+($jurnal['jum_bln']);
		//===================================================

    }
        $sheet->setCellValueByColumnAndRow(0,$no+11,'Jumlah');
        $sheet->setCellValueByColumnAndRow(1,$no+11,'');
        $sheet->setCellValueByColumnAndRow(2,$no+11,'');
        $sheet->setCellValueByColumnAndRow(3,$no+11,'');
		$sheet->mergeCells("A".($no+11).":D".($no+11));
        $sheet->setCellValueByColumnAndRow(4,$no+11,$tot_jum_bln);
        $sheet->setCellValueByColumnAndRow(5,$no+11,$tot_brut);
        $sheet->setCellValueByColumnAndRow(6,$no+11,$tot_jum_brut);
        $sheet->setCellValueByColumnAndRow(7,$no+11,$tot_pph);
        $sheet->setCellValueByColumnAndRow(8,$no+11,$tot_jum_terima);
        $sheet->setCellValueByColumnAndRow(9,$no+11,'');
        $sheet->getStyle('A'.($no+11).':J'.($no+11))->applyFromArray( $style_isi );
		
		
        $sheet->setCellValueByColumnAndRow(0,$no+13,'( '.$this->uang->terbilang($tot_jum_brut).' )');
		$sheet->mergeCells("A".($no+13).":J".($no+13));        
    	$sheet->getStyle('A'.($no+13))->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
		//===============================================
        $sheet->setCellValueByColumnAndRow(0,$no+15,'Mengetahui');
        $sheet->setCellValueByColumnAndRow(0,$no+16,'Atas Nama Dekan Fakultas Ekonomi Unud');
        $sheet->setCellValueByColumnAndRow(0,$no+17,'Pejabat Pembuat Komitmen');
        $sheet->setCellValueByColumnAndRow(0,$no+20,'Prof. Dr. Made Wardana, SE., MP.');
        $sheet->setCellValueByColumnAndRow(0,$no+21,'NIP. 19550801 198103 1 031');
		
		//===============================================
        $sheet->setCellValueByColumnAndRow(3,$no+15,'Bendahara Pengeluaran Pembantu');
        $sheet->setCellValueByColumnAndRow(3,$no+16,'Fakultas Ekonomi Udayana');
        $sheet->setCellValueByColumnAndRow(3,$no+17,'');
        $sheet->setCellValueByColumnAndRow(3,$no+20,'Nyoman Kensi');
        $sheet->setCellValueByColumnAndRow(3,$no+21,'NIP. 19600612 198103 2 001');
		
		//===============================================
        $sheet->setCellValueByColumnAndRow(7,$no+15,'Denpasar, '.$tgl_kwitansi);
        $sheet->setCellValueByColumnAndRow(7,$no+16,'Pembuat Daftar');
        $sheet->setCellValueByColumnAndRow(7,$no+17,'Program '.$nama_sub);
        $sheet->setCellValueByColumnAndRow(7,$no+20,$penerima);
        $sheet->setCellValueByColumnAndRow(7,$no+21, 'Nip'.$nip_penerima);

		
    $filename='Rincian_Honor.xls'; //save our workbook as this file name
    header('Content-Type: application/vnd.ms-excel'); //mime type
    header('Content-Disposition: attachment;filename="'.$filename.'"'); //tell browser what's the file name
    header('Cache-Control: max-age=0'); //no cache
                 
    //save it to Excel5 format (excel 2003 .XLS file), change this to 'Excel2007' (and adjust the filename extension, also the header mime type)
    //if you want to save it as .XLSX Excel 2007 format
    $objWriter = PHPExcel_IOFactory::createWriter($this->excel, 'Excel5');  
    //force user to download the Excel file without writing it to server's HD
    $objWriter->save('php://output');
    }
	
/**
*
FUNGSI INI DIGUNAKAN UNTUK PRINT RINCIAN HONOR 2
*/
function print_excel_r2($id){
        //load our new PHPExcel library
    $this->load->library('excel');
    $this->excel->getDefaultStyle()->getFont()->setName('Arila')->setSize(10); //set default font
    //activate worksheet number 1
    $this->excel->setActiveSheetIndex(0);
    //name the worksheet
    $sheet=$this->excel->getActiveSheet();
    $sheet->setShowGridlines(false);
    $sheet->setTitle('Rician Honor');

	//============================
    $default_border = array(
        'style' => PHPExcel_Style_Border::BORDER_THIN,
        'color' => array('rgb'=>'000000')
    );
    $style_header = array(
        'borders' => array(
            'allborders' => $default_border
        ),
        'fill' => array(
            'type' => PHPExcel_Style_Fill::FILL_SOLID,
            'color' => array('rgb'=>'E1E0F7'),
        ),
        'font' => array(
            'bold' => true,
        ),
        'alignment' => array(
            'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
            'wrap'       => true
        )
    );
    $style_isi=array(
        'borders' => array(
            'allborders' => $default_border
        ),
        'alignment' => array(
             'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
        )
    );

	//============================
    $jurnal_arr =$this->jurnal_buat($id);
    foreach($jurnal_arr as $baris=>$jurnal)
	{
	$nama_sub=($jurnal['nama_subunit']);
	$kop_honor=($jurnal['kop_honor']);
	$no_sk_rektor=($jurnal['no_sk_rektor']);
	$tgl_sk_rektor=($jurnal['tgl_sk_rektor']);
	$tgl_kwitansi=($jurnal['tgl_kwitansi']);
	$kdoutput=($jurnal['kdoutput']);
	$kdkomponen=($jurnal['kdkomponen']);
	$tahun=($jurnal['tahun']);
	
	$penerima=($jurnal['penerima']);
	$nip_penerima=($jurnal['nip_penerima']);
	}
	//========================
    $sheet->setCellValue('A1', 'KEMENTRIAN PENDIDIKAN DAN KEBUDAYAAN');//set cell A1 content with some text
    $sheet->getStyle('A1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A1')->getFont()->setBold(true);//make the font become bold
    //$sheet->mergeCells('A1:H1');//merge cell A1 until D1
    //========================
    $sheet->setCellValue('A2', 'UNIVERSITAS UDAYANA');//set cell A1 content with some text
    $sheet->getStyle('A2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('A3', 'PROGRAM  '.$nama_sub);//set cell A1 content with some text
    $sheet->getStyle('A3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A3')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('G1', 'PROGRAM  '.$nama_sub);//set cell A1 content with some text
    $sheet->getStyle('G1')->getFont()->setSize(8);//change the font size
    $sheet->getStyle('G1')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('G1:G3');//merge cell A1 until D1
    $sheet->getStyle('G1')->getAlignment()->setWrapText(true);	
    //========================
    $sheet->getStyle('G1:G3')->applyFromArray( $style_isi );
    $sheet->getStyle('H1:H3')->applyFromArray( $style_isi );
    $sheet->getStyle('I1:I3')->applyFromArray( $style_isi );
	//====== KANAN ===========
    $sheet->setCellValue('H1', 'KAS BUKU');//set cell A1 content with some text
    $sheet->getStyle('H1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H1')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('H2', 'TANGGAL');//set cell A1 content with some text
    $sheet->getStyle('H2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('H3', 'KODE / MAK');//set cell A1 content with some text
    $sheet->getStyle('H3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H3')->getFont()->setBold(true);//make the font become bold
    //========================
	
    $sheet->setCellValue('I1', '');//set cell A1 content with some text
    $sheet->getStyle('I1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I1')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('I2', $tgl_kwitansi);//set cell A1 content with some text
    $sheet->getStyle('I2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('I3', '4078 . '.$kdoutput.' . '.$kdkomponen);//set cell A1 content with some text
    $sheet->getStyle('I3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I3')->getFont()->setBold(true);//make the font become bold
    //========================
	
	//=== KOP ===
    $sheet->setCellValue('A6', $kop_honor);//set cell A1 content with some text
    $sheet->getStyle('A6')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A6')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A6:I6');//merge cell A1 until D1
    $sheet->getStyle('A6')->getAlignment()->setWrapText(true);
    $sheet->getStyle('A6')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A7', 'Yang dibayar dari dana DIPA BLU Universitas Udayana Tahun Anggaran '.$tahun);//set cell A1 content with some text
    $sheet->getStyle('A7')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A7')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A7:I7');//merge cell A1 until D1
    $sheet->getStyle('A7')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A8', 'Berdasarkan SK Rektor Nomor : '.$no_sk_rektor);//set cell A1 content with some text
    $sheet->getStyle('A8')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A8')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A8:I8');//merge cell A1 until D1
    $sheet->getStyle('A8')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A9', 'Tanggal  '.$tgl_sk_rektor);//set cell A1 content with some text
    $sheet->getStyle('A9')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A9')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A9:I9');//merge cell A1 until D1
    $sheet->getStyle('A9')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================

	//=== TABEL ===	
    $sheet->setCellValue('A11', 'No');
    $sheet->setCellValue('B11', 'Nama Dosen');
    $sheet->setCellValue('C11', 'GoL');
    $sheet->setCellValue('D11', 'Kode MK');
    $sheet->setCellValue('E11', 'Mata Kuliah');
    $sheet->setCellValue('F11', 'Kehadiran');
    $sheet->setCellValue('G11', 'Tarif / Kehadiran');
    $sheet->setCellValue('H11', 'Jumlah Honor Bruto');
    $sheet->setCellValue('I11', 'pph');
    $sheet->setCellValue('J11', 'Jumlah Honor Diterima');
    $sheet->setCellValue('K11', 'Tanda Tangan');
    
    
    $sheet->getStyle('A11:K11')->applyFromArray( $style_header );
    
    $sheet->getColumnDimension('A')->setWidth(5);
    $sheet->getColumnDimension('B')->setWidth(40);
    $sheet->getColumnDimension('C')->setWidth(10);
    $sheet->getColumnDimension('D')->setWidth(10);
    $sheet->getColumnDimension('E')->setWidth(18);
    $sheet->getColumnDimension('F')->setWidth(10);
    $sheet->getColumnDimension('G')->setWidth(18);
    $sheet->getColumnDimension('H')->setWidth(20);
    $sheet->getColumnDimension('I')->setWidth(18);
    $sheet->getColumnDimension('J')->setWidth(20);
    $sheet->getColumnDimension('K')->setWidth(30);
    
    $no='1';
	$tot_brut=0;
	$tot_jum_brut=0;
	$tot_pph=0;
	$tot_jum_terima=0;
	$tot_jum_bln=0;
    foreach($jurnal_arr as $baris=>$jurnal){

        $sheet->setCellValueByColumnAndRow(0,$baris+12,$no++);
        $sheet->setCellValueByColumnAndRow(1,$baris+12,$jurnal['nama']);
        $sheet->setCellValueByColumnAndRow(2,$baris+12,$jurnal['golongan']);
        $sheet->setCellValueByColumnAndRow(3,$baris+12,$jurnal['kd_mk']);
        $sheet->setCellValueByColumnAndRow(4,$baris+12,$jurnal['m_kul']);
        $sheet->setCellValueByColumnAndRow(5,$baris+12,$jurnal['jum_hadir']);
        $sheet->setCellValueByColumnAndRow(6,$baris+12,$jurnal['bruto']);
        $sheet->setCellValueByColumnAndRow(7,$baris+12,$jurnal['jum_bruto']);
        $sheet->setCellValueByColumnAndRow(8,$baris+12,$jurnal['pph_honor']);
        $sheet->setCellValueByColumnAndRow(9,$baris+12,($jurnal['jum_bruto'])-($jurnal['pph_honor']));
        $sheet->setCellValueByColumnAndRow(10,$baris+12,'-');
        $sheet->getStyle('A'.($baris+12).':K'.($baris+12))->applyFromArray( $style_isi );
		
		$tot_brut=$tot_brut+($jurnal['bruto']);
		$tot_jum_brut=$tot_jum_brut+($jurnal['jum_bruto']);
		$tot_pph=$tot_pph+($jurnal['pph_honor']);
		$tot_jum_terima=$tot_jum_terima+ ($jurnal['jum_bruto'])-($jurnal['pph_honor']);
		$tot_jum_bln=$tot_jum_bln+($jurnal['jum_hadir']);
		//===================================================

    }
        $sheet->setCellValueByColumnAndRow(0,$no+11,'Jumlah');
        $sheet->setCellValueByColumnAndRow(1,$no+11,'');
        $sheet->setCellValueByColumnAndRow(2,$no+11,'');
        $sheet->setCellValueByColumnAndRow(3,$no+11,'');
        $sheet->setCellValueByColumnAndRow(4,$no+11,'');
				$sheet->mergeCells("A".($no+11).":E".($no+11));
        $sheet->setCellValueByColumnAndRow(5,$no+11,$tot_jum_bln);
        $sheet->setCellValueByColumnAndRow(6,$no+11,$tot_brut);
        $sheet->setCellValueByColumnAndRow(7,$no+11,$tot_jum_brut);
        $sheet->setCellValueByColumnAndRow(8,$no+11,$tot_pph);
        $sheet->setCellValueByColumnAndRow(9,$no+11,$tot_jum_terima);
        $sheet->setCellValueByColumnAndRow(10,$no+11,'');
        $sheet->getStyle('A'.($no+11).':K'.($no+11))->applyFromArray( $style_isi );
		
		
        $sheet->setCellValueByColumnAndRow(0,$no+13,'( '.$this->uang->terbilang($tot_jum_brut).' )');
		$sheet->mergeCells("A".($no+13).":I".($no+13));        
    	$sheet->getStyle('A'.($no+13))->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
		//===============================================
        $sheet->setCellValueByColumnAndRow(0,$no+15,'Mengetahui');

        $sheet->setCellValueByColumnAndRow(0,$no+16,'Atas Nama Dekan Fakultas Ekonomi Unud');
        $sheet->setCellValueByColumnAndRow(0,$no+17,'Pejabat Pembuat Komitmen');
        $sheet->setCellValueByColumnAndRow(0,$no+20,'Prof. Dr. Made Wardana, SE., MP.');
        $sheet->setCellValueByColumnAndRow(0,$no+21,'NIP. 19550801 198103 1 031');
		
		//===============================================
        $sheet->setCellValueByColumnAndRow(3,$no+15,'Bendahara Pengeluaran Pembantu');
        $sheet->setCellValueByColumnAndRow(3,$no+16,'Fakultas Ekonomi Udayana');
        $sheet->setCellValueByColumnAndRow(3,$no+17,'');
        $sheet->setCellValueByColumnAndRow(3,$no+20,'Nyoman Kensi');
        $sheet->setCellValueByColumnAndRow(3,$no+21,'NIP. 19600612 198103 2 001');
		
		//===============================================
        $sheet->setCellValueByColumnAndRow(7,$no+15,'Denpasar, '.$tgl_kwitansi);
        $sheet->setCellValueByColumnAndRow(7,$no+16,'Pembuat Daftar');
        $sheet->setCellValueByColumnAndRow(7,$no+17,'Program '.$nama_sub);
        $sheet->setCellValueByColumnAndRow(7,$no+20,$penerima);
        $sheet->setCellValueByColumnAndRow(7,$no+21, 'Nip'.$nip_penerima);

		
    $filename='Rincian_Honor.xls'; //save our workbook as this file name
    header('Content-Type: application/vnd.ms-excel'); //mime type
    header('Content-Disposition: attachment;filename="'.$filename.'"'); //tell browser what's the file name
    header('Cache-Control: max-age=0'); //no cache
                 
    //save it to Excel5 format (excel 2003 .XLS file), change this to 'Excel2007' (and adjust the filename extension, also the header mime type)
    //if you want to save it as .XLSX Excel 2007 format
    $objWriter = PHPExcel_IOFactory::createWriter($this->excel, 'Excel5');  
    //force user to download the Excel file without writing it to server's HD
    $objWriter->save('php://output');
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK PRINT RINCIAN HONOR 3
*/
function print_excel_r3($id){
        //load our new PHPExcel library
    $this->load->library('excel');
    $this->excel->getDefaultStyle()->getFont()->setName('Arila')->setSize(10); //set default font
    //activate worksheet number 1
    $this->excel->setActiveSheetIndex(0);
    //name the worksheet
    $sheet=$this->excel->getActiveSheet();
    $sheet->setShowGridlines(false);
    $sheet->setTitle('Rician Honor');

	//============================
    $default_border = array(
        'style' => PHPExcel_Style_Border::BORDER_THIN,
        'color' => array('rgb'=>'000000')
    );
    $style_header = array(
        'borders' => array(
            'allborders' => $default_border
        ),
        'fill' => array(
            'type' => PHPExcel_Style_Fill::FILL_SOLID,
            'color' => array('rgb'=>'E1E0F7'),
        ),
        'font' => array(
            'bold' => true,
        ),
        'alignment' => array(
            'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
            'wrap'       => true
        )
    );
    $style_isi=array(
        'borders' => array(
            'allborders' => $default_border
        ),
        'alignment' => array(
             'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
        )
    );

	//============================
    $jurnal_arr =$this->jurnal_buat($id);
    foreach($jurnal_arr as $baris=>$jurnal)
	{
	$nama_sub=($jurnal['nama_subunit']);
	$kop_honor=($jurnal['kop_honor']);
	$no_sk_rektor=($jurnal['no_sk_rektor']);
	$tgl_sk_rektor=($jurnal['tgl_sk_rektor']);
	$tgl_kwitansi=($jurnal['tgl_kwitansi']);
	$kdoutput=($jurnal['kdoutput']);
	$kdkomponen=($jurnal['kdkomponen']);
	$tahun=($jurnal['tahun']);
	
	$penerima=($jurnal['penerima']);
	$nip_penerima=($jurnal['nip_penerima']);
	}
	//========================
    $sheet->setCellValue('A1', 'KEMENTRIAN PENDIDIKAN DAN KEBUDAYAAN');//set cell A1 content with some text
    $sheet->getStyle('A1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A1')->getFont()->setBold(true);//make the font become bold
    //$sheet->mergeCells('A1:H1');//merge cell A1 until D1
    //========================
    $sheet->setCellValue('A2', 'UNIVERSITAS UDAYANA');//set cell A1 content with some text
    $sheet->getStyle('A2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('A3', 'PROGRAM  '.$nama_sub);//set cell A1 content with some text
    $sheet->getStyle('A3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A3')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('G1', 'PROGRAM  '.$nama_sub);//set cell A1 content with some text
    $sheet->getStyle('G1')->getFont()->setSize(8);//change the font size
    $sheet->getStyle('G1')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('G1:G3');//merge cell A1 until D1
    $sheet->getStyle('G1')->getAlignment()->setWrapText(true);	
    //========================
    $sheet->getStyle('G1:G3')->applyFromArray( $style_isi );
    $sheet->getStyle('H1:H3')->applyFromArray( $style_isi );
    $sheet->getStyle('I1:I3')->applyFromArray( $style_isi );
	//====== KANAN ===========
    $sheet->setCellValue('H1', 'KAS BUKU');//set cell A1 content with some text
    $sheet->getStyle('H1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H1')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('H2', 'TANGGAL');//set cell A1 content with some text
    $sheet->getStyle('H2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('H3', 'KODE / MAK');//set cell A1 content with some text
    $sheet->getStyle('H3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H3')->getFont()->setBold(true);//make the font become bold
    //========================
	
    $sheet->setCellValue('I1', '');//set cell A1 content with some text
    $sheet->getStyle('I1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I1')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('I2', $tgl_kwitansi);//set cell A1 content with some text
    $sheet->getStyle('I2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('I3', '4078 . '.$kdoutput.' . '.$kdkomponen);//set cell A1 content with some text
    $sheet->getStyle('I3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I3')->getFont()->setBold(true);//make the font become bold
    //========================
	
	//=== KOP ===
    $sheet->setCellValue('A6', $kop_honor);//set cell A1 content with some text
    $sheet->getStyle('A6')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A6')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A6:I6');//merge cell A1 until D1
    $sheet->getStyle('A6')->getAlignment()->setWrapText(true);
    $sheet->getStyle('A6')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A7', 'Yang dibayar dari dana DIPA BLU Universitas Udayana Tahun Anggaran '.$tahun);//set cell A1 content with some text
    $sheet->getStyle('A7')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A7')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A7:I7');//merge cell A1 until D1
    $sheet->getStyle('A7')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A8', 'Berdasarkan SK Rektor Nomor : '.$no_sk_rektor);//set cell A1 content with some text
    $sheet->getStyle('A8')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A8')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A8:I8');//merge cell A1 until D1
    $sheet->getStyle('A8')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A9', 'Tanggal  '.$tgl_sk_rektor);//set cell A1 content with some text
    $sheet->getStyle('A9')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A9')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A9:I9');//merge cell A1 until D1
    $sheet->getStyle('A9')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================

	//=== TABEL ===	
    $sheet->setCellValue('A11', 'No');
    $sheet->setCellValue('B11', 'Nama Dosen');
    $sheet->setCellValue('C11', 'GoL');
    $sheet->setCellValue('D11', 'Kode MK');
    $sheet->setCellValue('E11', 'Mata Kuliah');
    $sheet->setCellValue('F11', 'Jumlah Peserta Ujian');
    $sheet->setCellValue('G11', 'Tarif Koreksi / Mahasiswa');
    $sheet->setCellValue('H11', 'Jumlah Honor Koreksi');
    $sheet->setCellValue('I11', 'Honor Naskah');
    $sheet->setCellValue('J11', 'Jumlah Honor');
    $sheet->setCellValue('K11', 'pph');
    $sheet->setCellValue('L11', 'Jumlah Honor Diterima');
    $sheet->setCellValue('M11', 'Tanda Tangan');
    
    
    $sheet->getStyle('A11:M11')->applyFromArray( $style_header );
    
    $sheet->getColumnDimension('A')->setWidth(5);
    $sheet->getColumnDimension('B')->setWidth(40);
    $sheet->getColumnDimension('C')->setWidth(10);
    $sheet->getColumnDimension('D')->setWidth(10);
    $sheet->getColumnDimension('E')->setWidth(18);
    $sheet->getColumnDimension('F')->setWidth(10);
    $sheet->getColumnDimension('G')->setWidth(18);
    $sheet->getColumnDimension('H')->setWidth(18);
    $sheet->getColumnDimension('I')->setWidth(18);
    $sheet->getColumnDimension('J')->setWidth(18);
    $sheet->getColumnDimension('K')->setWidth(18);
    $sheet->getColumnDimension('L')->setWidth(20);
    $sheet->getColumnDimension('M')->setWidth(30);
    $no='1';
	$tot_brut=0;
	$tot_jum_brut=0;
	$tot_pph=0;
	$tot_jum_terima=0;
	$tot_jum_bln=0;
	$tot_jum_hn=0;
	$tot_jum_koreksi=0;
	$tot_hn=0;
    foreach($jurnal_arr as $baris=>$jurnal){

        $sheet->setCellValueByColumnAndRow(0,$baris+12,$no++);
        $sheet->setCellValueByColumnAndRow(1,$baris+12,$jurnal['nama']);
        $sheet->setCellValueByColumnAndRow(2,$baris+12,$jurnal['golongan']);
        $sheet->setCellValueByColumnAndRow(3,$baris+12,$jurnal['kd_mk']);
        $sheet->setCellValueByColumnAndRow(4,$baris+12,$jurnal['m_kul']);
        $sheet->setCellValueByColumnAndRow(5,$baris+12,$jurnal['jum_org']);
        $sheet->setCellValueByColumnAndRow(6,$baris+12,$jurnal['bruto']);
        $sheet->setCellValueByColumnAndRow(7,$baris+12,(($jurnal['jum_org'])*($jurnal['bruto'])));
        $sheet->setCellValueByColumnAndRow(8,$baris+12,$jurnal['honor_naskah']);
        $sheet->setCellValueByColumnAndRow(9,$baris+12,((($jurnal['jum_org'])*($jurnal['bruto']))+($jurnal['honor_naskah'])));
        $sheet->setCellValueByColumnAndRow(10,$baris+12,$jurnal['pph_honor']);
        $sheet->setCellValueByColumnAndRow(11,$baris+12,((($jurnal['jum_org'])*($jurnal['bruto']))+($jurnal['honor_naskah']))-($jurnal['pph_honor']));
        $sheet->setCellValueByColumnAndRow(12,$baris+12,'-');
        $sheet->getStyle('A'.($baris+12).':M'.($baris+12))->applyFromArray( $style_isi );
		
		$tot_brut=$tot_brut+($jurnal['bruto']);
		$tot_jum_brut=$tot_jum_brut+(($jurnal['jum_org'])*($jurnal['bruto']));
		$tot_pph=$tot_pph+($jurnal['pph_honor']);
		$tot_jum_terima=$tot_jum_terima+ (((($jurnal['jum_org'])*($jurnal['bruto']))+($jurnal['honor_naskah']))-($jurnal['pph_honor']));
		$tot_jum_bln=$tot_jum_bln+($jurnal['jum_org']);
		$tot_jum_hn=$tot_jum_hn+($jurnal['honor_naskah']);
		$tot_hn=$tot_hn+((($jurnal['jum_org'])*($jurnal['bruto']))+($jurnal['honor_naskah']));
		//===================================================

    }
        $sheet->setCellValueByColumnAndRow(0,$no+11,'Jumlah');
        $sheet->setCellValueByColumnAndRow(1,$no+11,'');
        $sheet->setCellValueByColumnAndRow(2,$no+11,'');
        $sheet->setCellValueByColumnAndRow(3,$no+11,'');
        $sheet->setCellValueByColumnAndRow(4,$no+11,'');
				$sheet->mergeCells("A".($no+11).":E".($no+11));
        $sheet->setCellValueByColumnAndRow(5,$no+11,$tot_jum_bln);
        $sheet->setCellValueByColumnAndRow(6,$no+11,$tot_brut);
        $sheet->setCellValueByColumnAndRow(7,$no+11,$tot_jum_brut);
        $sheet->setCellValueByColumnAndRow(8,$no+11,$tot_jum_hn);
        $sheet->setCellValueByColumnAndRow(9,$no+11,$tot_hn);
        $sheet->setCellValueByColumnAndRow(10,$no+11,$tot_pph);
        $sheet->setCellValueByColumnAndRow(11,$no+11,$tot_jum_terima);
        $sheet->setCellValueByColumnAndRow(12,$no+11,'');
        $sheet->getStyle('A'.($no+11).':M'.($no+11))->applyFromArray( $style_isi );
		
		
        $sheet->setCellValueByColumnAndRow(0,$no+13,'( '.$this->uang->terbilang($tot_jum_brut).' )');
		$sheet->mergeCells("A".($no+13).":M".($no+13));        
    	$sheet->getStyle('A'.($no+13))->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
		//===============================================
        $sheet->setCellValueByColumnAndRow(0,$no+15,'Mengetahui');
        $sheet->setCellValueByColumnAndRow(0,$no+16,'Atas Nama Dekan Fakultas Ekonomi Unud');
        $sheet->setCellValueByColumnAndRow(0,$no+17,'Pejabat Pembuat Komitmen');
        $sheet->setCellValueByColumnAndRow(0,$no+20,'Prof. Dr. Made Wardana, SE., MP.');
        $sheet->setCellValueByColumnAndRow(0,$no+21,'NIP. 19550801 198103 1 031');
		
		//===============================================
        $sheet->setCellValueByColumnAndRow(3,$no+15,'Bendahara Pengeluaran Pembantu');
        $sheet->setCellValueByColumnAndRow(3,$no+16,'Fakultas Ekonomi Udayana');
        $sheet->setCellValueByColumnAndRow(3,$no+17,'');
        $sheet->setCellValueByColumnAndRow(3,$no+20,'Nyoman Kensi');
        $sheet->setCellValueByColumnAndRow(3,$no+21,'NIP. 19600612 198103 2 001');
		
		//===============================================
        $sheet->setCellValueByColumnAndRow(7,$no+15,'Denpasar, '.$tgl_kwitansi);
        $sheet->setCellValueByColumnAndRow(7,$no+16,'Pembuat Daftar');
        $sheet->setCellValueByColumnAndRow(7,$no+17,'Program '.$nama_sub);
        $sheet->setCellValueByColumnAndRow(7,$no+20,$penerima);
        $sheet->setCellValueByColumnAndRow(7,$no+21, 'Nip'.$nip_penerima);

		
    $filename='Rincian_Honor.xls'; //save our workbook as this file name
    header('Content-Type: application/vnd.ms-excel'); //mime type
    header('Content-Disposition: attachment;filename="'.$filename.'"'); //tell browser what's the file name
    header('Cache-Control: max-age=0'); //no cache
                 
    //save it to Excel5 format (excel 2003 .XLS file), change this to 'Excel2007' (and adjust the filename extension, also the header mime type)
    //if you want to save it as .XLSX Excel 2007 format
    $objWriter = PHPExcel_IOFactory::createWriter($this->excel, 'Excel5');  
    //force user to download the Excel file without writing it to server's HD
    $objWriter->save('php://output');
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK PRINT RINCIAN HONOR 4
*/
function print_excel_r4($id){
        //load our new PHPExcel library
    $this->load->library('excel');
    $this->excel->getDefaultStyle()->getFont()->setName('Arila')->setSize(10); //set default font
    //activate worksheet number 1
    $this->excel->setActiveSheetIndex(0);
    //name the worksheet
    $sheet=$this->excel->getActiveSheet();
    $sheet->setShowGridlines(false);
    $sheet->setTitle('Rician Honor');

	//============================
    $default_border = array(
        'style' => PHPExcel_Style_Border::BORDER_THIN,
        'color' => array('rgb'=>'000000')
    );
    $style_header = array(
        'borders' => array(
            'allborders' => $default_border
        ),
        'fill' => array(
            'type' => PHPExcel_Style_Fill::FILL_SOLID,
            'color' => array('rgb'=>'E1E0F7'),
        ),
        'font' => array(
            'bold' => true,
        ),
        'alignment' => array(
            'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
            'wrap'       => true
        )
    );
    $style_isi=array(
        'borders' => array(
            'allborders' => $default_border
        ),
        'alignment' => array(
             'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
        )
    );

	//============================
    $jurnal_arr =$this->jurnal_buat($id);
    foreach($jurnal_arr as $baris=>$jurnal)
	{
	$nama_sub=($jurnal['nama_subunit']);
	$kop_honor=($jurnal['kop_honor']);
	$no_sk_rektor=($jurnal['no_sk_rektor']);
	$tgl_sk_rektor=($jurnal['tgl_sk_rektor']);
	$tgl_kwitansi=($jurnal['tgl_kwitansi']);
	$kdoutput=($jurnal['kdoutput']);
	$kdkomponen=($jurnal['kdkomponen']);
	$tahun=($jurnal['tahun']);
	
	$penerima=($jurnal['penerima']);
	$nip_penerima=($jurnal['nip_penerima']);
	}
	//========================
    $sheet->setCellValue('A1', 'KEMENTRIAN PENDIDIKAN DAN KEBUDAYAAN');//set cell A1 content with some text
    $sheet->getStyle('A1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A1')->getFont()->setBold(true);//make the font become bold
    //$sheet->mergeCells('A1:H1');//merge cell A1 until D1
    //========================
    $sheet->setCellValue('A2', 'UNIVERSITAS UDAYANA');//set cell A1 content with some text
    $sheet->getStyle('A2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('A3', 'PROGRAM  '.$nama_sub);//set cell A1 content with some text
    $sheet->getStyle('A3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A3')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('G1', 'PROGRAM  '.$nama_sub);//set cell A1 content with some text
    $sheet->getStyle('G1')->getFont()->setSize(8);//change the font size
    $sheet->getStyle('G1')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('G1:G3');//merge cell A1 until D1
    $sheet->getStyle('G1')->getAlignment()->setWrapText(true);	
    //========================
    $sheet->getStyle('G1:G3')->applyFromArray( $style_isi );
    $sheet->getStyle('H1:H3')->applyFromArray( $style_isi );
    $sheet->getStyle('I1:I3')->applyFromArray( $style_isi );
	//====== KANAN ===========
    $sheet->setCellValue('H1', 'KAS BUKU');//set cell A1 content with some text
    $sheet->getStyle('H1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H1')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('H2', 'TANGGAL');//set cell A1 content with some text
    $sheet->getStyle('H2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('H3', 'KODE / MAK');//set cell A1 content with some text
    $sheet->getStyle('H3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H3')->getFont()->setBold(true);//make the font become bold
    //========================
	
    $sheet->setCellValue('I1', '');//set cell A1 content with some text
    $sheet->getStyle('I1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I1')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('I2', $tgl_kwitansi);//set cell A1 content with some text
    $sheet->getStyle('I2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('I3', '4078 . '.$kdoutput.' . '.$kdkomponen);//set cell A1 content with some text
    $sheet->getStyle('I3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I3')->getFont()->setBold(true);//make the font become bold
    //========================
	
	//=== KOP ===
    $sheet->setCellValue('A6', $kop_honor);//set cell A1 content with some text
    $sheet->getStyle('A6')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A6')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A6:I6');//merge cell A1 until D1
    $sheet->getStyle('A6')->getAlignment()->setWrapText(true);
    $sheet->getStyle('A6')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A7', 'Yang dibayar dari dana DIPA BLU Universitas Udayana Tahun Anggaran '.$tahun);//set cell A1 content with some text
    $sheet->getStyle('A7')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A7')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A7:I7');//merge cell A1 until D1
    $sheet->getStyle('A7')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A8', 'Berdasarkan SK Rektor Nomor : '.$no_sk_rektor);//set cell A1 content with some text
    $sheet->getStyle('A8')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A8')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A8:I8');//merge cell A1 until D1
    $sheet->getStyle('A8')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A9', 'Tanggal  '.$tgl_sk_rektor);//set cell A1 content with some text
    $sheet->getStyle('A9')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A9')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A9:I9');//merge cell A1 until D1
    $sheet->getStyle('A9')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================

	//=== TABEL ===	
    $sheet->setCellValue('A11', 'No');
    $sheet->setCellValue('B11', 'Nama Dosen');
    $sheet->setCellValue('C11', 'Jabatan');
    $sheet->setCellValue('D11', 'GoL');
    $sheet->setCellValue('E11', 'Nama Mahasiswa');
    $sheet->setCellValue('F11', 'NIM');	
    $sheet->setCellValue('G11', 'Honor Penelitian');
    $sheet->setCellValue('H11', 'pph');
    $sheet->setCellValue('I11', 'Jumlah Honor Diterima');
    $sheet->setCellValue('J11', 'Tanda Tangan');
    
    
    $sheet->getStyle('A11:j11')->applyFromArray( $style_header );
    
    $sheet->getColumnDimension('A')->setWidth(5);
    $sheet->getColumnDimension('B')->setWidth(40);
    $sheet->getColumnDimension('C')->setWidth(18);
    $sheet->getColumnDimension('D')->setWidth(10);
    $sheet->getColumnDimension('E')->setWidth(18);
    $sheet->getColumnDimension('F')->setWidth(10);
    $sheet->getColumnDimension('G')->setWidth(10);
    $sheet->getColumnDimension('H')->setWidth(20);
    $sheet->getColumnDimension('I')->setWidth(20);
    $sheet->getColumnDimension('j')->setWidth(30);
    
    $no='1';
	$tot_brut=0;
	$tot_jum_brut=0;
	$tot_pph=0;
	$tot_jum_terima=0;
    foreach($jurnal_arr as $baris=>$jurnal){

        $sheet->setCellValueByColumnAndRow(0,$baris+12,$no++);
        $sheet->setCellValueByColumnAndRow(1,$baris+12,$jurnal['nama']);
        $sheet->setCellValueByColumnAndRow(2,$baris+12,$jurnal['jabatan']);
        $sheet->setCellValueByColumnAndRow(3,$baris+12,$jurnal['golongan']);
        $sheet->setCellValueByColumnAndRow(4,$baris+12,$jurnal['nama_mhs']);
        $sheet->setCellValueByColumnAndRow(5,$baris+12,$jurnal['nim_mhs']);
        $sheet->setCellValueByColumnAndRow(6,$baris+12,$jurnal['jum_bruto']);
        $sheet->setCellValueByColumnAndRow(7,$baris+12,$jurnal['pph_honor']);
        $sheet->setCellValueByColumnAndRow(8,$baris+12,($jurnal['jum_bruto'])-($jurnal['pph_honor']));
        $sheet->setCellValueByColumnAndRow(9,$baris+12,'-');
        $sheet->getStyle('A'.($baris+12).':j'.($baris+12))->applyFromArray( $style_isi );
		
		$tot_brut=$tot_brut+($jurnal['bruto']);
		$tot_jum_brut=$tot_jum_brut+($jurnal['jum_bruto']);
		$tot_pph=$tot_pph+($jurnal['pph_honor']);
		$tot_jum_terima=$tot_jum_terima+ ($jurnal['jum_bruto'])-($jurnal['pph_honor']);
		
		//===================================================

    }
        $sheet->setCellValueByColumnAndRow(0,$no+11,'Jumlah');
        $sheet->setCellValueByColumnAndRow(1,$no+11,'');
        $sheet->setCellValueByColumnAndRow(2,$no+11,'');
        $sheet->setCellValueByColumnAndRow(3,$no+11,'');
		$sheet->mergeCells("A".($no+11).":F".($no+11));   
        $sheet->setCellValueByColumnAndRow(4,$no+11,'');
        $sheet->setCellValueByColumnAndRow(5,$no+11,'');
        $sheet->setCellValueByColumnAndRow(6,$no+11,$tot_jum_brut);
        $sheet->setCellValueByColumnAndRow(7,$no+11,$tot_pph);
        $sheet->setCellValueByColumnAndRow(8,$no+11,$tot_jum_terima);
        $sheet->setCellValueByColumnAndRow(9,$no+11,'');
        $sheet->getStyle('A'.($no+11).':j'.($no+11))->applyFromArray( $style_isi );
		
		
        $sheet->setCellValueByColumnAndRow(0,$no+13,'( '.$this->uang->terbilang($tot_jum_brut).' )');
		$sheet->mergeCells("A".($no+13).":I".($no+13));        
    	$sheet->getStyle('A'.($no+13))->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
		//===============================================
        $sheet->setCellValueByColumnAndRow(0,$no+15,'Mengetahui');
        $sheet->setCellValueByColumnAndRow(0,$no+16,'Atas Nama Dekan Fakultas Ekonomi Unud');
        $sheet->setCellValueByColumnAndRow(0,$no+17,'Pejabat Pembuat Komitmen');
        $sheet->setCellValueByColumnAndRow(0,$no+20,'Prof. Dr. Made Wardana, SE., MP.');
        $sheet->setCellValueByColumnAndRow(0,$no+21,'NIP. 19550801 198103 1 031');
		
		//===============================================
        $sheet->setCellValueByColumnAndRow(3,$no+15,'Bendahara Pengeluaran Pembantu');
        $sheet->setCellValueByColumnAndRow(3,$no+16,'Fakultas Ekonomi Udayana');
        $sheet->setCellValueByColumnAndRow(3,$no+17,'');
        $sheet->setCellValueByColumnAndRow(3,$no+20,'Nyoman Kensi');
        $sheet->setCellValueByColumnAndRow(3,$no+21,'NIP. 19600612 198103 2 001');
		
		//===============================================
        $sheet->setCellValueByColumnAndRow(7,$no+15,'Denpasar, '.$tgl_kwitansi);
        $sheet->setCellValueByColumnAndRow(7,$no+16,'Pembuat Daftar');
        $sheet->setCellValueByColumnAndRow(7,$no+17,'Program '.$nama_sub);
        $sheet->setCellValueByColumnAndRow(7,$no+20,$penerima);
        $sheet->setCellValueByColumnAndRow(7,$no+21, 'Nip'.$nip_penerima);

		
    $filename='Rincian_Honor.xls'; //save our workbook as this file name
    header('Content-Type: application/vnd.ms-excel'); //mime type
    header('Content-Disposition: attachment;filename="'.$filename.'"'); //tell browser what's the file name
    header('Cache-Control: max-age=0'); //no cache
                 
    //save it to Excel5 format (excel 2003 .XLS file), change this to 'Excel2007' (and adjust the filename extension, also the header mime type)
    //if you want to save it as .XLSX Excel 2007 format
    $objWriter = PHPExcel_IOFactory::createWriter($this->excel, 'Excel5');  
    //force user to download the Excel file without writing it to server's HD
    $objWriter->save('php://output');
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK PRINT RINCIAN HONOR 5
*/
function print_excel_r5($id){
        //load our new PHPExcel library
    $this->load->library('excel');
    $this->excel->getDefaultStyle()->getFont()->setName('Arila')->setSize(10); //set default font
    //activate worksheet number 1
    $this->excel->setActiveSheetIndex(0);
    //name the worksheet
    $sheet=$this->excel->getActiveSheet();
    $sheet->setShowGridlines(false);
    $sheet->setTitle('Rician Honor');

	//============================
    $default_border = array(
        'style' => PHPExcel_Style_Border::BORDER_THIN,
        'color' => array('rgb'=>'000000')
    );
    $style_header = array(
        'borders' => array(
            'allborders' => $default_border
        ),
        'fill' => array(
            'type' => PHPExcel_Style_Fill::FILL_SOLID,
            'color' => array('rgb'=>'E1E0F7'),
        ),
        'font' => array(
            'bold' => true,
        ),
        'alignment' => array(
            'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
            'wrap'       => true
        )
    );
    $style_isi=array(
        'borders' => array(
            'allborders' => $default_border
        ),
        'alignment' => array(
             'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
        )
    );

	//============================
    $jurnal_arr =$this->jurnal_buat($id);
    foreach($jurnal_arr as $baris=>$jurnal)
	{
	$nama_sub=($jurnal['nama_subunit']);
	$kop_honor=($jurnal['kop_honor']);
	$no_sk_rektor=($jurnal['no_sk_rektor']);
	$tgl_sk_rektor=($jurnal['tgl_sk_rektor']);
	$tgl_kwitansi=($jurnal['tgl_kwitansi']);
	$kdoutput=($jurnal['kdoutput']);
	$kdkomponen=($jurnal['kdkomponen']);
	$tahun=($jurnal['tahun']);
	
	$penerima=($jurnal['penerima']);
	$nip_penerima=($jurnal['nip_penerima']);
	}
	//========================
    $sheet->setCellValue('A1', 'KEMENTRIAN PENDIDIKAN DAN KEBUDAYAAN');//set cell A1 content with some text
    $sheet->getStyle('A1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A1')->getFont()->setBold(true);//make the font become bold
    //$sheet->mergeCells('A1:H1');//merge cell A1 until D1
    //========================
    $sheet->setCellValue('A2', 'UNIVERSITAS UDAYANA');//set cell A1 content with some text
    $sheet->getStyle('A2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('A3', 'PROGRAM  '.$nama_sub);//set cell A1 content with some text
    $sheet->getStyle('A3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A3')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('G1', 'PROGRAM  '.$nama_sub);//set cell A1 content with some text
    $sheet->getStyle('G1')->getFont()->setSize(8);//change the font size
    $sheet->getStyle('G1')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('G1:G3');//merge cell A1 until D1
    $sheet->getStyle('G1')->getAlignment()->setWrapText(true);	
    //========================
    $sheet->getStyle('G1:G3')->applyFromArray( $style_isi );
    $sheet->getStyle('H1:H3')->applyFromArray( $style_isi );
    $sheet->getStyle('I1:I3')->applyFromArray( $style_isi );
	//====== KANAN ===========
    $sheet->setCellValue('H1', 'KAS BUKU');//set cell A1 content with some text
    $sheet->getStyle('H1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H1')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('H2', 'TANGGAL');//set cell A1 content with some text
    $sheet->getStyle('H2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('H3', 'KODE / MAK');//set cell A1 content with some text
    $sheet->getStyle('H3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H3')->getFont()->setBold(true);//make the font become bold
    //========================
	
    $sheet->setCellValue('I1', '');//set cell A1 content with some text
    $sheet->getStyle('I1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I1')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('I2', $tgl_kwitansi);//set cell A1 content with some text
    $sheet->getStyle('I2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('I3', '4078 . '.$kdoutput.' . '.$kdkomponen);//set cell A1 content with some text
    $sheet->getStyle('I3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I3')->getFont()->setBold(true);//make the font become bold
    //========================
	
	//=== KOP ===
    $sheet->setCellValue('A6', $kop_honor);//set cell A1 content with some text
    $sheet->getStyle('A6')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A6')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A6:I6');//merge cell A1 until D1
    $sheet->getStyle('A6')->getAlignment()->setWrapText(true);
    $sheet->getStyle('A6')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A7', 'Yang dibayar dari dana DIPA BLU Universitas Udayana Tahun Anggaran '.$tahun);//set cell A1 content with some text
    $sheet->getStyle('A7')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A7')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A7:I7');//merge cell A1 until D1
    $sheet->getStyle('A7')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A8', 'Berdasarkan SK Rektor Nomor : '.$no_sk_rektor);//set cell A1 content with some text
    $sheet->getStyle('A8')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A8')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A8:I8');//merge cell A1 until D1
    $sheet->getStyle('A8')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A9', 'Tanggal  '.$tgl_sk_rektor);//set cell A1 content with some text
    $sheet->getStyle('A9')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A9')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A9:I9');//merge cell A1 until D1
    $sheet->getStyle('A9')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================

	//=== TABEL ===	
    $sheet->setCellValue('A11', 'No');
    $sheet->setCellValue('B11', 'Nama Mahasiswa');
    $sheet->setCellValue('C11', 'NIM');
    $sheet->setCellValue('D11', 'Nama Penguji');
    $sheet->setCellValue('E11', 'Golongan');
    $sheet->setCellValue('F11', 'Jabatan');
    $sheet->setCellValue('G11', 'Honor / Ujian');
    $sheet->setCellValue('H11', 'pph');
    $sheet->setCellValue('I11', 'Jumlah Honor Diterima');
    $sheet->setCellValue('J11', 'Tanda Tangan');
    
    
    $sheet->getStyle('A11:J11')->applyFromArray( $style_header );
    
    $sheet->getColumnDimension('A')->setWidth(5);
    $sheet->getColumnDimension('B')->setWidth(30);
    $sheet->getColumnDimension('C')->setWidth(18);
    $sheet->getColumnDimension('D')->setWidth(30);
    $sheet->getColumnDimension('E')->setWidth(18);
    $sheet->getColumnDimension('F')->setWidth(18);
    $sheet->getColumnDimension('G')->setWidth(10);
    $sheet->getColumnDimension('H')->setWidth(20);
    $sheet->getColumnDimension('I')->setWidth(20);
    $sheet->getColumnDimension('J')->setWidth(30);
    $no='1';
	$tot_brut=0;
	$tot_jum_brut=0;
	$tot_pph=0;
	$tot_jum_terima=0;
    foreach($jurnal_arr as $baris=>$jurnal){

        $sheet->setCellValueByColumnAndRow(0,$baris+12,$no++);
        $sheet->setCellValueByColumnAndRow(1,$baris+12,$jurnal['nama_mhs']);
        $sheet->setCellValueByColumnAndRow(2,$baris+12,$jurnal['nim_mhs']);
        $sheet->setCellValueByColumnAndRow(3,$baris+12,$jurnal['nama']);
        $sheet->setCellValueByColumnAndRow(4,$baris+12,$jurnal['golongan']);
        $sheet->setCellValueByColumnAndRow(5,$baris+12,$jurnal['jabatan']);
        $sheet->setCellValueByColumnAndRow(6,$baris+12,$jurnal['jum_bruto']);
        $sheet->setCellValueByColumnAndRow(7,$baris+12,$jurnal['pph_honor']);
        $sheet->setCellValueByColumnAndRow(8,$baris+12,($jurnal['jum_bruto'])-($jurnal['pph_honor']));
        $sheet->setCellValueByColumnAndRow(9,$baris+12,'-');
        $sheet->getStyle('A'.($baris+12).':J'.($baris+12))->applyFromArray( $style_isi );
		
		$tot_brut=$tot_brut+($jurnal['bruto']);
		$tot_jum_brut=$tot_jum_brut+($jurnal['jum_bruto']);
		$tot_pph=$tot_pph+($jurnal['pph_honor']);
		$tot_jum_terima=$tot_jum_terima+ ($jurnal['jum_bruto'])-($jurnal['pph_honor']);
		
		//===================================================

    }
        $sheet->setCellValueByColumnAndRow(0,$no+11,'Jumlah');
        $sheet->setCellValueByColumnAndRow(1,$no+11,'');
        $sheet->setCellValueByColumnAndRow(2,$no+11,'');
        $sheet->setCellValueByColumnAndRow(3,$no+11,'');
		$sheet->mergeCells("A".($no+11).":F".($no+11));
        $sheet->setCellValueByColumnAndRow(4,$no+11,'');
        $sheet->setCellValueByColumnAndRow(5,$no+11,'');
        $sheet->setCellValueByColumnAndRow(6,$no+11,$tot_jum_brut);
        $sheet->setCellValueByColumnAndRow(7,$no+11,$tot_pph);
        $sheet->setCellValueByColumnAndRow(8,$no+11,$tot_jum_terima);
        $sheet->setCellValueByColumnAndRow(9,$no+11,'');
        $sheet->getStyle('A'.($no+11).':J'.($no+11))->applyFromArray( $style_isi );
		
		
        $sheet->setCellValueByColumnAndRow(0,$no+13,'( '.$this->uang->terbilang($tot_jum_brut).' )');
		$sheet->mergeCells("A".($no+13).":J".($no+13));        
    	$sheet->getStyle('A'.($no+13))->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
		//===============================================
        $sheet->setCellValueByColumnAndRow(0,$no+15,'Mengetahui');
        $sheet->setCellValueByColumnAndRow(0,$no+16,'Atas Nama Dekan Fakultas Ekonomi Unud');
        $sheet->setCellValueByColumnAndRow(0,$no+17,'Pejabat Pembuat Komitmen');
        $sheet->setCellValueByColumnAndRow(0,$no+20,'Prof. Dr. Made Wardana, SE., MP.');
        $sheet->setCellValueByColumnAndRow(0,$no+21,'NIP. 19550801 198103 1 031');
		
		//===============================================
        $sheet->setCellValueByColumnAndRow(3,$no+15,'Bendahara Pengeluaran Pembantu');
        $sheet->setCellValueByColumnAndRow(3,$no+16,'Fakultas Ekonomi Udayana');
        $sheet->setCellValueByColumnAndRow(3,$no+17,'');
        $sheet->setCellValueByColumnAndRow(3,$no+20,'Nyoman Kensi');
        $sheet->setCellValueByColumnAndRow(3,$no+21,'NIP. 19600612 198103 2 001');
		
		//===============================================
        $sheet->setCellValueByColumnAndRow(7,$no+15,'Denpasar, '.$tgl_kwitansi);
        $sheet->setCellValueByColumnAndRow(7,$no+16,'Pembuat Daftar');
        $sheet->setCellValueByColumnAndRow(7,$no+17,'Program '.$nama_sub);
        $sheet->setCellValueByColumnAndRow(7,$no+20,$penerima);
        $sheet->setCellValueByColumnAndRow(7,$no+21, 'Nip'.$nip_penerima);

		
    $filename='Rincian_Honor.xls'; //save our workbook as this file name
    header('Content-Type: application/vnd.ms-excel'); //mime type
    header('Content-Disposition: attachment;filename="'.$filename.'"'); //tell browser what's the file name
    header('Cache-Control: max-age=0'); //no cache
                 
    //save it to Excel5 format (excel 2003 .XLS file), change this to 'Excel2007' (and adjust the filename extension, also the header mime type)
    //if you want to save it as .XLSX Excel 2007 format
    $objWriter = PHPExcel_IOFactory::createWriter($this->excel, 'Excel5');  
    //force user to download the Excel file without writing it to server's HD
    $objWriter->save('php://output');
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK PRINT RINCIAN HONOR 6
*/
function print_excel_r6($id){
        //load our new PHPExcel library
    $this->load->library('excel');
    $this->excel->getDefaultStyle()->getFont()->setName('Arila')->setSize(10); //set default font
    //activate worksheet number 1
    $this->excel->setActiveSheetIndex(0);
    //name the worksheet
    $sheet=$this->excel->getActiveSheet();
    $sheet->setShowGridlines(false);
    $sheet->setTitle('Rician Honor');

	//============================
    $default_border = array(
        'style' => PHPExcel_Style_Border::BORDER_THIN,
        'color' => array('rgb'=>'000000')
    );
    $style_header = array(
        'borders' => array(
            'allborders' => $default_border
        ),
        'fill' => array(
            'type' => PHPExcel_Style_Fill::FILL_SOLID,
            'color' => array('rgb'=>'E1E0F7'),
        ),
        'font' => array(
            'bold' => true,
        ),
        'alignment' => array(
            'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
            'wrap'       => true
        )
    );
    $style_isi=array(
        'borders' => array(
            'allborders' => $default_border
        ),
        'alignment' => array(
             'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
        )
    );

	//============================
    $jurnal_arr =$this->jurnal_buat($id);
    foreach($jurnal_arr as $baris=>$jurnal)
	{
	$nama_sub=($jurnal['nama_subunit']);
	$kop_honor=($jurnal['kop_honor']);
	$no_sk_rektor=($jurnal['no_sk_rektor']);
	$tgl_sk_rektor=($jurnal['tgl_sk_rektor']);
	$tgl_kwitansi=($jurnal['tgl_kwitansi']);
	$kdoutput=($jurnal['kdoutput']);
	$kdkomponen=($jurnal['kdkomponen']);
	$tahun=($jurnal['tahun']);
	
	$penerima=($jurnal['penerima']);
	$nip_penerima=($jurnal['nip_penerima']);
	}
	//========================
    $sheet->setCellValue('A1', 'KEMENTRIAN PENDIDIKAN DAN KEBUDAYAAN');//set cell A1 content with some text
    $sheet->getStyle('A1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A1')->getFont()->setBold(true);//make the font become bold
    //$sheet->mergeCells('A1:H1');//merge cell A1 until D1
    //========================
    $sheet->setCellValue('A2', 'UNIVERSITAS UDAYANA');//set cell A1 content with some text
    $sheet->getStyle('A2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('A3', 'PROGRAM  '.$nama_sub);//set cell A1 content with some text
    $sheet->getStyle('A3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A3')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('G1', 'PROGRAM  '.$nama_sub);//set cell A1 content with some text
    $sheet->getStyle('G1')->getFont()->setSize(8);//change the font size
    $sheet->getStyle('G1')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('G1:G3');//merge cell A1 until D1
    $sheet->getStyle('G1')->getAlignment()->setWrapText(true);	
    //========================
    $sheet->getStyle('G1:G3')->applyFromArray( $style_isi );
    $sheet->getStyle('H1:H3')->applyFromArray( $style_isi );
    $sheet->getStyle('I1:I3')->applyFromArray( $style_isi );
	//====== KANAN ===========
    $sheet->setCellValue('H1', 'KAS BUKU');//set cell A1 content with some text
    $sheet->getStyle('H1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H1')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('H2', 'TANGGAL');//set cell A1 content with some text
    $sheet->getStyle('H2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('H3', 'KODE / MAK');//set cell A1 content with some text
    $sheet->getStyle('H3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H3')->getFont()->setBold(true);//make the font become bold
    //========================
	
    $sheet->setCellValue('I1', '');//set cell A1 content with some text
    $sheet->getStyle('I1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I1')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('I2', $tgl_kwitansi);//set cell A1 content with some text
    $sheet->getStyle('I2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('I3', '4078 . '.$kdoutput.' . '.$kdkomponen);//set cell A1 content with some text
    $sheet->getStyle('I3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I3')->getFont()->setBold(true);//make the font become bold
    //========================
	
	//=== KOP ===
    $sheet->setCellValue('A6', $kop_honor);//set cell A1 content with some text
    $sheet->getStyle('A6')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A6')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A6:I6');//merge cell A1 until D1
    $sheet->getStyle('A6')->getAlignment()->setWrapText(true);
    $sheet->getStyle('A6')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A7', 'Yang dibayar dari dana DIPA BLU Universitas Udayana Tahun Anggaran '.$tahun);//set cell A1 content with some text
    $sheet->getStyle('A7')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A7')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A7:I7');//merge cell A1 until D1
    $sheet->getStyle('A7')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A8', 'Berdasarkan SK Rektor Nomor : '.$no_sk_rektor);//set cell A1 content with some text
    $sheet->getStyle('A8')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A8')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A8:I8');//merge cell A1 until D1
    $sheet->getStyle('A8')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A9', 'Tanggal  '.$tgl_sk_rektor);//set cell A1 content with some text
    $sheet->getStyle('A9')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A9')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A9:I9');//merge cell A1 until D1
    $sheet->getStyle('A9')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================

	//=== TABEL ===	
    $sheet->setCellValue('A11', 'No');
    $sheet->setCellValue('B11', 'Nama Dosen');
    $sheet->setCellValue('C11', 'Jabatan');
    $sheet->setCellValue('D11', 'GoL');
    $sheet->setCellValue('E11', 'Hari');
    $sheet->setCellValue('F11', 'Tarif / Hari');
    $sheet->setCellValue('G11', 'Jumlah Honor Bruto');
    $sheet->setCellValue('H11', 'pph');
    $sheet->setCellValue('I11', 'Jumlah Honor Diterima');
    $sheet->setCellValue('J11', 'Tanda Tangan');
    
    
    $sheet->getStyle('A11:J11')->applyFromArray( $style_header );
    
    $sheet->getColumnDimension('A')->setWidth(5);
    $sheet->getColumnDimension('B')->setWidth(40);
    $sheet->getColumnDimension('C')->setWidth(18);
    $sheet->getColumnDimension('D')->setWidth(10);
    $sheet->getColumnDimension('E')->setWidth(10);
    $sheet->getColumnDimension('F')->setWidth(18);
    $sheet->getColumnDimension('G')->setWidth(20);
    $sheet->getColumnDimension('H')->setWidth(18);
    $sheet->getColumnDimension('I')->setWidth(20);
    $sheet->getColumnDimension('J')->setWidth(30);
    
    $no='1';
	$tot_brut=0;
	$tot_jum_brut=0;
	$tot_pph=0;
	$tot_jum_terima=0;
	$tot_jum_hari=0;
    foreach($jurnal_arr as $baris=>$jurnal){

        $sheet->setCellValueByColumnAndRow(0,$baris+12,$no++);
        $sheet->setCellValueByColumnAndRow(1,$baris+12,$jurnal['nama']);
        $sheet->setCellValueByColumnAndRow(2,$baris+12,$jurnal['jabatan']);
        $sheet->setCellValueByColumnAndRow(3,$baris+12,$jurnal['golongan']);
        $sheet->setCellValueByColumnAndRow(4,$baris+12,$jurnal['jum_hari']);
        $sheet->setCellValueByColumnAndRow(5,$baris+12,$jurnal['bruto']);
        $sheet->setCellValueByColumnAndRow(6,$baris+12,$jurnal['jum_bruto']);
        $sheet->setCellValueByColumnAndRow(7,$baris+12,$jurnal['pph_honor']);
        $sheet->setCellValueByColumnAndRow(8,$baris+12,($jurnal['jum_bruto'])-($jurnal['pph_honor']));
        $sheet->setCellValueByColumnAndRow(9,$baris+12,'-');
        $sheet->getStyle('A'.($baris+12).':J'.($baris+12))->applyFromArray( $style_isi );
		
		$tot_brut=$tot_brut+($jurnal['bruto']);
		$tot_jum_brut=$tot_jum_brut+($jurnal['jum_bruto']);
		$tot_pph=$tot_pph+($jurnal['pph_honor']);
		$tot_jum_terima=$tot_jum_terima+ ($jurnal['jum_bruto'])-($jurnal['pph_honor']);
		$tot_jum_hari=$tot_jum_hari+($jurnal['jum_hari']);
		
		//===================================================

    }
        $sheet->setCellValueByColumnAndRow(0,$no+11,'Jumlah');
        $sheet->setCellValueByColumnAndRow(1,$no+11,'');
        $sheet->setCellValueByColumnAndRow(2,$no+11,'');
        $sheet->setCellValueByColumnAndRow(3,$no+11,'');
		$sheet->mergeCells("A".($no+11).":D".($no+11));
        $sheet->setCellValueByColumnAndRow(4,$no+11,$tot_jum_hari);
        $sheet->setCellValueByColumnAndRow(5,$no+11,$tot_brut);
        $sheet->setCellValueByColumnAndRow(6,$no+11,$tot_jum_brut);
        $sheet->setCellValueByColumnAndRow(7,$no+11,$tot_pph);
        $sheet->setCellValueByColumnAndRow(8,$no+11,$tot_jum_terima);
        $sheet->setCellValueByColumnAndRow(9,$no+11,'');
        $sheet->getStyle('A'.($no+11).':J'.($no+11))->applyFromArray( $style_isi );
		
		
        $sheet->setCellValueByColumnAndRow(0,$no+13,'( '.$this->uang->terbilang($tot_jum_brut).' )');
		$sheet->mergeCells("A".($no+13).":J".($no+13));        
    	$sheet->getStyle('A'.($no+13))->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
		//===============================================
        $sheet->setCellValueByColumnAndRow(0,$no+15,'Mengetahui');
        $sheet->setCellValueByColumnAndRow(0,$no+16,'Atas Nama Dekan Fakultas Ekonomi Unud');
        $sheet->setCellValueByColumnAndRow(0,$no+17,'Pejabat Pembuat Komitmen');
        $sheet->setCellValueByColumnAndRow(0,$no+20,'Prof. Dr. Made Wardana, SE., MP.');
        $sheet->setCellValueByColumnAndRow(0,$no+21,'NIP. 19550801 198103 1 031');
		
		//===============================================
        $sheet->setCellValueByColumnAndRow(3,$no+15,'Bendahara Pengeluaran Pembantu');
        $sheet->setCellValueByColumnAndRow(3,$no+16,'Fakultas Ekonomi Udayana');
        $sheet->setCellValueByColumnAndRow(3,$no+17,'');
        $sheet->setCellValueByColumnAndRow(3,$no+20,'Nyoman Kensi');
        $sheet->setCellValueByColumnAndRow(3,$no+21,'NIP. 19600612 198103 2 001');
		
		//===============================================
        $sheet->setCellValueByColumnAndRow(7,$no+15,'Denpasar, '.$tgl_kwitansi);
        $sheet->setCellValueByColumnAndRow(7,$no+16,'Pembuat Daftar');
        $sheet->setCellValueByColumnAndRow(7,$no+17,'Program '.$nama_sub);
        $sheet->setCellValueByColumnAndRow(7,$no+20,$penerima);
        $sheet->setCellValueByColumnAndRow(7,$no+21, 'Nip'.$nip_penerima);

		
    $filename='Rincian_Honor.xls'; //save our workbook as this file name
    header('Content-Type: application/vnd.ms-excel'); //mime type
    header('Content-Disposition: attachment;filename="'.$filename.'"'); //tell browser what's the file name
    header('Cache-Control: max-age=0'); //no cache
                 
    //save it to Excel5 format (excel 2003 .XLS file), change this to 'Excel2007' (and adjust the filename extension, also the header mime type)
    //if you want to save it as .XLSX Excel 2007 format
    $objWriter = PHPExcel_IOFactory::createWriter($this->excel, 'Excel5');  
    //force user to download the Excel file without writing it to server's HD
    $objWriter->save('php://output');
    }

/**
*
FUNGSI INI DIGUNAKAN UNTUK PRINT RINCIAN HONOR 7
*/

function print_excel_r7($id){
        //load our new PHPExcel library
    $this->load->library('excel');
    $this->excel->getDefaultStyle()->getFont()->setName('Arila')->setSize(10); //set default font
    //activate worksheet number 1
    $this->excel->setActiveSheetIndex(0);
    //name the worksheet
    $sheet=$this->excel->getActiveSheet();
    $sheet->setShowGridlines(false);
    $sheet->setTitle('Rician Honor');

	//============================
    $default_border = array(
        'style' => PHPExcel_Style_Border::BORDER_THIN,
        'color' => array('rgb'=>'000000')
    );
    $style_header = array(
        'borders' => array(
            'allborders' => $default_border
        ),
        'fill' => array(
            'type' => PHPExcel_Style_Fill::FILL_SOLID,
            'color' => array('rgb'=>'E1E0F7'),
        ),
        'font' => array(
            'bold' => true,
        ),
        'alignment' => array(
            'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
            'wrap'       => true
        )
    );
    $style_isi=array(
        'borders' => array(
            'allborders' => $default_border
        ),
        'alignment' => array(
             'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
        )
    );

	//============================
    $jurnal_arr =$this->jurnal_buat($id);
    foreach($jurnal_arr as $baris=>$jurnal)
	{
	$nama_sub=($jurnal['nama_subunit']);
	$kop_honor=($jurnal['kop_honor']);
	$no_sk_rektor=($jurnal['no_sk_rektor']);
	$tgl_sk_rektor=($jurnal['tgl_sk_rektor']);
	$tgl_kwitansi=($jurnal['tgl_kwitansi']);
	$kdoutput=($jurnal['kdoutput']);
	$kdkomponen=($jurnal['kdkomponen']);
	$tahun=($jurnal['tahun']);
	
	$penerima=($jurnal['penerima']);
	$nip_penerima=($jurnal['nip_penerima']);
	}
	//========================
    $sheet->setCellValue('A1', 'KEMENTRIAN PENDIDIKAN DAN KEBUDAYAAN');//set cell A1 content with some text
    $sheet->getStyle('A1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A1')->getFont()->setBold(true);//make the font become bold
    //$sheet->mergeCells('A1:H1');//merge cell A1 until D1
    //========================
    $sheet->setCellValue('A2', 'UNIVERSITAS UDAYANA');//set cell A1 content with some text
    $sheet->getStyle('A2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('A3', 'PROGRAM  '.$nama_sub);//set cell A1 content with some text
    $sheet->getStyle('A3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A3')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('G1', 'PROGRAM  '.$nama_sub);//set cell A1 content with some text
    $sheet->getStyle('G1')->getFont()->setSize(8);//change the font size
    $sheet->getStyle('G1')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('G1:G3');//merge cell A1 until D1
    $sheet->getStyle('G1')->getAlignment()->setWrapText(true);	
    //========================
    $sheet->getStyle('G1:G3')->applyFromArray( $style_isi );
    $sheet->getStyle('H1:H3')->applyFromArray( $style_isi );
    $sheet->getStyle('I1:I3')->applyFromArray( $style_isi );
	//====== KANAN ===========
    $sheet->setCellValue('H1', 'KAS BUKU');//set cell A1 content with some text
    $sheet->getStyle('H1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H1')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('H2', 'TANGGAL');//set cell A1 content with some text
    $sheet->getStyle('H2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('H3', 'KODE / MAK');//set cell A1 content with some text
    $sheet->getStyle('H3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H3')->getFont()->setBold(true);//make the font become bold
    //========================
	
    $sheet->setCellValue('I1', '');//set cell A1 content with some text
    $sheet->getStyle('I1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I1')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('I2', $tgl_kwitansi);//set cell A1 content with some text
    $sheet->getStyle('I2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('I3', '4078 . '.$kdoutput.' . '.$kdkomponen);//set cell A1 content with some text
    $sheet->getStyle('I3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I3')->getFont()->setBold(true);//make the font become bold
    //========================
	
	//=== KOP ===
    $sheet->setCellValue('A6', $kop_honor);//set cell A1 content with some text
    $sheet->getStyle('A6')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A6')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A6:I6');//merge cell A1 until D1
    $sheet->getStyle('A6')->getAlignment()->setWrapText(true);
    $sheet->getStyle('A6')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A7', 'Yang dibayar dari dana DIPA BLU Universitas Udayana Tahun Anggaran '.$tahun);//set cell A1 content with some text
    $sheet->getStyle('A7')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A7')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A7:I7');//merge cell A1 until D1
    $sheet->getStyle('A7')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A8', 'Berdasarkan SK Rektor Nomor : '.$no_sk_rektor);//set cell A1 content with some text
    $sheet->getStyle('A8')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A8')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A8:I8');//merge cell A1 until D1
    $sheet->getStyle('A8')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A9', 'Tanggal  '.$tgl_sk_rektor);//set cell A1 content with some text
    $sheet->getStyle('A9')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A9')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A9:I9');//merge cell A1 until D1
    $sheet->getStyle('A9')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================

	//=== TABEL ===	
    $sheet->setCellValue('A11', 'No');
    $sheet->setCellValue('B11', 'Nama Dosen');
    $sheet->setCellValue('C11', 'Jabatan');
    $sheet->setCellValue('D11', 'GoL');
    $sheet->setCellValue('E11', 'Tarif / Kegiatan');
    $sheet->setCellValue('F11', 'Jumlah Honor Bruto');
    $sheet->setCellValue('G11', 'pph');
    $sheet->setCellValue('H11', 'Jumlah Honor Diterima');
    $sheet->setCellValue('I11', 'Tanda Tangan');
    
    
    $sheet->getStyle('A11:I11')->applyFromArray( $style_header );
    
    $sheet->getColumnDimension('A')->setWidth(5);
    $sheet->getColumnDimension('B')->setWidth(40);
    $sheet->getColumnDimension('C')->setWidth(18);
    $sheet->getColumnDimension('D')->setWidth(10);
    $sheet->getColumnDimension('E')->setWidth(18);
    $sheet->getColumnDimension('F')->setWidth(20);
    $sheet->getColumnDimension('G')->setWidth(10);
    $sheet->getColumnDimension('H')->setWidth(20);
    $sheet->getColumnDimension('I')->setWidth(30);
    
    $no='1';
	$tot_brut=0;
	$tot_jum_brut=0;
	$tot_pph=0;
	$tot_jum_terima=0;
    foreach($jurnal_arr as $baris=>$jurnal){

        $sheet->setCellValueByColumnAndRow(0,$baris+12,$no++);
        $sheet->setCellValueByColumnAndRow(1,$baris+12,$jurnal['nama']);
        $sheet->setCellValueByColumnAndRow(2,$baris+12,$jurnal['jabatan']);
        $sheet->setCellValueByColumnAndRow(3,$baris+12,$jurnal['golongan']);
        $sheet->setCellValueByColumnAndRow(4,$baris+12,$jurnal['bruto']);
        $sheet->setCellValueByColumnAndRow(5,$baris+12,$jurnal['jum_bruto']);
        $sheet->setCellValueByColumnAndRow(6,$baris+12,$jurnal['pph_honor']);
        $sheet->setCellValueByColumnAndRow(7,$baris+12,($jurnal['jum_bruto'])-($jurnal['pph_honor']));
        $sheet->setCellValueByColumnAndRow(8,$baris+12,'-');
        $sheet->getStyle('A'.($baris+12).':I'.($baris+12))->applyFromArray( $style_isi );
		
		$tot_brut=$tot_brut+($jurnal['bruto']);
		$tot_jum_brut=$tot_jum_brut+($jurnal['jum_bruto']);
		$tot_pph=$tot_pph+($jurnal['pph_honor']);
		$tot_jum_terima=$tot_jum_terima+ ($jurnal['jum_bruto'])-($jurnal['pph_honor']);
		
		//===================================================

    }
        $sheet->setCellValueByColumnAndRow(0,$no+11,'Jumlah');
        $sheet->setCellValueByColumnAndRow(1,$no+11,'');
        $sheet->setCellValueByColumnAndRow(2,$no+11,'');
        $sheet->setCellValueByColumnAndRow(3,$no+11,'');
		$sheet->mergeCells("A".($no+11).":D".($no+11));        
        $sheet->setCellValueByColumnAndRow(4,$no+11,$tot_brut);
        $sheet->setCellValueByColumnAndRow(5,$no+11,$tot_jum_brut);
        $sheet->setCellValueByColumnAndRow(6,$no+11,$tot_pph);
        $sheet->setCellValueByColumnAndRow(7,$no+11,$tot_jum_terima);
        $sheet->setCellValueByColumnAndRow(8,$no+11,'');
        $sheet->getStyle('A'.($no+11).':I'.($no+11))->applyFromArray( $style_isi );
		
		
        $sheet->setCellValueByColumnAndRow(0,$no+13,'( '.$this->uang->terbilang($tot_jum_brut).' )');
		$sheet->mergeCells("A".($no+13).":I".($no+13));        
    	$sheet->getStyle('A'.($no+13))->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
		//===============================================
        $sheet->setCellValueByColumnAndRow(0,$no+15,'Mengetahui');
        $sheet->setCellValueByColumnAndRow(0,$no+16,'Atas Nama Dekan Fakultas Ekonomi Unud');
        $sheet->setCellValueByColumnAndRow(0,$no+17,'Pejabat Pembuat Komitmen');
        $sheet->setCellValueByColumnAndRow(0,$no+20,'Prof. Dr. Made Wardana, SE., MP.');
        $sheet->setCellValueByColumnAndRow(0,$no+21,'NIP. 19550801 198103 1 031');
		
		//===============================================
        $sheet->setCellValueByColumnAndRow(3,$no+15,'Bendahara Pengeluaran Pembantu');
        $sheet->setCellValueByColumnAndRow(3,$no+16,'Fakultas Ekonomi Udayana');
        $sheet->setCellValueByColumnAndRow(3,$no+17,'');
        $sheet->setCellValueByColumnAndRow(3,$no+20,'Nyoman Kensi');
        $sheet->setCellValueByColumnAndRow(3,$no+21,'NIP. 19600612 198103 2 001');
		
		//===============================================
        $sheet->setCellValueByColumnAndRow(7,$no+15,'Denpasar, '.$tgl_kwitansi);
        $sheet->setCellValueByColumnAndRow(7,$no+16,'Pembuat Daftar');
        $sheet->setCellValueByColumnAndRow(7,$no+17,'Program '.$nama_sub);
        $sheet->setCellValueByColumnAndRow(7,$no+20,$penerima);
        $sheet->setCellValueByColumnAndRow(7,$no+21, 'Nip'.$nip_penerima);

		
    $filename='Rincian_Honor.xls'; //save our workbook as this file name
    header('Content-Type: application/vnd.ms-excel'); //mime type
    header('Content-Disposition: attachment;filename="'.$filename.'"'); //tell browser what's the file name
    header('Cache-Control: max-age=0'); //no cache
                 
    //save it to Excel5 format (excel 2003 .XLS file), change this to 'Excel2007' (and adjust the filename extension, also the header mime type)
    //if you want to save it as .XLSX Excel 2007 format
    $objWriter = PHPExcel_IOFactory::createWriter($this->excel, 'Excel5');  
    //force user to download the Excel file without writing it to server's HD
    $objWriter->save('php://output');
    }


/**
*
FUNGSI INI DIGUNAKAN UNTUK PRINT RINCIAN HONOR 8
*/
function print_excel_r8($id){
        //load our new PHPExcel library
    $this->load->library('excel');
    $this->excel->getDefaultStyle()->getFont()->setName('Arila')->setSize(10); //set default font
    //activate worksheet number 1
    $this->excel->setActiveSheetIndex(0);
    //name the worksheet
    $sheet=$this->excel->getActiveSheet();
    $sheet->setShowGridlines(false);
    $sheet->setTitle('Rician Honor');

	//============================
    $default_border = array(
        'style' => PHPExcel_Style_Border::BORDER_THIN,
        'color' => array('rgb'=>'000000')
    );
    $style_header = array(
        'borders' => array(
            'allborders' => $default_border
        ),
        'fill' => array(
            'type' => PHPExcel_Style_Fill::FILL_SOLID,
            'color' => array('rgb'=>'E1E0F7'),
        ),
        'font' => array(
            'bold' => true,
        ),
        'alignment' => array(
            'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
            'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
            'wrap'       => true
        )
    );
    $style_isi=array(
        'borders' => array(
            'allborders' => $default_border
        ),
        'alignment' => array(
             'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
        )
    );

	//============================
    $jurnal_arr =$this->jurnal_buat($id);
    foreach($jurnal_arr as $baris=>$jurnal)
	{
	$nama_sub=($jurnal['nama_subunit']);
	$kop_honor=($jurnal['kop_honor']);
	$no_sk_rektor=($jurnal['no_sk_rektor']);
	$tgl_sk_rektor=($jurnal['tgl_sk_rektor']);
	$tgl_kwitansi=($jurnal['tgl_kwitansi']);
	$kdoutput=($jurnal['kdoutput']);
	$kdkomponen=($jurnal['kdkomponen']);
	$tahun=($jurnal['tahun']);
	
	$penerima=($jurnal['penerima']);
	$nip_penerima=($jurnal['nip_penerima']);
	}
	//========================
    $sheet->setCellValue('A1', 'KEMENTRIAN PENDIDIKAN DAN KEBUDAYAAN');//set cell A1 content with some text
    $sheet->getStyle('A1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A1')->getFont()->setBold(true);//make the font become bold
    //$sheet->mergeCells('A1:H1');//merge cell A1 until D1
    //========================
    $sheet->setCellValue('A2', 'UNIVERSITAS UDAYANA');//set cell A1 content with some text
    $sheet->getStyle('A2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('A3', 'PROGRAM  '.$nama_sub);//set cell A1 content with some text
    $sheet->getStyle('A3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A3')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('G1', 'PROGRAM  '.$nama_sub);//set cell A1 content with some text
    $sheet->getStyle('G1')->getFont()->setSize(8);//change the font size
    $sheet->getStyle('G1')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('G1:G3');//merge cell A1 until D1
    $sheet->getStyle('G1')->getAlignment()->setWrapText(true);	
    //========================
    $sheet->getStyle('G1:G3')->applyFromArray( $style_isi );
    $sheet->getStyle('H1:H3')->applyFromArray( $style_isi );
    $sheet->getStyle('I1:I3')->applyFromArray( $style_isi );
	//====== KANAN ===========
    $sheet->setCellValue('H1', 'KAS BUKU');//set cell A1 content with some text
    $sheet->getStyle('H1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H1')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('H2', 'TANGGAL');//set cell A1 content with some text
    $sheet->getStyle('H2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('H3', 'KODE / MAK');//set cell A1 content with some text
    $sheet->getStyle('H3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('H3')->getFont()->setBold(true);//make the font become bold
    //========================
	
    $sheet->setCellValue('I1', '');//set cell A1 content with some text
    $sheet->getStyle('I1')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I1')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('I2', $tgl_kwitansi);//set cell A1 content with some text
    $sheet->getStyle('I2')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I2')->getFont()->setBold(true);//make the font become bold
    //========================
    $sheet->setCellValue('I3', '4078 . '.$kdoutput.' . '.$kdkomponen);//set cell A1 content with some text
    $sheet->getStyle('I3')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('I3')->getFont()->setBold(true);//make the font become bold
    //========================
	
	//=== KOP ===
    $sheet->setCellValue('A6', $kop_honor);//set cell A1 content with some text
    $sheet->getStyle('A6')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A6')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A6:I6');//merge cell A1 until D1
    $sheet->getStyle('A6')->getAlignment()->setWrapText(true);
    $sheet->getStyle('A6')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A7', 'Yang dibayar dari dana DIPA BLU Universitas Udayana Tahun Anggaran '.$tahun);//set cell A1 content with some text
    $sheet->getStyle('A7')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A7')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A7:I7');//merge cell A1 until D1
    $sheet->getStyle('A7')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A8', 'Berdasarkan SK Rektor Nomor : '.$no_sk_rektor);//set cell A1 content with some text
    $sheet->getStyle('A8')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A8')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A8:I8');//merge cell A1 until D1
    $sheet->getStyle('A8')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================
    $sheet->setCellValue('A9', 'Tanggal  '.$tgl_sk_rektor);//set cell A1 content with some text
    $sheet->getStyle('A9')->getFont()->setSize(11);//change the font size
    $sheet->getStyle('A9')->getFont()->setBold(true);//make the font become bold
	$sheet->mergeCells('A9:I9');//merge cell A1 until D1
    $sheet->getStyle('A9')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
    //========================

	//=== TABEL ===	
    $sheet->setCellValue('A11', 'No');
    $sheet->setCellValue('B11', 'Nama Dosen');
    $sheet->setCellValue('C11', 'GoL');
    $sheet->setCellValue('D11', 'Tarif / Kegiatan');
    $sheet->setCellValue('E11', 'Jumlah Honor Bruto');
    $sheet->setCellValue('F11', 'pph');
    $sheet->setCellValue('G11', 'Jumlah Honor Diterima');
    $sheet->setCellValue('H11', 'Tanda Tangan');
    
    
    $sheet->getStyle('A11:H11')->applyFromArray( $style_header );
    
    $sheet->getColumnDimension('A')->setWidth(5);
    $sheet->getColumnDimension('B')->setWidth(40);
    $sheet->getColumnDimension('C')->setWidth(10);
    $sheet->getColumnDimension('D')->setWidth(18);
    $sheet->getColumnDimension('E')->setWidth(20);
    $sheet->getColumnDimension('F')->setWidth(10);
    $sheet->getColumnDimension('G')->setWidth(20);
    $sheet->getColumnDimension('H')->setWidth(30);
    $sheet->getColumnDimension('I')->setWidth(20);
    $no='1';
	$tot_brut=0;
	$tot_jum_brut=0;
	$tot_pph=0;
	$tot_jum_terima=0;
    foreach($jurnal_arr as $baris=>$jurnal){

        $sheet->setCellValueByColumnAndRow(0,$baris+12,$no++);
        $sheet->setCellValueByColumnAndRow(1,$baris+12,$jurnal['nama']);
        $sheet->setCellValueByColumnAndRow(2,$baris+12,$jurnal['golongan']);
        $sheet->setCellValueByColumnAndRow(3,$baris+12,$jurnal['bruto']);
        $sheet->setCellValueByColumnAndRow(4,$baris+12,$jurnal['jum_bruto']);
        $sheet->setCellValueByColumnAndRow(5,$baris+12,$jurnal['pph_honor']);
        $sheet->setCellValueByColumnAndRow(6,$baris+12,($jurnal['jum_bruto'])-($jurnal['pph_honor']));
        $sheet->setCellValueByColumnAndRow(7,$baris+12,'-');
        $sheet->getStyle('A'.($baris+12).':H'.($baris+12))->applyFromArray( $style_isi );
		
		$tot_brut=$tot_brut+($jurnal['bruto']);
		$tot_jum_brut=$tot_jum_brut+($jurnal['jum_bruto']);
		$tot_pph=$tot_pph+($jurnal['pph_honor']);
		$tot_jum_terima=$tot_jum_terima+ ($jurnal['jum_bruto'])-($jurnal['pph_honor']);
		
		//===================================================

    }
        $sheet->setCellValueByColumnAndRow(0,$no+11,'Jumlah');
        $sheet->setCellValueByColumnAndRow(1,$no+11,'');
        $sheet->setCellValueByColumnAndRow(2,$no+11,'');
		$sheet->mergeCells("A".($no+11).":C".($no+11));        
        $sheet->setCellValueByColumnAndRow(3,$no+11,$tot_brut);
        $sheet->setCellValueByColumnAndRow(4,$no+11,$tot_jum_brut);
        $sheet->setCellValueByColumnAndRow(5,$no+11,$tot_pph);
        $sheet->setCellValueByColumnAndRow(6,$no+11,$tot_jum_terima);
        $sheet->setCellValueByColumnAndRow(7,$no+11,'');
        $sheet->getStyle('A'.($no+11).':H'.($no+11))->applyFromArray( $style_isi );
		
		
        $sheet->setCellValueByColumnAndRow(0,$no+13,'( '.$this->uang->terbilang($tot_jum_brut).' )');
		$sheet->mergeCells("A".($no+13).":I".($no+13));        
    	$sheet->getStyle('A'.($no+13))->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
		//===============================================
        $sheet->setCellValueByColumnAndRow(0,$no+15,'Mengetahui');
        $sheet->setCellValueByColumnAndRow(0,$no+16,'Atas Nama Dekan Fakultas Ekonomi Unud');
        $sheet->setCellValueByColumnAndRow(0,$no+17,'Pejabat Pembuat Komitmen');
        $sheet->setCellValueByColumnAndRow(0,$no+20,'Prof. Dr. Made Wardana, SE., MP.');
        $sheet->setCellValueByColumnAndRow(0,$no+21,'NIP. 19550801 198103 1 031');
		
		//===============================================
        $sheet->setCellValueByColumnAndRow(3,$no+15,'Bendahara Pengeluaran Pembantu');
        $sheet->setCellValueByColumnAndRow(3,$no+16,'Fakultas Ekonomi Udayana');
        $sheet->setCellValueByColumnAndRow(3,$no+17,'');
        $sheet->setCellValueByColumnAndRow(3,$no+20,'Nyoman Kensi');
        $sheet->setCellValueByColumnAndRow(3,$no+21,'NIP. 19600612 198103 2 001');
		
		//===============================================
        $sheet->setCellValueByColumnAndRow(7,$no+15,'Denpasar, '.$tgl_kwitansi);
        $sheet->setCellValueByColumnAndRow(7,$no+16,'Pembuat Daftar');
        $sheet->setCellValueByColumnAndRow(7,$no+17,'Program '.$nama_sub);
        $sheet->setCellValueByColumnAndRow(7,$no+20,$penerima);
        $sheet->setCellValueByColumnAndRow(7,$no+21, 'Nip'.$nip_penerima);

		
    $filename='Rincian_Honor.xls'; //save our workbook as this file name
    header('Content-Type: application/vnd.ms-excel'); //mime type
    header('Content-Disposition: attachment;filename="'.$filename.'"'); //tell browser what's the file name
    header('Cache-Control: max-age=0'); //no cache
                 
    //save it to Excel5 format (excel 2003 .XLS file), change this to 'Excel2007' (and adjust the filename extension, also the header mime type)
    //if you want to save it as .XLSX Excel 2007 format
    $objWriter = PHPExcel_IOFactory::createWriter($this->excel, 'Excel5');  
    //force user to download the Excel file without writing it to server's HD
    $objWriter->save('php://output');
    }
	
/**
*
FUNGSI INI DIGUNAKAN UNTUK FUNGSI AUTO COMPLETE
*/
function lookup_bas(){
		// process posted form data (the requested items like province)
        $keyword = $this->input->post('term');
        $kdakun = $this->input->post('kodeakun');
		//echo $kdakun;
        $data['response'] = 'false'; //Set default response
        $query = $this->m_gup->lookup_bas($keyword, $kdakun); //Search DB
        if( ! empty($query) )
        {
            $data['response'] = 'true'; //Set response
            $data['message'] = array(); //Create array
            foreach( $query as $row )
            {
                $data['message'][] = array( 
                                        'id'=>$row->akun_kode,
										'label'=>$row->akun_kode.'  -- '.$row->akun_nama,
										'value'=>$row->akun_kode,
										'desc'=>$row->akun_nama ,
                                        ''
                                     );  //Add a row to array
            }
        }
        if('IS_AJAX')
        {
            echo json_encode($data); //echo json string if ajax request
        }
        else
        {
             $this->template->load('template','gup/gu_buat_kuitansi',$data);
        }
	}
	
/**
*
FUNGSI INI DIGUNAKAN UNTUK MENAMPILKAN KOMPONEN
*/
    function select_bas(){
            $kdoutput = $this->input->post('kdoutput');
            $kdakun = $this->input->post('kdakun');
            $kdkomponen = $this->input->post('kdkomponen');
            $id_header = $this->input->post('id_header');
            $data['kode_bas1'] = $this->m_gup->getBas($kdoutput,$kdakun);
			$data['pok']=$this->m_gup->getPok($kdoutput,$kdakun,$kdkomponen,$id_header);
            $this->load->view('gup/get_mak/get_bas1',$data);
	}
	    function select_bas2(){
            $kdoutput = $this->input->post('kdoutput');
            $kdakun = $this->input->post('kdakun');
            $kdkomponen = $this->input->post('kdkomponen');
            $id_header = $this->input->post('id_header');
            $data['kode_bas2'] = $this->m_gup->getBas($kdoutput,$kdakun);
			$data['pok']=$this->m_gup->getPok($kdoutput,$kdakun,$kdkomponen,$id_header);
            $this->load->view('gup/get_mak/get_bas2',$data);
	}
    function select_bas3(){
            $kdoutput = $this->input->post('kdoutput');
            $kdakun = $this->input->post('kdakun');
            $kdkomponen = $this->input->post('kdkomponen');
            $id_header = $this->input->post('id_header');
            $data['kode_bas3'] = $this->m_gup->getBas($kdoutput,$kdakun);
			$data['pok']=$this->m_gup->getPok($kdoutput,$kdakun,$kdkomponen,$id_header);
            $this->load->view('gup/get_mak/get_bas3',$data);
	}
    function preview_mp(){                                
            $id_unit = $this->session->userdata('id_unit'); 
            $id_spp = $this->uri->segment(3); 
            
            $data['fakultas'] = $this->m_gup->getDetailUnit($id_unit); 
            $data['detail_mp'] = $this->m_gup->getMpUnit($id_spp); 
              
            
            
            $this->template->load('template','gup/preview_mp',$data);    
   }

  function tes(){
      $hasil=$this->nomer->no_baru2('t_spp','spp','id_unit','7', date('y'), Constant::JB_GUP,'015','2013',Constant::JSPJ_SPP);
      var_dump($hasil);
  }
}
