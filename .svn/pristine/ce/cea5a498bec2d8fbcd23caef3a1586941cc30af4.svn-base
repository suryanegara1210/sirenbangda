<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Renstra extends CI_Controller
{
	var $CI = NULL;
	public function __construct(){
		$this->CI =& get_instance(); 
        parent::__construct();        
        $this->load->model(array('m_renstra_trx', 'm_skpd', 'm_template_cetak', 'm_lov', 'm_urusan', 'm_bidang', 'm_program', 'm_kegiatan'));
	}

	function index(){
		$this->renstra_skpd();
	}
	##
	## New Generation
	##
	## --------------------------------------------- ##
	## Tambah, Edit, Delete View Renstra setiap SKPD ##
	## --------------------------------------------- ##
	private function create_renstra_skpd($id_skpd, $edit=FALSE){
		$data['skpd'] = $this->m_skpd->get_one_skpd(array('id_skpd' => $id_skpd));
		
		if ($edit) {			
			$renstra = $this->m_renstra_trx->get_one_renstra_skpd($id_skpd);
			if (empty($renstra)) {
				$this->session->set_userdata('msg_typ','err');
				$this->session->set_userdata('msg', 'Data renstra tidak ditemukan.');
				redirect('home');
			}

			$data['renstra'] = $renstra;
			$data['renstra_misi'] = $this->m_renstra_trx->get_all_renstra_misi($renstra->id, TRUE);
			$data['renstra_tujuan'] = $this->m_renstra_trx->get_all_renstra_tujuan($renstra->id, TRUE);
		}

		$this->template->load('template','renstra/create', $data);
	}

	function renstra_skpd(){
		$this->auth->restrict();

		$id_skpd = $this->session->userdata("id_skpd");

		$renstra = $this->m_renstra_trx->get_one_renstra_skpd($id_skpd, TRUE);
		if (!empty($renstra)) {
			$data['renstra'] = $renstra;
			$data['renstra_misi'] = $this->m_renstra_trx->get_all_renstra_misi($renstra->id, TRUE);
			$data['renstra_tujuan'] = $this->m_renstra_trx->get_all_renstra_tujuan($renstra->id);

			$data['jendela_kontrol'] = $this->m_renstra_trx->count_jendela_kontrol($id_skpd);			
			$this->template->load('template','renstra/view', $data);
		}else{
			$this->create_renstra_skpd($id_skpd);
		}		
	}

	function edit_renstra_skpd(){
		$this->auth->restrict();

		$id_skpd = $this->session->userdata("id_skpd");
		$this->create_renstra_skpd($id_skpd, TRUE);
	}

	function save_skpd(){		
		$id = $this->input->post('id_renstra');		
		$id_skpd = $this->session->userdata("id_skpd");
		
		$misi = $this->input->post('misi');
		$tujuan = $this->input->post('tujuan');
		$id_tujuan = $this->input->post('id_tujuan');
		
		$data = $this->input->post();
		$clean = array('id_renstra','misi', 'tujuan', 'id_tujuan');		
		$data = $this->global_function->clean_array($data, $clean);		
		
		$add = array('id_skpd'=> $id_skpd);
		$data = $this->global_function->add_array($data, $add);		

		if (!empty($id)) {
			$result = $this->m_renstra_trx->edit_renstra_skpd($data, $misi, $tujuan, $id_tujuan, $id);
		}else{
			$result = $this->m_renstra_trx->add_renstra_skpd($data, $misi, $tujuan);
		}

		if ($result) {
			$this->session->set_userdata('msg_typ','ok');
			$this->session->set_userdata('msg', 'Renstra SKPD berhasil dibuat.');
			redirect('renstra/renstra_skpd');
		}else{
			$this->session->set_userdata('msg_typ','err');
			$this->session->set_userdata('msg', 'ERROR! Renstra SKPD gagal dibuat, mohon menghubungi administrator.');
			redirect('renstra/renstra_skpd');
		}
	}

	function get_sasaran_skpd(){
		$id_renstra = $this->input->post('id_renstra');
		$id_tujuan = $this->input->post('id_tujuan');

		$data['sasaran'] = $this->m_renstra_trx->get_all_sasaran($id_renstra, $id_tujuan, TRUE);
		$this->load->view("renstra/view_sasaran", $data);
	}

	function cru_sasaran_skpd(){
		$id_renstra = $this->input->post('id_renstra');
		$id_tujuan = $this->input->post('id_tujuan');
		$id_sasaran = $this->input->post('id_sasaran');

		$id_skpd = $this->session->userdata("id_skpd");
		$data['skpd'] = $this->m_skpd->get_one_skpd(array('id_skpd' => $id_skpd));

		$satuan_edit = NULL;
		if (!empty($id_sasaran)) {			
			$result = $this->m_renstra_trx->get_one_sasaran($id_renstra, $id_tujuan, $id_sasaran);			
			if (empty($result)) {
				echo '<div style="width: 400px;">ERROR! Data sasaran tidak ditemukan.</div>';
				return FALSE;
			}
			$data['sasaran'] = $result;
			$satuan_edit = $result->satuan;
		}

		$data['id_renstra'] = $id_renstra;
		$data['tujuan'] = $this->m_renstra_trx->get_one_renstra_tujuan($id_renstra, $id_tujuan);
		
		$satuan = array("" => "~~ Pilih Satuan ~~");
		foreach ($this->m_lov->get_list_lov(1) as $row) {
			$satuan[$row->kode_value]=$row->nama_value;
		}		
		$data['satuan'] = form_dropdown('satuan', $satuan, $satuan_edit, 'class="common" id="satuan"');
		$this->load->view("renstra/cru_sasaran", $data);
	}

	function save_sasaran(){
		$id = $this->input->post('id_sasaran');		

		$data = $this->input->post();
		$clean = array('id_sasaran');		
		$data = $this->global_function->clean_array($data, $clean);

		if (!empty($id)) {
			$result = $this->m_renstra_trx->edit_sasaran_skpd($data, $id);
		}else{
			$result = $this->m_renstra_trx->add_sasaran_skpd($data);
		}

		if ($result) {
			$msg = array('success' => '1', 'msg' => 'Sasaran berhasil dibuat.');
			echo json_encode($msg);			
		}else{
			$msg = array('success' => '0', 'msg' => 'ERROR! Sasaran gagal dibuat, mohon menghubungi administrator.');
			echo json_encode($msg);			
		}
	}

	function delete_sasaran(){
		$id = $this->input->post('id_sasaran');
		$result = $this->m_renstra_trx->delete_sasaran($id);
		if ($result) {
			$msg = array('success' => '1', 'msg' => 'Sasaran berhasil dibuat.');
			echo json_encode($msg);			
		}else{
			$msg = array('success' => '0', 'msg' => 'ERROR! Sasaran gagal dibuat, mohon menghubungi administrator.');
			echo json_encode($msg);			
		}
	}

	function get_program_skpd(){
		$id_renstra = $this->input->post('id_renstra');		
		$id_sasaran = $this->input->post('id_sasaran');

		$data['id_renstra'] = $id_renstra;
		$data['id_sasaran'] = $id_sasaran;
		$data['program'] = $this->m_renstra_trx->get_all_program($id_renstra, $id_sasaran, TRUE);
		$this->load->view("renstra/view_program", $data);
	}

	function cru_program_skpd(){
		$id_renstra = $this->input->post('id_renstra');		
		$id_sasaran = $this->input->post('id_sasaran');
		$id_program = $this->input->post('id_program');

		$id_skpd = $this->session->userdata("id_skpd");
		$data['skpd'] = $this->m_skpd->get_one_skpd(array('id_skpd' => $id_skpd));

		$satuan_edit = NULL;
		$kd_urusan_edit = NULL;
		$kd_bidang_edit = NULL;
		$kd_program_edit = NULL;
		if (!empty($id_program)) {			
			$result = $this->m_renstra_trx->get_one_program($id_renstra, $id_sasaran, $id_program);			
			if (empty($result)) {
				echo '<div style="width: 400px;">ERROR! Data sasaran tidak ditemukan.</div>';
				return FALSE;
			}
			$data['program'] = $result;
			$satuan_edit = $result->satuan_target;
			$kd_urusan_edit = $result->kd_urusan;
			$kd_bidang_edit = $result->kd_bidang;
			$kd_program_edit = $result->kd_program;
		}

		$data['id_renstra'] = $id_renstra;
		$data['id_sasaran'] = $id_sasaran;
		$data['tujuan_n_sasaran'] = $this->m_renstra_trx->get_info_tujuan_n_sasaran_n_program(NULL, $id_sasaran);
		
		$satuan = array("" => "~~ Pilih Satuan ~~");
		foreach ($this->m_lov->get_list_lov(1) as $row) {
			$satuan[$row->kode_value]=$row->nama_value;
		}		

		$kd_urusan = array("" => "");
		foreach ($this->m_urusan->get_urusan() as $row) {
			$kd_urusan[$row->id] = $row->id .". ". $row->nama;
		}

		$kd_bidang = array("" => "");
		foreach ($this->m_bidang->get_bidang() as $row) {
			$kd_bidang[$row->id] = $row->id .". ". $row->nama;
		}

		$kd_program = array("" => "");
		foreach ($this->m_program->get_prog() as $row) {
			$kd_program[$row->id] = $row->id .". ". $row->nama;
		}

		$data['satuan'] = form_dropdown('satuan_target', $satuan, $satuan_edit, 'class="common" id="satuan_target"');
		$data['kd_urusan'] = form_dropdown('kd_urusan', $kd_urusan, $kd_urusan_edit, 'data-placeholder="Pilih Urusan" class="common chosen-select" id="kd_urusan"');
		$data['kd_bidang'] = form_dropdown('kd_bidang', $kd_bidang, $kd_bidang_edit, 'data-placeholder="Pilih Bidang Urusan" class="common chosen-select" id="kd_bidang"');
		$data['kd_program'] = form_dropdown('kd_program', $kd_program, $kd_program_edit, 'data-placeholder="Pilih Program" class="common chosen-select" id="kd_program"');
		$this->load->view("renstra/cru_program", $data);
	}

	function save_program(){		
		$id = $this->input->post('id_program');		

		$data = $this->input->post();
		$clean = array('id_program');		
		$data = $this->global_function->clean_array($data, $clean);

		if (!empty($id)) {
			$result = $this->m_renstra_trx->edit_program_skpd($data, $id);
		}else{
			$result = $this->m_renstra_trx->add_program_skpd($data);
		}

		if ($result) {
			$msg = array('success' => '1', 'msg' => 'Program berhasil dibuat.');
			echo json_encode($msg);			
		}else{
			$msg = array('success' => '0', 'msg' => 'ERROR! Program gagal dibuat, mohon menghubungi administrator.');
			echo json_encode($msg);			
		}
	}
	
	function delete_program(){
		$id = $this->input->post('id_program');
		$result = $this->m_renstra_trx->delete_program($id);
		if ($result) {
			$msg = array('success' => '1', 'msg' => 'Program berhasil dibuat.');
			echo json_encode($msg);			
		}else{
			$msg = array('success' => '0', 'msg' => 'ERROR! Program gagal dibuat, mohon menghubungi administrator.');
			echo json_encode($msg);			
		}
	}

	function get_kegiatan_skpd(){
		$id_renstra = $this->input->post('id_renstra');		
		$id_sasaran = $this->input->post('id_sasaran');
		$id_program = $this->input->post('id_program');

		$data['id_renstra'] = $id_renstra;
		$data['id_sasaran'] = $id_sasaran;
		$data['id_program'] = $id_program;
		$data['kegiatan'] = $this->m_renstra_trx->get_all_kegiatan($id_renstra, $id_sasaran, $id_program, TRUE);
		$this->load->view("renstra/view_kegiatan", $data);
	}

	function cru_kegiatan_skpd(){
		$id_renstra = $this->input->post('id_renstra');		
		$id_sasaran = $this->input->post('id_sasaran');
		$id_program = $this->input->post('id_program');
		$id_kegiatan = $this->input->post('id_kegiatan');

		$id_skpd = $this->session->userdata("id_skpd");
		$data['skpd'] = $this->m_skpd->get_one_skpd(array('id_skpd' => $id_skpd));

		$satuan_edit = NULL;		
		$kd_kegiatan_edit = NULL;
		if (!empty($id_kegiatan)) {			
			$result = $this->m_renstra_trx->get_one_kegiatan($id_renstra, $id_sasaran, $id_program, $id_kegiatan);			
			if (empty($result)) {
				echo '<div style="width: 400px;">ERROR! Data sasaran tidak ditemukan.</div>';
				return FALSE;
			}
			$data['kegiatan'] = $result;
			$satuan_edit = $result->satuan_target;			
			$kd_kegiatan_edit = $result->kd_kegiatan;

			//cek jika RPJMD
			$proses = $this->m_renstra_trx->cek_proses($id_renstra, $id_skpd);			
			if (!empty($proses->proses2)) {
				//RPJMD
				$revisi_rpjmd = $this->m_renstra_trx->revisi_rpjmd($result->parent);
				$data['revisi_rpjmd'] = $revisi_rpjmd; 
				$data['nominal_banding'] = $this->m_renstra_trx->cek_nominal_banding_dengan_rpjmd($id_kegiatan, $revisi_rpjmd->kd_urusan, $revisi_rpjmd->kd_bidang, $revisi_rpjmd->kd_program);				
			}
		}

		$data['id_renstra'] = $id_renstra;
		$data['id_sasaran'] = $id_sasaran;
		$data['id_program'] = $id_program;
		$tujuan_sasaran_n_program = $this->m_renstra_trx->get_info_tujuan_n_sasaran_n_program(NULL, $id_sasaran, $id_program);
		$data['tujuan_sasaran_n_program'] = $tujuan_sasaran_n_program;
		
		$satuan = array("" => "~~ Pilih Satuan ~~");
		foreach ($this->m_lov->get_list_lov(1) as $row) {
			$satuan[$row->kode_value]=$row->nama_value;
		}		
	
		$kd_kegiatan = array("" => "");
		foreach ($this->m_kegiatan->get_keg($tujuan_sasaran_n_program->kd_urusan, $tujuan_sasaran_n_program->kd_bidang, $tujuan_sasaran_n_program->kd_program) as $row) {
			$kd_kegiatan[$row->id] = $row->id .". ". $row->nama;
		}
		
		$data['satuan'] = form_dropdown('satuan_target', $satuan, $satuan_edit, 'class="common" id="satuan_target"');		
		$data['kd_kegiatan'] = form_dropdown('kd_kegiatan', $kd_kegiatan, $kd_kegiatan_edit, 'data-placeholder="Pilih Kegiatan" class="common chosen-select" id="kd_kegiatan"');
		$this->load->view("renstra/cru_kegiatan", $data);
	}

	function save_kegiatan(){
		$id = $this->input->post('id_kegiatan');		

		$data = $this->input->post();
		$clean = array('id_kegiatan');
		$data = $this->global_function->clean_array($data, $clean);
		$change = array('id_program'=>'parent');
		$data = $this->global_function->change_array($data, $change);

		if (!empty($id)) {
			$result = $this->m_renstra_trx->edit_kegiatan_skpd($data, $id);
		}else{
			$result = $this->m_renstra_trx->add_kegiatan_skpd($data);
		}

		if ($result) {
			$msg = array('success' => '1', 'msg' => 'Kegiatan berhasil dibuat.');
			echo json_encode($msg);			
		}else{
			$msg = array('success' => '0', 'msg' => 'ERROR! Kegiatan gagal dibuat, mohon menghubungi administrator.');
			echo json_encode($msg);			
		}
	}

	function delete_kegiatan(){
		$id = $this->input->post('id_kegiatan');
		$result = $this->m_renstra_trx->delete_kegiatan($id);
		if ($result) {
			$msg = array('success' => '1', 'msg' => 'Kegiatan berhasil dibuat.');
			echo json_encode($msg);			
		}else{
			$msg = array('success' => '0', 'msg' => 'ERROR! Kegiatan gagal dibuat, mohon menghubungi administrator.');
			echo json_encode($msg);			
		}
	}

	function preview_kegiatan_renstra(){		
		$id = $this->input->post("id");

		$result = $this->m_renstra_trx->get_one_kegiatan(NULL, NULL, NULL, $id, TRUE);
		if (!empty($result)) {
			$data['renstra'] = $result;
			$this->load->view('renstra/preview', $data);	
		}		
	}

	function kirim_renstra(){
		$data['skpd'] = $this->session->userdata("id_skpd");
		$this->load->view('renstra/kirim_renstra', $data);
	}

	function do_kirim_renstra(){
		$id = $this->input->post('skpd');
		$result = $this->m_renstra_trx->kirim_renstra($id);		
		if ($result) {
			$msg = array('success' => '1', 'msg' => 'Renstra berhasil dikirim.');
			echo json_encode($msg);			
		}else{
			$msg = array('success' => '0', 'msg' => 'ERROR! Renstra gagal dikirim, mohon menghubungi administrator.');
			echo json_encode($msg);			
		}
	}

	## --------------------------------------- ##
	## Verifikasi Renstra yang telah di kirim  ##
	## --------------------------------------- ##
	function veri_view(){
		$this->auth->restrict();

		$data['renstras'] = $this->m_renstra_trx->get_all_renstra_veri();
		$this->template->load('template','renstra/verifikasi/view_all', $data);
	}

	function veri($id_skpd){
		$this->auth->restrict();

		$skpd_visi = $this->m_renstra_trx->get_one_renstra_skpd($id_skpd, TRUE);
		$data1['skpd_visi'] = $skpd_visi;
		$data1['misi'] = $this->m_renstra_trx->get_all_renstra_misi($skpd_visi->id, FALSE);
		$data1['tujuan'] = $this->m_renstra_trx->get_all_renstra_tujuan($skpd_visi->id, FALSE);		
		
		$data3['sasaran'] = $this->m_renstra_trx->get_all_sasaran($skpd_visi->id, NULL, TRUE);		
		$data1['sasaran'] = "<table class=\"table-common\">".$this->load->view('renstra/cetak/header_sasaran', $data3, TRUE)."</table>";

		$data['header'] = $this->load->view('renstra/cetak/header', $data1, TRUE);


		$data2['program'] = $this->m_renstra_trx->get_program_skpd_4_cetak($id_skpd);
		$data['renstra'] = $this->load->view('renstra/cetak/program_kegiatan', $data2, TRUE);
		$data['skpd_visi'] = $skpd_visi;
		$this->template->load('template','renstra/verifikasi/view', $data);
	}

	function save_veri(){
		$id = $this->input->post("id");
		$veri = $this->input->post("veri");
		$ket = $this->input->post("ket");

		if ($veri == "setuju") {
			$result = $this->m_renstra_trx->approved_renstra($id);
		}elseif ($veri == "tdk_setuju") {
			$result = $this->m_renstra_trx->not_approved_renstra($id, $ket);
		}

		if ($result) {
			$this->session->set_userdata('msg_typ','ok');
			$this->session->set_userdata('msg', 'Renstra berhasil diverifikasi.');
			redirect('renstra/veri_view');
		}else{
			$this->session->set_userdata('msg_typ','err');
			$this->session->set_userdata('msg', 'ERROR! Renstra gagal diverifikasi, mohon menghubungi administrator.');
			redirect('renstra/veri_view');
		}

	}

	function preview_revisi(){
		$id = $this->input->post("id_renstra");
		$revisi = $this->input->post("id_revisi");

		if ($revisi == "revisi_ranwal") {
			$data['revisi'] = $this->m_renstra_trx->get_revisi_renstra_ranwal($id);			
			$this->load->view('renstra/revisi_ranwal', $data);
		}elseif ($revisi == "revisi_akhir") {
			$data['revisi'] = $this->m_renstra_trx->get_revisi_renstra_akhir($id);			
			$this->load->view('renstra/revisi_renstra_akhir', $data);
		}
	}

	## --------------------------------------------- ##
	## Verifikasi Renstra Akhir yang telah di kirim  ##
	## --------------------------------------------- ##
	function veri_view_akhir_all(){
		$this->auth->restrict();

		$data['bidang_urusan'] = $this->m_renstra_trx->get_all_renstra_veri_akhir();
		$this->template->load('template','renstra/verifikasi_akhir/view_all', $data);
	}

	function veri_view_akhir($urusan, $bidang){
		$this->auth->restrict();

		$data['bidang_urusan'] = $this->m_renstra_trx->get_bidang_urusan_4_cetak_final($urusan, $bidang);		
		$this->template->load('template','renstra/verifikasi_akhir/view_veri_all', $data);
	}

	function veri_view_tdk_setuju(){
		$id = $this->input->post("id");
		$result = $this->m_renstra_trx->get_one_bidang_urusan_skpd_program_final($id);		
		$data['renstra'] = $result;
		$this->load->view('renstra/verifikasi_akhir/veri', $data);
	}

	function save_veri_akhir(){
		$id = $this->input->post("id");
		$veri = $this->input->post("veri");

		$data = $this->input->post();		
		$clean = array('veri');
		$data = $this->global_function->clean_array($data, $clean);
		$change = array('id'=>'id_prog_keg');
		$data = $this->global_function->change_array($data, $change);

		if ($veri == "setuju") {
			$result = $this->m_renstra_trx->approved_veri_akhir_renstra($id);
		}elseif ($veri == "tdk_setuju") {			
			$result = $this->m_renstra_trx->not_approved_veri_akhir_renstra($id, $data);
		}

		if ($result) {
			$msg = array('success' => '1', 'msg' => 'Renstra berhasil diverifikasi.');
			echo json_encode($msg);			
		}else{
			$msg = array('success' => '0', 'msg' => 'ERROR! Renstra gagal diverifikasi, mohon menghubungi administrator.');
			echo json_encode($msg);			
		}
	}

	#########################################################################################################################################

	## --------------------------------------------- ##
	## Tambah, Edit, Delete View Renstra setiap SKPD ##
	## --------------------------------------------- ##
	function view(){
		$this->auth->restrict();				
    	$this->template->load('template','renstra/view');
	}	

	function get_data(){
		$search = $this->input->post("search");
		$start = $this->input->post("start");
		$length = $this->input->post("length");
		$order = $this->input->post("order");
		$id_skpd = $this->session->userdata("id_skpd");

		$order_arr = array('id','', 'tujuan','sasaran','indikator_sasaran', '','nm_urusan','nm_bidang','ket_program','ket_kegiatan', 'status_renstra');
		$renstra = $this->m_renstra_trx->get_all_renstra($search, $start, $length, $order["0"], $id_skpd, $order_arr);			
		$alldata = $this->m_renstra_trx->count_all_renstra($search, $id_skpd);		
		
		$data = array();
		$no=0;
		
		foreach ($renstra as $row) {
			$no++;
			$preview_action = '<a href="javascript:void(0)" onclick="preview_modal('. $row->id .')" class="icon-search" title="Lihat Renstra"/>';
			$edit_action = '<a href="javascript:void(0)" onclick="edit_renstra('. $row->id .')" class="icon2-page_white_edit" title="Edit Renstra"/>';
			$delete_action = '<a href="javascript:void(0)" onclick="delete_renstra('. $row->id .')" class="icon2-delete" title="Hapus Renstra"/>';
			$history_action = '<a href="javascript:void(0)" onclick="preview_history('. $row->id .')" title="Preview History">'. $row->status_renstra .'</a>';

			if ($row->id_status == 1 || $row->id_status == 3) {
				//Baru dan Revisi			
				$action = 	$preview_action.
							$edit_action.
							$delete_action;
			}else{
				$action = $preview_action;
			}

			$data[] = array(
							$no, 
							$action, 
							$row->tujuan,
							$row->sasaran,
							$row->indikator_sasaran,
							$row->kd_urusan.". ".$row->kd_bidang.". ".$row->kd_program.". ".$row->kd_kegiatan,
							$row->nm_urusan,
							$row->nm_bidang,
							$row->ket_program,
							$row->ket_kegiatan,
							$history_action
							);
		}
		$json = array("recordsTotal"=> $alldata, "recordsFiltered"=> $alldata, 'data' => $data);
		echo json_encode($json);
	}

	function cru($id_renstra=NULL){
		$this->auth->restrict();

		$id_skpd = array('id_skpd' => $this->session->userdata('id_skpd'));
		$skpd = $this->m_skpd->get_skpd_detail($id_skpd);
		$data['skpd'] = $skpd->row();

		if (!empty($id_renstra)) {
			$id_skpd = $this->session->userdata('id_skpd');
			$result = $this->m_renstra_trx->get_one_renstra($id_renstra, $id_skpd);
			if (empty($result)) {
				$this->session->set_userdata('msg_typ','err');
				$this->session->set_userdata('msg', 'Data renstra tidak ditemukan.');
				redirect('renstra/view');
			}
			$data['renstra'] = $result;
		}

    	$this->template->load('template','renstra/create', $data);
	}

	function delete(){
		$this->auth->restrict_ajax_login();

		$id = $this->input->post("id");
		$id_skpd = $this->session->userdata('id_skpd');
		$result = $this->m_renstra_trx->delete($id, $id_skpd);		
		if ($result) {
			$msg = array('success' => '1', 'msg' => 'Data renstra berhasil dihapus.');
			echo json_encode($msg);
		}else{
			$msg = array('success' => '0', 'msg' => 'FAILED! Data renstra gagal dihapus, terjadi kesalahan pada sistem.');
			echo json_encode($msg);
		}
	}
	
	function save(){
		$id_skpd = array('id_skpd' => $this->session->userdata('id_skpd'));
		$skpd = $this->m_skpd->get_skpd_detail($id_skpd);
		$skpd = $skpd->row();

		$id = $this->input->post('id_renstra');		

		$data = $this->input->post();
		$change = array('Kd_Urusan_autocomplete'=>'nm_urusan', 'Kd_Bidang_autocomplete'=>'nm_bidang', 'Kd_Prog_autocomplete'=>'ket_program', 'Kd_Keg_autocomplete'=>'ket_kegiatan');
		$add = array('id_skpd'=> $skpd->id_skpd, 'id_bidkoor' => $skpd->id_bidkoor);
		$clean = array('id_renstra');
		$data = $this->global_function->change_array($data, $change);
		$data = $this->global_function->add_array($data, $add);		
		$data = $this->global_function->clean_array($data, $clean);		

		if (!empty($id)) {
			$result = $this->m_renstra_trx->edit($data, $id);				
		}else{
			$result = $this->m_renstra_trx->add($data);				
		}
		
		if ($result) {
			$this->session->set_userdata('msg_typ','ok');
			$this->session->set_userdata('msg', 'Renstra berhasil disimpan.');
			redirect('renstra/view');
		}else{
			$this->session->set_userdata('msg_typ','err');
			$this->session->set_userdata('msg', 'ERROR! Renstra gagal disimpan, mohon menghubungi administrator.');
			redirect('renstra/view');
		}
	}

	function preview_modal(){		
		$id_renstra = $this->input->post("id");

		$result = $this->m_renstra_trx->get_one_renstra_detail($id_renstra);
		if (!empty($result)) {
			$data['renstra'] = $result;
			$this->load->view('renstra/preview', $data);	
		}		
	}

	function preview_history(){
		$id_renstra = $this->input->post("id");		
		$result = $this->m_renstra_trx->get_all_histories_renstra($id_renstra);
		if (!empty($result)) {
			$data['renstra'] = $result;
			$this->load->view('renstra/preview_history', $data);
		}			
	}

	## -------------------------------------- ##
	## Pengiriman Renstra untuk Di Verifikasi ##
	## -------------------------------------- ##
	function send(){
		$this->auth->restrict();
		$id_skpd = $this->session->userdata('id_skpd');
		$data['json_id'] = $this->m_renstra_trx->get_all_id_renstra_veri_or_approved_to_json($id_skpd);
		$this->template->load('template','renstra/send/send', $data);
	}

	function get_data_send(){
		$id = $this->input->post("id");

		$id_skpd = array('id_skpd' => $this->session->userdata('id_skpd'));
		$skpd = $this->m_skpd->get_skpd_detail($id_skpd);
		$data['skpd'] = $skpd->row();
		
		$renstra = $this->m_renstra_trx->get_all_renstra_by_in($id, TRUE);
		$data['jml_data'] = $renstra->num_rows();
		$data['renstra'] = $renstra->result();
		$data['total_nominal_renstra'] = $this->m_renstra_trx->get_total_nominal_renstra_by_in($id);		
		$this->load->view('renstra/send/view', $data);
	}

	function pilih_renstra(){
		$this->load->view('renstra/send/pilih');
	}

	function get_data_pilih_renstra(){
		$search = $this->input->post("search");
		$start = $this->input->post("start");
		$length = $this->input->post("length");
		$order = $this->input->post("order");
		$renstras = $this->input->post("renstras");		

		$id_skpd = $this->session->userdata("id_skpd");		

		$order_arr = array('id','tujuan','sasaran','indikator_sasaran', '','nm_urusan','nm_bidang','ket_program','ket_kegiatan', 'status_renstra');
		$renstra = $this->m_renstra_trx->get_all_renstra($search, $start, $length, $order["0"], $id_skpd, $order_arr, "BARU");
		$alldata = $this->m_renstra_trx->count_all_renstra($search, $id_skpd, "BARU");		
		
		$data = array();
		$no=0;
		foreach ($renstra as $row) {			
			$no++;
			$checked = (!empty($renstras) && in_array($row->id, $renstras))?"checked":"";
			$data[] = array(
							$no, 
							$row->tujuan,
							$row->sasaran,
							$row->indikator_sasaran,
							$row->kd_urusan.". ".$row->kd_bidang.". ".$row->kd_program.". ".$row->kd_kegiatan,
							$row->nm_urusan,
							$row->nm_bidang,
							$row->ket_program,
							$row->ket_kegiatan,
							$row->status_renstra,
							'<input type="checkbox" class="pilih_renstra" title="Pilih Renstra" value="'. $row->id .'" '. $checked .'/>'
							);
		}
		$json = array("recordsTotal"=> $alldata, "recordsFiltered"=> $alldata, 'data' => $data);
		echo json_encode($json);
	}

	function save_sended_renstra(){
		$id = $this->input->post("id");
		$id_skpd = $this->session->userdata("id_skpd");
		$result = $this->m_renstra_trx->send_renstra($id, $id_skpd);

		if ($result) {
			$msg = array('success' => '1', 'msg' => 'Data renstra berhasil dikirim.');
			echo json_encode($msg);
		}else{
			$msg = array('success' => '0', 'msg' => 'FAILED! Data renstra gagal dikirm, terjadi kesalahan pada sistem.');
			echo json_encode($msg);
		}
	}

	function delete_sended_renstra(){
		$id = $this->input->post("id");
		$id_skpd = $this->session->userdata("id_skpd");
		$result = $this->m_renstra_trx->delete_sended_renstra($id, $id_skpd);

		if ($result) {
			$msg = array('success' => '1', 'msg' => 'Data renstra berhasil dihapus.');
			echo json_encode($msg);
		}else{
			$msg = array('success' => '0', 'msg' => 'FAILED! Data renstra gagal dihapus, terjadi kesalahan pada sistem.');
			echo json_encode($msg);
		}	
	}

	private function cetak_func($data=NULL, $id_skpd=NULL, $page=1, $site_url=NULL, $search_skpd=FALSE){		
		$data_per_page = 25;
		$total = $this->m_renstra_trx->count_all_renstra(NULL, $id_skpd, "APPROVED");
		$total_page = round(($total/$data_per_page), 0, PHP_ROUND_HALF_UP);
		
		if ($page > $total_page || $page < 1) {
			$page = 1;
		}

		$start = $page-1;		

		$data['first_page'] = 1;
		$data['page'] = $page;
		$data['last_page'] = $total_page;
		$data['site_url'] = $site_url;
		$data['search_skpd'] = $search_skpd;
		$data['renstra'] = $this->m_renstra_trx->get_all_renstra(NULL, $start, $data_per_page, NULL, $id_skpd, NULL, "APPROVED", TRUE);		
		$data['total_nominal_renstra'] = $this->m_renstra_trx->get_total_nominal_renstra($id_skpd, "APPROVED");
		$this->template->load('template','renstra/cetak/view', $data);
	}

	function cetak_renstra($page=1){
		$this->auth->restrict();

		$id_skpd = array('id_skpd' => $this->session->userdata('id_skpd'));
		$skpd = $this->m_skpd->get_skpd_detail($id_skpd);
		$data['skpd'] = $skpd->row();

		$id_skpd = $this->session->userdata('id_skpd');
		$this->cetak_func($data, $id_skpd, $page, "renstra/cetak_renstra");
	}

	function cetak_renstra_all($page=1, $id_skpd="all"){
		$this->auth->restrict();
		
		$all_skpd = $this->m_skpd->get_data_dropdown_skpd(NULL, TRUE);
		$data['dd_skpd'] = form_dropdown('ss_skpd', $all_skpd, $id_skpd, 'id="ss_skpd"');
		$data['id'] = $id_skpd;

		$this->cetak_func($data, $id_skpd, $page, "renstra/cetak_renstra_all", TRUE);
	}

	function do_cetak($id_skpd=NULL){
		$this->auth->restrict();
		if (empty($id_skpd)) {
			$id_skpd = $this->session->userdata('id_skpd');
		}

		$protocol = stripos($_SERVER['SERVER_PROTOCOL'],'https') === true ? 'https://' : 'http://';
		$header = $this->m_template_cetak->get_value("GAMBAR");		
		$data['logo'] = str_replace("src=\"","height=\"90px\" src=\"".$protocol.$_SERVER['HTTP_HOST'],$header);
		$data['header'] = $this->m_template_cetak->get_value("HEADER");

		$data['renstra'] = $this->m_renstra_trx->get_all_renstra(NULL, NULL, NULL, NULL, $id_skpd, NULL, "APPROVED", TRUE);
		$html = $this->template->load('template_cetak', 'renstra/cetak/cetak', $data, true);
        $filename='Renstra '. $this->session->userdata('nama_skpd') ." ". date("d-m-Y_H-i-s") .'.pdf';        
	    pdf_create($html, $filename, "A4", "Landscape");
	}

	## --------------------------------------- ##
	## Verifikasi Renstra yang telah di kirim  ##
	## --------------------------------------- ##
	/*function veri_view(){
		$this->auth->restrict();
		$all_skpd = $this->m_skpd->get_data_dropdown_skpd(NULL, TRUE);
		$data['dd_skpd'] = form_dropdown('ss_skpd', $all_skpd, NULL, 'id="ss_skpd"');
		$this->template->load('template','renstra/verifikasi/view', $data);
	}

	function get_veri_data(){
		$search = $this->input->post("search");
		$start = $this->input->post("start");
		$length = $this->input->post("length");
		$order = $this->input->post("order");
		$id_skpd = $this->input->post("ss_skpd");

		$order_arr = array('id','','nama_skpd','nama_koor','tujuan','sasaran','indikator_sasaran', '','nm_urusan','nm_bidang','ket_program','ket_kegiatan');
		$renstra = $this->m_renstra_trx->get_all_renstra($search, $start, $length, $order["0"], $id_skpd, $order_arr, "VERIFIKASI", TRUE);		
		$alldata = $this->m_renstra_trx->count_all_renstra($search, $start, $length, $order["0"], $id_skpd, "VERIFIKASI");
		
		$data = array();
		$no=0;
		foreach ($renstra as $row) {
			$no++;
			$preview_action = '<a href="javascript:void(0)" onclick="preview_modal('. $row->id .')" class="icon-search" title="Lihat Renstra"/>';
			$veri_action = '<a href="javascript:void(0)" onclick="veri_renstra('. $row->id .')" class="icon-edit" title="Verifikasi Renstra"/>';
			$history_action = '<a href="javascript:void(0)" onclick="preview_history('. $row->id .')" title="Preview History">'. $row->status_renstra .'</a>';

			$data[] = array(
							$no, 
							$preview_action.$veri_action,
							$row->nama_skpd,
							$row->nama_koor,
							$row->tujuan,
							$row->sasaran,
							$row->indikator_sasaran,
							$row->kd_urusan.". ".$row->kd_bidang.". ".$row->kd_program.". ".$row->kd_kegiatan,
							$row->nm_urusan,
							$row->nm_bidang,
							$row->ket_program,
							$row->ket_kegiatan,
							$history_action
							);
		}
		$json = array("recordsTotal"=> $alldata, "recordsFiltered"=> $alldata, 'data' => $data);
		echo json_encode($json);
	}

	function veri($id_renstra=NULL){
		$this->auth->restrict();

		$result = $this->m_renstra_trx->get_one_renstra_detail($id_renstra, "VERIFIKASI");
		if (empty($result)) {
			$this->session->set_userdata('msg_typ','err');
			$this->session->set_userdata('msg', 'Data renstra tidak ditemukan.');
			redirect('renstra/home');
		}
		$data['renstra'] = $result;	
		$this->template->load('template','renstra/verifikasi/veri', $data);
	}

	function save_veri(){
		$id = $this->input->post("id");
		$veri = $this->input->post("veri");
		$ket = $this->input->post("ket");

		if ($veri == "setuju") {
			$result = $this->m_renstra_trx->approved_renstra($id);
		}elseif ($veri == "tdk_setuju") {
			$result = $this->m_renstra_trx->not_approved_renstra($id, $ket);
		}

		if ($result) {
			$this->session->set_userdata('msg_typ','ok');
			$this->session->set_userdata('msg', 'Renstra berhasil diverifikasi.');
			redirect('renstra/veri_view');
		}else{
			$this->session->set_userdata('msg_typ','err');
			$this->session->set_userdata('msg', 'ERROR! Renstra gagal diverifikasi, mohon menghubungi administrator.');
			redirect('renstra/veri_view');
		}

	}*/
}