<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class M_renstra_trx extends CI_Model 
{
	var $table = 't_renstra';
	var $table_misi = 't_renstra_misi';
	var $table_tujuan = 't_renstra_tujuan';
	var $table_sasaran = 't_renstra_sasaran';
	var $table_program_kegiatan = 't_renstra_prog_keg';

	var $is_program = 1;
	var $is_kegiatan = 2;

	var $id_status_baru = "1";
	var $id_status_send = "2";
	var $id_status_revisi = "3";
	var $id_status_approved = "4";

	//Belum Di pakek 
	//Karena belum ada buat history, nnti buatin history yaww
	var $historynya = 't_history_renstra';
	var $baru = 'Renstra Baru';
	var $edit = 'Renstra Diubah';	
	var $send = 'Pengajuan untuk Diverifikasi';
	var $revisi = 'Tidak Disetujui / Perlu Direvisi';
	var $approved = 'Telah Diverifikasi';
	var $delete_from_sended_list = 'Dihapus Dari Paket Pengiriman (Pernah Dikirim).';	

    public function __construct()
    {
        parent::__construct();           
    }    
	
	##
	## New Generation
	##

	private function create_history($data){		
		$data['created_date'] = date("Y-m-d H:i:s");
		$data['created_by'] = $this->session->userdata('username');
		return $data;
	}

	private function change_history($data){		
		$data['changed_date'] = date("Y-m-d H:i:s");
		$data['changed_by'] = $this->session->userdata('username');
		return $data;
	}

	private function add_misi($misi){
		$this->db->insert_batch($this->table_misi, $misi);
	}

	private function add_tujuan($tujuan){
		$this->db->insert_batch($this->table_tujuan, $tujuan);
	}

	private function update_tujuan($tujuan, $id){
		$this->db->where("id", $id);
		$this->db->update($this->table_tujuan, $tujuan);
	}

	function get_one_renstra_skpd($id_skpd, $detail=FALSE){
		$this->db->select($this->table.".*");
		$this->db->from($this->table);
		$this->db->where($this->table.".id_skpd", $id_skpd);

		if ($detail) {
			$this->db->select("nama_skpd");
			$this->db->join("m_skpd","t_renstra.id_skpd = m_skpd.id_skpd","inner");
		}

		$result = $this->db->get();
		return $result->row();
	}

	function get_all_renstra_misi($id_renstra, $no_result=FALSE){
		$this->db->from($this->table_misi);		
		$this->db->where("id_renstra", $id_renstra);
		$result = $this->db->get();
		if ($no_result) {
			return $result;
		}else{
			return $result->result();
		}		
	}

	function get_all_renstra_tujuan($id_renstra, $no_result=FALSE){
		$this->db->from($this->table_tujuan);		
		$this->db->where("id_renstra", $id_renstra);
		$result = $this->db->get();
		if ($no_result) {
			return $result;
		}else{
			return $result->result();
		}	
	}

	function get_one_renstra_tujuan($id_renstra, $id_tujuan){
		$this->db->from($this->table_tujuan);
		$this->db->where("id_renstra", $id_renstra);
		$this->db->where("id", $id_tujuan);
		$result = $this->db->get();
		return $result->row();
	}

	function add_renstra_skpd($data, $misi, $tujuan){
		$this->db->trans_strict(FALSE);
		$this->db->trans_start();
		
		$data = $this->create_history($data);

		$this->db->insert($this->table, $data);
		$id_renstra = $this->db->insert_id();

		$misi_batch = array();
		foreach ($misi as $value) {
			$misi_batch[] = array('id_renstra' => $id_renstra, 'misi' => $value);
		}

		$tujuan_batch = array();
		foreach ($tujuan as $value) {
			$tujuan_batch[] = array('id_renstra' => $id_renstra, 'tujuan' => $value);
		}

		$this->add_misi($misi_batch);
		$this->add_tujuan($tujuan_batch);

		$this->db->trans_complete();
		return $this->db->trans_status();
	}

	function edit_renstra_skpd($data, $misi, $tujuan, $id_tujuan, $id_renstra){
		$this->db->trans_strict(FALSE);
		$this->db->trans_start();
		
		$data = $this->change_history($data);

		$this->db->update($this->table, $data);		

		$misi_batch = array();
		foreach ($misi as $value) {
			$misi_batch[] = array('id_renstra' => $id_renstra, 'misi' => $value);
		}		

		$this->db->where('id_renstra', $id_renstra);
		$this->db->delete($this->table_misi);
		$this->add_misi($misi_batch);

		//tujuan batch untuk yg baru
		$tujuan_batch = array();
		foreach ($tujuan as $key => $value) {
			if (!empty($id_tujuan[$key])) {
				//update tujuannya
				$this->update_tujuan(array('tujuan' => $value), $id_tujuan[$key]);
				unset($id_tujuan[$key]);
			}else{
				$tujuan_batch[] = array('id_renstra' => $id_renstra, 'tujuan' => $value);
			}			
		}

		if (!empty($tujuan_batch)) {
			$this->add_tujuan($tujuan_batch);
		}		

		if (!empty($id_tujuan)) {			
			$this->db->where_in('id', $id_tujuan);
			$this->db->delete($this->table_tujuan);			
		}		

		$this->db->trans_complete();
		return $this->db->trans_status();
	}	

	function get_all_sasaran($id_renstra, $id_tujuan, $with_satuan){
		$this->db->select($this->table_sasaran.".*");
		$this->db->where('id_renstra', $id_renstra);
		$this->db->where('id_tujuan', $id_tujuan);
		$this->db->from($this->table_sasaran);

		if ($with_satuan) {
			$this->db->select("m_lov.nama_value");
			$this->db->join("m_lov",$this->table_sasaran.".satuan = m_lov.kode_value AND kode_app='1'","inner");
		}

		$result = $this->db->get();
		return $result->result();
	}

	function get_one_sasaran($id_renstra=NULL, $id_tujuan=NULL, $id_sasaran){
		if (!empty($id_renstra)) {
			$this->db->where('id_renstra', $id_renstra);
		}
		
		if (!empty($id_tujuan)) {
			$this->db->where('id_tujuan', $id_tujuan);
		}

		$this->db->where('id', $id_sasaran);
		$this->db->from($this->table_sasaran);	
		$result = $this->db->get();
		return $result->row();
	}

	function add_sasaran_skpd($data){
		$result = $this->db->insert($this->table_sasaran, $data);
		return $result;
	}

	function edit_sasaran_skpd($data, $id_sasaran){
		$this->db->where('id', $id_sasaran);
		$result = $this->db->update($this->table_sasaran, $data);
		return $result;
	}

	function delete_sasaran($id){
		$this->db->where('id', $id);		
		$result = $this->db->delete($this->table_sasaran); 
		return $result;
	}

	function get_all_program($id_renstra, $id_sasaran, $with_satuan){
		$this->db->select($this->table_program_kegiatan.".*");
		$this->db->where('id_renstra', $id_renstra);
		$this->db->where('id_sasaran', $id_sasaran);
		$this->db->where('is_prog_or_keg', $this->is_program);
		$this->db->from($this->table_program_kegiatan);

		if ($with_satuan) {
			$this->db->select("m_lov.nama_value");
			$this->db->join("m_lov",$this->table_program_kegiatan.".satuan_target = m_lov.kode_value AND kode_app='1'","inner");
		}

		$result = $this->db->get();
		return $result->result();
	}

	function get_one_program($id_renstra=NULL, $id_sasaran=NULL, $id_program){
		if (!empty($id_renstra)) {
			$this->db->where('id_renstra', $id_renstra);
		}
		
		if (!empty($id_sasaran)) {
			$this->db->where('id_sasaran', $id_sasaran);
		}

		$this->db->where('id', $id_program);
		$this->db->from($this->table_program_kegiatan);	
		$result = $this->db->get();
		return $result->row();
	}

	function get_info_tujuan_n_sasaran_n_program($id_tujuan=NULL, $id_sasaran=NULL, $id_program=NULL){
		$this->db->select($this->table_tujuan.".tujuan");
		$this->db->from($this->table_tujuan);
		if (!empty($id_tujuan)) {
			$this->db->where('id_tujuan', $id_tujuan);
		}
		if (!empty($id_sasaran)) {
			$this->db->select($this->table_sasaran.".sasaran");
			$this->db->join($this->table_sasaran,$this->table_sasaran.".id_tujuan = ". $this->table_tujuan .".id","inner");			
			$this->db->where($this->table_sasaran.'.id', $id_sasaran);
		}
		if (!empty($id_program)) {
			$this->db->select($this->table_program_kegiatan.".kd_urusan");
			$this->db->select($this->table_program_kegiatan.".kd_bidang");
			$this->db->select($this->table_program_kegiatan.".kd_program");
			$this->db->select($this->table_program_kegiatan.".nama_prog_or_keg");
			$this->db->join($this->table_program_kegiatan,$this->table_program_kegiatan.".id_sasaran = ". $this->table_sasaran .".id","inner");			
			$this->db->where($this->table_program_kegiatan.'.id', $id_program);
		}

		$result = $this->db->get();
		return $result->row();
	}

	function add_program_skpd($data){
		$add = array('is_prog_or_keg'=> $this->is_program);
		$data = $this->global_function->add_array($data, $add);		

		$result = $this->db->insert($this->table_program_kegiatan, $data);
		return $result;
	}

	function edit_program_skpd($data, $id_program){
		$add = array('is_prog_or_keg'=> $this->is_program);
		$data = $this->global_function->add_array($data, $add);		

		$this->db->where('id', $id_program);
		$result = $this->db->update($this->table_program_kegiatan, $data);
		return $result;
	}

	function delete_program($id){
		$this->db->trans_strict(FALSE);
		$this->db->trans_start();

		$this->db->where('id', $id);
		$this->db->where('is_prog_or_keg', $this->is_program);
		$this->db->delete($this->table_program_kegiatan); 

		$this->db->where('parent', $id);
		$this->db->where('is_prog_or_keg', $this->id_kegiatan);
		$this->db->delete($this->table_program_kegiatan); 
		
		$this->db->trans_complete();
		return $this->db->trans_status();
	}

	function get_all_kegiatan($id_renstra, $id_sasaran, $id_program, $with_satuan){
		$this->db->select($this->table_program_kegiatan.".*");
		$this->db->where('id_renstra', $id_renstra);
		$this->db->where('id_sasaran', $id_sasaran);
		$this->db->where('parent', $id_program);
		$this->db->where('is_prog_or_keg', $this->is_kegiatan);
		$this->db->from($this->table_program_kegiatan);

		if ($with_satuan) {
			$this->db->select("m_lov.nama_value");
			$this->db->join("m_lov",$this->table_program_kegiatan.".satuan_target = m_lov.kode_value AND kode_app='1'","inner");
		}

		$result = $this->db->get();
		return $result->result();
	}
	
	function add_kegiatan_skpd($data){
		$add = array('is_prog_or_keg'=> $this->is_kegiatan, 'id_status'=> $this->id_status_baru);
		$data = $this->global_function->add_array($data, $add);		

		$result = $this->db->insert($this->table_program_kegiatan, $data);
		return $result;
	}

	function edit_kegiatan_skpd($data, $id_kegiatan){
		$add = array('is_prog_or_keg'=> $this->is_kegiatan);
		$data = $this->global_function->add_array($data, $add);		

		$this->db->where('id', $id_kegiatan);
		$result = $this->db->update($this->table_program_kegiatan, $data);
		return $result;
	}

	function delete_kegiatan($id){
		$this->db->where('id', $id);
		$this->db->where('is_prog_or_keg', $this->is_kegiatan);
		$result = $this->db->delete($this->table_program_kegiatan); 
		return $result;
	}

	function get_one_kegiatan($id_renstra=NULL, $id_sasaran=NULL, $id_program=NULL, $id_kegiatan, $detail=FALSE){		
		if (!empty($id_renstra)) {
			$this->db->where('id_renstra', $id_renstra);
		}
		
		if (!empty($id_sasaran)) {
			$this->db->where('id_sasaran', $id_sasaran);
		}

		if (!empty($id_program)) {
			$this->db->where('parent', $id_program);
		}

		if ($detail) {
			$this->db->select($this->table_program_kegiatan.".*");
			$this->db->select("nama_skpd");
			$this->db->select("tujuan");
			$this->db->select("sasaran, indikator");
			$this->db->select("m_lov.nama_value");

			$this->db->join($this->table, $this->table_program_kegiatan.".id_renstra = ".$this->table.".id","inner");
			$this->db->join("m_skpd", $this->table.".id_skpd = m_skpd.id_skpd","inner");
			$this->db->join($this->table_sasaran, $this->table_program_kegiatan.".id_sasaran = ".$this->table_sasaran.".id","inner");
			$this->db->join($this->table_tujuan, $this->table_sasaran.".id_tujuan = ".$this->table_tujuan.".id","inner");			
			$this->db->join("m_lov",$this->table_program_kegiatan.".satuan_target = m_lov.kode_value AND kode_app='1'","inner");

			$this->db->select("m_urusan.Nm_Urusan");
			$this->db->select("m_bidang.Nm_Bidang");
			$this->db->select("m_program.Ket_Program");
			$this->db->join("m_urusan",$this->table_program_kegiatan.".kd_urusan = m_urusan.Kd_Urusan","inner");
			$this->db->join("m_bidang",$this->table_program_kegiatan.".kd_urusan = m_bidang.Kd_Urusan AND ".$this->table_program_kegiatan.".kd_bidang = m_bidang.Kd_Bidang","inner");
			$this->db->join("m_program",$this->table_program_kegiatan.".kd_urusan = m_program.Kd_Urusan AND ".$this->table_program_kegiatan.".kd_bidang = m_program.Kd_Bidang AND ".$this->table_program_kegiatan.".kd_program = m_program.Kd_Prog","inner");
		}

		$this->db->where($this->table_program_kegiatan.'.id', $id_kegiatan);
		$this->db->from($this->table_program_kegiatan);	
		$result = $this->db->get();
		return $result->row();
	}
	
	function kirim_renstra($id_skpd){
		$this->db->where($this->table.".id_skpd", $id_skpd);
		$this->db->where($this->table_program_kegiatan.".id_status !=", $this->id_status_approved);
		$return = $this->db->update($this->table_program_kegiatan." INNER JOIN ". $this->table ." ON ". $this->table_program_kegiatan .".id_renstra=". $this->table .".id", array($this->table_program_kegiatan.'.id_status'=>$this->id_status_send));
		return $return;
	}

	function count_jendela_kontrol($id_skpd){
		$query = "SELECT SUM(IF(t_renstra_prog_keg.id_status=?, 1, 0)) as baru, SUM(IF(t_renstra_prog_keg.id_status>=?, 1, 0)) as kirim, SUM(IF(t_renstra_prog_keg.id_status>?, 1, 0)) as proses, SUM(IF(t_renstra_prog_keg.id_status=?, 1, 0)) as revisi, SUM(IF(t_renstra_prog_keg.id_status=?, 1, 0)) as veri FROM t_renstra_prog_keg INNER JOIN t_renstra ON t_renstra_prog_keg.id_renstra=t_renstra.id WHERE t_renstra.id_skpd=? AND is_prog_or_keg=?";
		$data = array($this->id_status_baru, $this->id_status_send, $this->id_status_send, $this->id_status_revisi, $this->id_status_approved, $id_skpd, $this->is_program);
		$result = $this->db->query($query, $data);
		return $result->row();
	}

	function get_all_renstra($search, $start, $length, $order, $id_skpd, $order_arr, $status = NULL, $detail = FALSE){		
		$this->db->select($this->table_program_kegiatan.".*");
		$this->db->select("status_renstra");
		$this->db->from($this->table_program_kegiatan);
		$this->db->join($this->table,$this->table.".id = ". $this->table_program_kegiatan .".id_renstra","inner");
		$this->db->where($this->table_program_kegiatan.".is_prog_or_keg", $this->is_kegiatan);
				
		if ($id_skpd != "all") {			
			$this->db->where($this->table.".id_skpd", $id_skpd);
		}
		if ($status=="BARU") {
			$this->db->where("id_status", $this->id_status_baru);
		}elseif ($status=="VERIFIKASI") {
			$this->db->where("id_status", $this->id_status_send);
		}elseif ($status=="APPROVED") {
			$this->db->where("id_status", $this->id_status_approved);
		}
		if (!is_null($search)) {
			$this->db->where("(CONCAT(kd_urusan,\".\",kd_bidang,\".\",kd_program,\".\",kd_kegiatan) LIKE '%". $search['value'] ."%' OR nama_prog_or_keg LIKE '%". $search['value'] ."%' OR indikator_kinerja LIKE '%". $search['value'] ."%' OR status_renstra LIKE '%". $search['value'] ."%')");
		}

		if ($detail) {			
			$this->db->select("m_bidkoordinasi.nama_koor");
			$this->db->select("m_skpd.nama_skpd");
			$this->db->join("m_skpd",$this->table.".id_skpd = m_skpd.id_skpd","inner");
			$this->db->join("m_bidkoordinasi","m_skpd.id_bidkoor = m_bidkoordinasi.id_bidkoor","inner");
		}
		
		if (!is_null($length) && !is_null($start)) {
			$this->db->limit($length, $start);
		}
		if (!is_null($order)) {
			$this->db->order_by($order_arr[$order["column"]], $order["dir"]); 
		}		

		$this->db->join("m_status_renstra",$this->table_program_kegiatan.".id_status = m_status_renstra.id","inner");
		$result = $this->db->get();
		return $result->result();
	}

	function count_all_renstra($search, $id_skpd, $status = NULL){		
		$this->db->from($this->table_program_kegiatan);
		$this->db->join($this->table,$this->table.".id = ". $this->table_program_kegiatan .".id_renstra","inner");
		$this->db->where($this->table_program_kegiatan.".is_prog_or_keg", $this->is_kegiatan);

		if ($id_skpd != "all") {			
			$this->db->where($this->table.".id_skpd", $id_skpd);
		}
		if ($status=="BARU") {
			$this->db->where("id_status", $this->id_status_baru);
		}elseif ($status=="VERIFIKASI") {
			$this->db->where("id_status", $this->id_status_send);
		}elseif ($status=="APPROVED") {
			$this->db->where("id_status", $this->id_status_approved);
		}
		if (!is_null($search)) {
			$this->db->where("(CONCAT(kd_urusan,\".\",kd_bidang,\".\",kd_program,\".\",kd_kegiatan) LIKE '%". $search['value'] ."%' OR nama_prog_or_keg LIKE '%". $search['value'] ."%' OR indikator_kinerja LIKE '%". $search['value'] ."%' OR status_renstra LIKE '%". $search['value'] ."%')");
		}

		$this->db->join("m_status_renstra",$this->table_program_kegiatan.".id_status = m_status_renstra.id","inner");
		$result = $this->db->count_all_results();
		return $result;
	}
	###############################################################################################################

	private function add_history($id_renstra, $status, $keterangan=NULL){
		$history = array('id_renstra' => $id_renstra, 'status_renstra' => $status, 'create_date'=>date("Y-m-d H:i:s"), 'user'=>$this->session->userdata('username'));
		if (!empty($keterangan)) {
			$history['keterangan'] = $keterangan;
		}
		$result = $this->db->insert($this->historynya, $history);
		return $result;
	}

	function add($data){
		$this->db->trans_strict(FALSE);
		$this->db->trans_start();

		$result = $this->db->insert($this->table, $data); 
		$insert_id = $this->db->insert_id();

		$this->add_history($insert_id, $this->baru);
		
		$this->db->trans_complete();
		return $this->db->trans_status();
	} 

	function edit($data, $id){
		$this->db->trans_strict(FALSE);
		$this->db->trans_start();

		$this->db->where('id', $id);
		$result = $this->db->update($this->table, $data); 		

		$this->add_history($id, $this->edit);
		
		$this->db->trans_complete();
		return $this->db->trans_status();
	} 

	function delete($id, $id_skpd){		
		$this->db->where('id', $id);
		$this->db->where("id_skpd", $id_skpd);
		$result = $this->db->delete($this->table); 
		return $result;
	}

	function get_one_renstra($id_renstra, $id_skpd){
		$this->db->from($this->table);
		$this->db->where("id_skpd", $id_skpd);
		$this->db->where("id", $id_renstra);		
		$result = $this->db->get();
		return $result->row();
	}

	function get_one_renstra_detail($id_renstra, $status=NULL){
		$this->db->select("t_renstra.*");
		$this->db->select("status_renstra");
		$this->db->select("m_bidkoordinasi.nama_koor");
		$this->db->select("m_skpd.nama_skpd");
		
		$this->db->from($this->table);		
		$this->db->where("t_renstra.id", $id_renstra);

		if ($status=="BARU") {
			$this->db->where("id_status", $this->id_status_baru);
		}elseif ($status=="VERIFIKASI") {
			$this->db->where("id_status", $this->id_status_send);
		}elseif ($status=="APPROVED") {
			$this->db->where("id_status", $this->id_status_approved);
		}

		$this->db->join("m_skpd","t_renstra.id_skpd = m_skpd.id_skpd","inner");
		$this->db->join("m_bidkoordinasi","t_renstra.id_bidkoor = m_bidkoordinasi.id_bidkoor","inner");		
		$this->db->join("m_status_renstra","t_renstra.id_status = m_status_renstra.id","inner");
		
		$result = $this->db->get();
		return $result->row();
	}

	function get_all_histories_renstra($id_renstra){
		$this->db->where("id_renstra", $id_renstra);
		$this->db->from($this->historynya);
		$this->db->order_by("create_date", "DESC"); 
		$result = $this->db->get();
		return $result->result();
	}

	/*
	function get_all_renstra($search, $start, $length, $order, $id_skpd, $order_arr, $status = NULL, $detail = FALSE){		
		$this->db->select("t_renstra.*");
		$this->db->select("status_renstra");
		$this->db->from($this->table);
				
		if ($id_skpd != "all") {
			$this->db->where("t_renstra.id_skpd", $id_skpd);
		}
		if ($status=="BARU") {
			$this->db->where("id_status", $this->id_status_baru);
		}elseif ($status=="VERIFIKASI") {
			$this->db->where("id_status", $this->id_status_send);
		}elseif ($status=="APPROVED") {
			$this->db->where("id_status", $this->id_status_approved);
		}
		if (!is_null($search)) {
			$this->db->where("(tujuan LIKE '%". $search['value'] ."%' OR sasaran LIKE '%". $search['value'] ."%' OR indikator_sasaran LIKE '%". $search['value'] ."%' OR kd_urusan LIKE '%". $search['value'] ."%' OR kd_bidang LIKE '%". $search['value'] ."%' OR kd_program LIKE '%". $search['value'] ."%' OR kd_kegiatan LIKE '%". $search['value'] ."%' OR nm_urusan LIKE '%". $search['value'] ."%' OR nm_bidang LIKE '%". $search['value'] ."%' OR ket_program LIKE '%". $search['value'] ."%' OR ket_kegiatan LIKE '%". $search['value'] ."%' OR status_renstra LIKE '%". $search['value'] ."%')");		
		}

		if ($detail) {			
			$this->db->select("m_bidkoordinasi.nama_koor");
			$this->db->select("m_skpd.nama_skpd");
			$this->db->join("m_skpd","t_renstra.id_skpd = m_skpd.id_skpd","inner");
			$this->db->join("m_bidkoordinasi","t_renstra.id_bidkoor = m_bidkoordinasi.id_bidkoor","inner");
		}
		
		if (!is_null($length) && !is_null($start)) {
			$this->db->limit($length, $start);
		}
		if (!is_null($order)) {
			$this->db->order_by($order_arr[$order["column"]], $order["dir"]); 
		}		

		$this->db->join("m_status_renstra","t_renstra.id_status = m_status_renstra.id","inner");
		$result = $this->db->get();
		return $result->result();
	}

	function count_all_renstra($search, $id_skpd, $status = NULL){
		$this->db->from($this->table);

		if ($id_skpd != "all") {
			$this->db->where("id_skpd", $id_skpd);
		}
		if ($status=="BARU") {
			$this->db->where("id_status", $this->id_status_baru);
		}elseif ($status=="VERIFIKASI") {
			$this->db->where("id_status", $this->id_status_send);
		}elseif ($status=="APPROVED") {
			$this->db->where("id_status", $this->id_status_approved);
		}
		if (!is_null($search)) {
			$this->db->where("(tujuan LIKE '%". $search['value'] ."%' OR sasaran LIKE '%". $search['value'] ."%' OR indikator_sasaran LIKE '%". $search['value'] ."%' OR kd_urusan LIKE '%". $search['value'] ."%' OR kd_bidang LIKE '%". $search['value'] ."%' OR kd_program LIKE '%". $search['value'] ."%' OR kd_kegiatan LIKE '%". $search['value'] ."%' OR nm_urusan LIKE '%". $search['value'] ."%' OR nm_bidang LIKE '%". $search['value'] ."%' OR ket_program LIKE '%". $search['value'] ."%' OR ket_kegiatan LIKE '%". $search['value'] ."%' OR status_renstra LIKE '%". $search['value'] ."%')");
		}

		$this->db->join("m_status_renstra","t_renstra.id_status = m_status_renstra.id","inner");		
		$result = $this->db->count_all_results();
		return $result;
	}
	*/

	function get_all_id_renstra_veri_or_approved_to_json($id_skpd){
		$this->db->select("GROUP_CONCAT(id) AS id");
		$this->db->where("id_status !=", $this->id_status_baru);
		$this->db->from($this->table);
		$result = $this->db->get();
		$data = $result->row();
		$id_array = explode(",", $data->id);
		return json_encode($id_array);
	}

	function get_all_renstra_by_in($id, $noresult=FALSE){
		$this->db->select("t_renstra.*");
		$this->db->select("status_renstra");
		$this->db->where_in('t_renstra.id', $id);
		$this->db->from($this->table);		
		$this->db->join("m_status_renstra","t_renstra.id_status = m_status_renstra.id","inner");
		$result = $this->db->get();
		if (!$noresult) {
			return $result->result();
		}else{
			return $result;
		}
	}

	function get_total_nominal_renstra($id_skpd=NULL, $status = NULL){
		$this->db->select('COUNT(t_renstra.id) AS count');
		$this->db->select_sum('nominal_1');
		$this->db->select_sum('nominal_2');
		$this->db->select_sum('nominal_3');
		$this->db->select_sum('nominal_4');
		$this->db->select_sum('nominal_5');

		if ($status=="BARU") {
			$this->db->where("id_status", $this->id_status_baru);
		}elseif ($status=="VERIFIKASI") {
			$this->db->where("id_status", $this->id_status_send);
		}elseif ($status=="APPROVED") {
			$this->db->where("id_status", $this->id_status_approved);
		}

		if (!is_null($id_skpd) && $id_skpd != "all") {
			$this->db->where("t_renstra.id_skpd", $id_skpd);
		}		

		$this->db->from($this->table);

		$result = $this->db->get();		
		return $result->row();		
	}

	function get_total_nominal_renstra_by_in($id){
		$this->db->select('COUNT(t_renstra.id) AS count');
		$this->db->select_sum('nominal_1');
		$this->db->select_sum('nominal_2');
		$this->db->select_sum('nominal_3');
		$this->db->select_sum('nominal_4');
		$this->db->select_sum('nominal_5');
		$this->db->where_in('t_renstra.id', $id);
		$this->db->where("id_status", $this->id_status_approved);
		$this->db->from($this->table);
		$this->db->join("m_status_renstra","t_renstra.id_status = m_status_renstra.id","inner");		
		$result = $this->db->get();		
		return $result->row();		
	}	

	function send_renstra($id, $id_skpd){
		$this->db->trans_strict(FALSE);
		$this->db->trans_start();

		$this->db->select("id");
		$this->db->from($this->table);
		$this->db->where_in('id', $id);
		$this->db->where("id_skpd", $id_skpd);
		$this->db->where("(id_status=". $this->id_status_baru ." OR id_status=". $this->id_status_revisi .")");
		$result = $this->db->get();
		$result = $result->result();		
		
		foreach ($result as $value) {
			$id = $value->id;
			$this->db->set("id_status", $this->id_status_send);
			$this->db->where("id", $value->id);
			$this->db->update($this->table);

			$this->add_history($value->id, $this->send);
		}

		$this->db->trans_complete();
		return $this->db->trans_status();
	}

	function delete_sended_renstra($id, $id_skpd){
		$this->db->trans_strict(FALSE);
		$this->db->trans_start();

		$this->db->where('id', $id);
		$this->db->where("id_skpd", $id_skpd);
		$this->db->set("id_status", $this->id_status_baru);		
		$result = $this->db->update($this->table);

		$this->add_history($id, $this->delete_from_sended_list);
		
		$this->db->trans_complete();
		return $this->db->trans_status();
	}

	function approved_renstra($id){
		$this->db->trans_strict(FALSE);
		$this->db->trans_start();

		$this->db->where('id', $id);
		$this->db->set("id_status", $this->id_status_approved);
		$result = $this->db->update($this->table);

		$this->add_history($id, $this->approved);
		
		$this->db->trans_complete();
		return $this->db->trans_status();
	}

	function not_approved_renstra($id, $ket){
		$this->db->trans_strict(FALSE);
		$this->db->trans_start();

		$this->db->where('id', $id);
		$this->db->set("id_status", $this->id_status_revisi);		
		$result = $this->db->update($this->table);

		$this->add_history($id, $this->revisi, $ket);
		
		$this->db->trans_complete();
		return $this->db->trans_status();
	}
}
?>